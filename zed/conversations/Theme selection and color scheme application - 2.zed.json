{"id":"d0bcf0c4-014e-40d2-9b9c-52a00843a34d","zed":"context","version":"0.4.0","text":"How to get the selected theme value from the dropdown to change the base colors, cursor colors, and color palette\n```ts ghostty-config/src/lib/stores/config.svelte.ts\nimport {dev} from \"$app/environment\";\nimport settings, {type KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"$lib/utils/colors\";\n// import defs from \"../data/defaults.json\";\n\n// TODO: find a good way to properly type the config\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaults: Partial<Record<keyof DefaultConfig, any>> = {};\n\nfor (const panel of settings) {\n    for (const group of panel.groups) {\n        for (const setting of group.settings) {\n            defaults[setting.id as keyof typeof defaults] = setting.value;\n        }\n    }\n}\n\nif (dev) {\n    // eslint-disable-next-line no-console\n    console.log(defaults);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\n\nexport function keyToConfig(key: string) {\n    return key.replaceAll(/([A-Z])/g, \"-$1\").toLowerCase();\n}\n\nexport function diff() {\n    // TODO: more elegance\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const output: Partial<Record<keyof typeof defaults|string, any>> = {};\n\n    for (const k in config) {\n        const key = k as keyof DefaultConfig;\n        if (Array.isArray(config[key]) && key === \"keybind\") {\n            const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (Array.isArray(config[key]) && key === \"palette\") {\n            const toAdd = [];\n            for (let p = 0; p < defaults[key].length; p++) {\n                if (config[key][p] === defaults[key][p]) continue;\n                toAdd.push(`${p}=${config[key][p]}`);\n            }\n            // const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (config[key] != defaults[key]) {\n            output[keyToConfig(key)] = config[key];\n        }\n    }\n\n    return output;\n}\n\nexport function load(conf: Partial<typeof config>) {\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n        }\n        else if (key === \"palette\") {\n            for (let p = 0; p < conf.palette.length; p++) {\n                if (!conf.palette[p]) continue;\n                config.palette[p] = conf.palette[p];\n            }\n        }\n    }\n}\n\nexport default config;\n\n\n// TODO: is this useful?\ninterface DefaultConfig {\n    palette: HexColor[];\n    keybind: KeybindString[];\n    fontFamily: string;\n    fontFamilyBold: string;\n    fontFamilyItalic: string;\n    fontFamilyBoldItalic: string;\n    fontStyle: string;\n    fontStyleBold: string;\n    fontStyleItalic: string;\n    fontStyleBoldItalic: string;\n    fontFeature: string;\n    fontSize: number;\n    fontVariation: string;\n    fontVariationBold: string;\n    fontVariationItalic: string;\n    fontVariationBoldItalic: string;\n    fontCodepointMap: string;\n    fontThicken: boolean;\n    adjustCellWidth: string;\n    adjustCellHeight: string;\n    adjustFontBaseline: string;\n    adjustUnderlinePosition: string;\n    adjustUnderlineThickness: string;\n    adjustStrikethroughPosition: string;\n    adjustStrikethroughThickness: string;\n    adjustCursorThickness: string;\n    graphemeWidthMethod: string;\n    theme: string;\n    background: HexColor;\n    foreground: HexColor;\n    selectionForeground: string;\n    selectionBackground: string;\n    selectionInvertFgBg: boolean;\n    minimumContrast: number;\n    cursorColor: string;\n    cursorInvertFgBg: boolean;\n    cursorOpacity: number;\n    cursorStyle: string;\n    cursorStyleBlink: string;\n    cursorText: string;\n    cursorClickToMove: boolean;\n    mouseHideWhileTyping: boolean;\n    mouseShiftCapture: boolean;\n    mouseScrollMultiplier: number;\n    backgroundOpacity: number;\n    backgroundBlurRadius: number;\n    unfocusedSplitOpacity: number;\n    unfocusedSplitFill: string;\n    command: string;\n    waitAfterCommand: boolean;\n    abnormalCommandExitRuntime: number;\n    scrollbackLimit: number;\n    linkUrl: boolean;\n    fullscreen: boolean;\n    title: string;\n    class: string;\n    workingDirectory: string;\n    windowPaddingX: number;\n    windowPaddingY: number;\n    windowPaddingBalance: boolean;\n    windowPaddingColor: string;\n    windowVsync: boolean;\n    windowInheritWorkingDirectory: boolean;\n    windowInheritFontSize: boolean;\n    windowDecoration: boolean;\n    windowTitleFontFamily: string;\n    windowTheme: string;\n    windowColorspace: string;\n    windowHeight: number;\n    windowWidth: number;\n    windowSaveState: string;\n    windowStepResize: boolean;\n    windowNewTabPosition: string;\n    resizeOverlay: string;\n    resizeOverlayPosition: string;\n    resizeOverlayDuration: string;\n    focusFollowsMouse: boolean;\n    clipboardRead: string;\n    clipboardWrite: string;\n    clipboardTrimTrailingSpaces: boolean;\n    clipboardPasteProtection: boolean;\n    clipboardPasteBracketedSafe: boolean;\n    imageStorageLimit: number;\n    copyOnSelect: boolean;\n    clickRepeatInterval: number;\n    configFile: string;\n    configDefaultFiles: boolean;\n    confirmCloseSurface: boolean;\n    quitAfterLastWindowClosed: boolean;\n    quitAfterLastWindowClosedDelay: string;\n    initialWindow: boolean;\n    shellIntegration: string;\n    shellIntegrationFeatures: string;\n    oscColorReportFormat: string;\n    vtKamAllowed: boolean;\n    customShader: string;\n    customShaderAnimation: boolean;\n    macosNonNativeFullscreen: boolean;\n    macosTitlebarStyle: string;\n    macosOptionAsAlt: boolean;\n    macosWindowShadow: boolean;\n    linuxCgroup: string;\n    linuxCgroupMemoryLimit: string;\n    linuxCgroupProcessesLimit: string;\n    linuxCgroupHardFail: boolean;\n    gtkSingleInstance: string;\n    gtkTitlebar: boolean;\n    gtkTabsLocation: string;\n    gtkWideTabs: boolean;\n    gtkAdwaita: boolean;\n    desktopNotifications: boolean;\n    boldIsBright: boolean;\n    term: string;\n    enquiryResponse: string;\n}\n```\n\n```ts ghostty-config/src/lib/data/settings.ts\nimport config from \"$lib/stores/config.svelte\";\nimport type {HexColor} from \"$lib/utils/colors\";\n\ninterface BaseSettingType {\n    id: string;\n    name: string;\n    note?: string;\n}\n\ninterface Panel extends BaseSettingType {\n    groups: Group[];\n}\n\ninterface Group extends BaseSettingType {\n    settings: (Switch | Text | Number | Dropdown | Color | Palette | Keybinds)[];\n    // type: \"group\";\n}\n\ntype SettingType = \"switch\" | \"number\" | \"dropdown\" | \"text\" | \"color\" | \"palette\" | \"keybinds\";\n\ninterface BaseSettingItem extends BaseSettingType {\n    type: SettingType;\n    value: unknown;\n}\n\ninterface Switch extends BaseSettingItem {\n    type: \"switch\";\n    value: boolean;\n}\n\ninterface Text extends BaseSettingItem {\n    type: \"text\";\n    value: string;\n}\n\ninterface Number extends BaseSettingItem {\n    type: \"number\";\n    value: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    size?: number;\n    range?: boolean;\n}\n\ninterface DropdownOption {\n    name: string;\n    value: string;\n}\n\ninterface Dropdown extends BaseSettingItem {\n    type: \"dropdown\";\n    value: \"string\";\n    options: (DropdownOption | string)[];\n}\n\ninterface Color extends BaseSettingItem {\n    value: HexColor;\n    type: \"color\";\n}\n\ninterface Palette extends BaseSettingItem {\n    value: HexColor[];\n    type: \"palette\";\n}\n\nexport type KeybindString = `${string}=${string}`;\ninterface Keybinds extends BaseSettingItem {\n    value: KeybindString[];\n    type: \"keybinds\";\n}\n\ninterface ThemeResponse {\n  \"type\": string;\n  \"encoding\": string;\n  \"size\": number;\n  \"name\": string;\n  \"path\": string;\n  \"content\": string;\n  \"sha\": string;\n  \"url\": string;\n  \"git_url\": string;\n  \"html_url\": string;\n  \"download_url\": string;\n  \"_links\": {\n    \"git\": string;\n    \"self\": string;\n    \"html\": string;\n  }\n}\n\ninterface ColorScheme {\n  palette: { [key: string]: string };\n  background?: string;\n  foreground?: string;\n  cursorColor?: string;\n  selectionBackground?: string;\n  selectionForeground?: string;\n}\n\nconst fetchThemeFiles = async () => {\n    const apiUrl = \"https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty\";\n\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const themeFiles = await response.json();\n\n    return {themeFiles};\n};\n\n// Function to convert raw string data into a JSON object\nconst parseColorScheme = (input: string): ColorScheme => {\n  const colorScheme: ColorScheme = {palette: {}};\n\n  // Split input by lines\n  const lines = input.split(\"\\n\");\n\n  lines.forEach((line) => {\n    if (line.startsWith(\"palette\")) {\n      const [, rest] = line.split(\"palette =\").map(part => part.trim());\n\n      if (rest) {\n        const [paletteIndex, color] = rest.split(\"=\");\n        if (paletteIndex && color) {\n          colorScheme.palette[paletteIndex.trim()] = color.trim();\n        }\n      }\n    }\n    else {\n      const [key, value] = line.split(\"=\").map(part => part.trim());\n\n      switch (key) {\n        case \"background\":\n          colorScheme.background = `#${value}`;\n          break;\n        case \"foreground\":\n          colorScheme.foreground = `#${value}`;\n          break;\n        case \"cursor-color\":\n          colorScheme.cursorColor = `#${value}`;\n          break;\n        case \"selection-background\":\n          colorScheme.selectionBackground = `#${value}`;\n          break;\n        case \"selection-foreground\":\n          colorScheme.selectionForeground = `#${value}`;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n\n  return colorScheme;\n};\n\nconst fetchColorScheme = async (theme: string) => {\n    const apiUrl = `https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty${theme ? \"/\" + theme : \"\"}`;\n\n    const response = await fetch(apiUrl,{\n        headers: {\n            Accept: \"application/vnd.github.raw+json\"\n        }\n    });\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const colorSchemeResponse = await response.text();\n\n    return {colorSchemeResponse};\n};\n\nconst {themeFiles} = await fetchThemeFiles();\nconst themeFileNames = themeFiles && themeFiles.map((file: ThemeResponse) => file.name);\n\nconst {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\nconst colorScheme = parseColorScheme(colorSchemeResponse);\n\nexport default [\n    {\n        id: \"application\",\n        name: \"Application\",\n        note: \"\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                // type: \"group\",\n                settings: [\n                    {id: \"title\", name: \"Static title for all windows\", type: \"text\", value: \"\"},\n                    {id: \"desktopNotifications\", name: \"Allow desktop notifications\", type: \"switch\", value: true},\n                    {id: \"configFile\", name: \"Additional config file\", type: \"text\", value: \"\"},\n                    {id: \"configDefaultFiles\", name: \"Load default config file\", type: \"switch\", value: true},\n                    {id: \"linkUrl\", name: \"Automatically link URLs\", note: \"Matching occurs while holding the control (Linux) or command (macOS) key.\", type: \"switch\", value: true},\n                ]\n            },\n            {\n                id: \"startup\",\n                name: \"Startup\",\n                // type: \"group\",\n                settings: [\n                    {id: \"command\", name: \"Command to run on launch\", type: \"text\", value: \"\"},\n                    {id: \"fullscreen\", name: \"Launch in fullscreen mode\", type: \"switch\", value: false},\n                    {id: \"initialWindow\", name: \"Show a window on startup\", type: \"switch\", value: true},\n                    {id: \"workingDirectory\", name: \"Directory to use after startup\", note: \"Special values of `home` and `inherit` are also allowed here.\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shutdown\",\n                name: \"Shutdown\",\n                // type: \"group\",\n                settings: [\n                    {id: \"waitAfterCommand\", name: \"Wait for input after command\", type: \"switch\", value: false},\n                    {id: \"abnormalCommandExitRuntime\", name: \"Abnormal command exit runtime\", type: \"number\", value: 250, min: 0, size: 5},\n                    {id: \"confirmCloseSurface\", name: \"Confirm when closing a surface\", type: \"switch\", value: true},\n                    {id: \"quitAfterLastWindowClosed\", name: \"Quit after closing last window\", type: \"switch\", value: false},\n                    {id: \"quitAfterLastWindowClosedDelay\", name: \"Delay before auto quitting\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shell\",\n                name: \"Shell Integration\",\n                // type: \"group\",\n                settings: [\n                    {id: \"shellIntegration\", name: \"Shell integration style\", type: \"dropdown\", value: \"detect\", options: [\"none\", \"detect\", \"bash\", \"elvish\", \"fish\", \"zsh\"]},\n                    {id: \"shellIntegrationFeatures\", name: \"Shell integration features\", note: \"The current available features are cursor, sudo, and title. Including one force enables it, prefixing it with `no-` force disables it, omitting it falls back to default.\", type: \"text\", value: \"cursor,no-sudo,title\"},\n                    {id: \"term\", name: \"TERM environment variable\", type: \"text\", value: \"xterm-ghostty\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced\",\n                note: \"You should only touch these settings if you know what you're doing, otherwise you could cause major issues with Ghostty!\",\n                // type: \"group\",\n                settings: [\n                    {id: \"scrollbackLimit\", name: \"Scrollback buffer size (bytes)\", note: \"This buffer exists completely in memory but is allocated lazily.\", type: \"number\", value: 10000000, min: 0, size: 10},\n                    {id: \"customShader\", name: \"Custom shader\", note: \"This matches the API of Shadertoy.\", type: \"text\", value: \"\"},\n                    {id: \"customShaderAnimation\", name: \"Allow shaders to animate\", type: \"dropdown\", value: \"false\", options: [\"false\", \"true\", \"always\"]},\n                    {id: \"enquiryResponse\", name: \"Reponse to ENQ\", type: \"text\", value: \"\"},\n                    {id: \"oscColorReportFormat\", name: \"OSC color report format\", type: \"dropdown\", value: \"16-bit\", options: [\"none\", \"8-bit\", \"16-bit\"]},\n                    {id: \"vtKamAllowed\", name: \"VT kam mode allowed\", note: \"If you don't know what this is, don't touch it!\", type: \"switch\", value: false},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"clipboard\",\n        name: \"Clipboard\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"clipboardRead\", name: \"Allow terminal to read clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"clipboardWrite\", name: \"Allow terminal to write clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"copyOnSelect\", name: \"Copy on select\", type: \"switch\", value: true},\n                    {id: \"clipboardTrimTrailingSpaces\", name: \"Trim trailing space on copy\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteProtection\", name: \"Confirm when pasting unsafely\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteBracketedSafe\", name: \"Mark bracketed paste as safe\", type: \"switch\", value: true},\n                    {id: \"imageStorageLimit\", name: \"Image buffer limit (bytes)\", type: \"number\", value: 320000000, min: 0, max: 4294967295, size: 12},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"window\",\n        name: \"Window\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"windowVsync\", name: \"Enable vsync\", type: \"switch\", value: true},\n                    {id: \"windowInheritWorkingDirectory\", name: \"Inherit working directory\", type: \"switch\", value: true},\n                    {id: \"windowInheritFontSize\", name: \"Inherit font size\", type: \"switch\", value: true},\n                    {id: \"windowColorspace\", name: \"Window colorspace\", type: \"dropdown\", value: \"srgb\", options: [\"srgb\", \"display-p3\"]},\n                    {id: \"windowSaveState\", name: \"Save window state\", type: \"dropdown\", value: \"default\", options: [\"default\", \"never\", \"always\"]},\n                    // maybe move to application?\n                    {id: \"windowNewTabPosition\", name: \"New tab position\", type: \"dropdown\", value: \"current\", options: [\"current\", \"end\"]},\n                ]\n            },\n            {\n                id: \"appearance\",\n                name: \"Appearance\",\n                settings: [\n                    {id: \"windowTheme\", name: \"Window theme\", type: \"dropdown\", value: \"auto\", options: [\"auto\", \"system\", \"light\", \"dark\"]},\n                    {id: \"windowDecoration\", name: \"Enable native frames\", type: \"switch\", value: true},\n                    {id: \"windowPaddingX\", name: \"Horizontal window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingY\", name: \"Vertical window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingBalance\", name: \"Auto-balance window padding\", type: \"switch\", value: false},\n                    {id: \"windowPaddingColor\", name: \"Window padding color\", type: \"dropdown\", value: \"extend\", options: [\"background\", \"extend\", \"extend-always\"]},\n\n                    // maybe move to colors\n                    {id: \"backgroundOpacity\", name: \"Background opacity\", type: \"number\", range: true, value: 1, min: 0, max: 1, step: 0.01},\n                    {id: \"backgroundBlurRadius\", name: \"Background blur radius\", note: \"A value of 20 is reasonable for a good looking blur, going beyond that can cause rendering and performance issues.\", type: \"number\", range: true, value: 0, min: 0, max: 50, step: 1},\n                    {id: \"unfocusedSplitOpacity\", name: \"Unfocused split opacity\", type: \"number\", range: true, value: 0.7, min: 0.15, max: 1, step: 0.01},\n                    {id: \"unfocusedSplitFill\", name: \"Unfocused split fill color\", type: \"color\", value: \"\"},\n                ]\n            },\n            {\n                id: \"resize\",\n                name: \"Sizing & Resizing\",\n                settings: [\n                    {id: \"windowHeight\", name: \"Initial window height\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 4, step: 1, size: 4},\n                    {id: \"windowWidth\", name: \"Initial window width\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 10, step: 1, size: 4},\n                    {id: \"windowStepResize\", name: \"Resize in grid cell increments\", type: \"switch\", value: false},\n                    {id: \"resizeOverlay\", name: \"Show resize overlays\", type: \"dropdown\", value: \"after-first\", options: [\"always\", \"never\", \"after-first\"]},\n                    {id: \"resizeOverlayPosition\", name: \"Resize overlay position\", type: \"dropdown\", value: \"center\", options: [\"center\", \"top-left\", \"top-center\", \"top-right\", \"bottom-left\", \"bottom-center\", \"bottom-right\"]},\n                    {id: \"resizeOverlayDuration\", name: \"Show resize overlay time\", type: \"text\", value: \"750ms\"},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"colors\",\n        name: \"Colors\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                settings: [\n                    {\n                        id: \"theme\",\n                        name: \"Color theme\",\n                        note: \"Any colors selected after setting this will overwrite the theme's colors.\",\n                        type: \"dropdown\",\n                        value: \"\",\n                        options: [\"\", ...themeFileNames]\n                    },\n                    {id: \"boldIsBright\", name: \"Bold text uses bright colors\", type: \"switch\", value: false},\n                    {id: \"minimumContrast\", name: \"Minimum contrast\", type: \"number\", value: 1, range: true, min: 1, max: 21, step: 0.1},\n                ]\n            },\n            {\n                id: \"base\",\n                name: \"Base Colors\",\n                note: \"The preview here shows selected text in the second line of the command output.\",\n                settings: [\n                    {id: \"background\", name: \"Background color\", type: \"color\", value: \"#282c34\"},\n                    {id: \"foreground\", name: \"Foreground color\", type: \"color\", value: \"#ffffff\"},\n                    {id: \"selectionBackground\", name: \"Selection background color\", type: \"color\", value: \"\"},\n                    {id: \"selectionForeground\", name: \"Selection foreground color\", type: \"color\", value: \"\"},\n                    {id: \"selectionInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause selections to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                ]\n            },\n            {\n                id: \"cursor\",\n                name: \"Cursor\",\n                note: \"The cursor in this preview blinks on and off at 1 second intervals for emphasis, it may not match what you see in Ghostty!\",\n                settings: [\n                    {id: \"cursorColor\", name: \"Cursor color\", type: \"color\", value: \"\"},\n                    {id: \"cursorText\", name: \"Text color under cursor\", type: \"color\", value: \"\"},\n                    {id: \"cursorInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause cells under the cursor to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                    {id: \"cursorOpacity\", name: \"Cursor opacity\", type: \"number\", value: 1, range: true, min: 0, max: 1, step: 0.05},\n                    {id: \"cursorStyle\", name: \"Cursor style\", type: \"dropdown\", value: \"block\", options: [\"block\", \"bar\", \"underline\", {value: \"block_hollow\", name: \"hollow block\"}]},\n                    {id: \"cursorStyleBlink\", name: \"Cursor blink style\", note: \"The `default` option defers to DEC mode 12 to determine blinking state.\", type: \"dropdown\", value: \"\", options: [\"true\", \"false\", {value: \"\", name: \"default\"}]},\n                ]\n            },\n            {\n                id: \"palette\",\n                name: \"Color Palette\",\n                note: \"The first 16 colors are the most commonly displayed colors in the terminal.\\n\\nColors 1-8 are typically black, red, green, yellow, blue, magenta, cyan, and white.\\nColors 9-16 are typically \\\"brighter\\\" variants of these colors.\",\n                settings: [\n                    {id: \"palette\", name: \"\", type: \"palette\", value: [\"#1d1f21\",\"#cc6666\",\"#b5bd68\",\"#f0c674\",\"#81a2be\",\"#b294bb\",\"#8abeb7\",\"#c5c8c6\",\"#666666\",\"#d54e53\",\"#b9ca4a\",\"#e7c547\",\"#7aa6da\",\"#c397d8\",\"#70c0b1\",\"#eaeaea\",\"#000000\",\"#00005f\",\"#000087\",\"#0000af\",\"#0000d7\",\"#0000ff\",\"#005f00\",\"#005f5f\",\"#005f87\",\"#005faf\",\"#005fd7\",\"#005fff\",\"#008700\",\"#00875f\",\"#008787\",\"#0087af\",\"#0087d7\",\"#0087ff\",\"#00af00\",\"#00af5f\",\"#00af87\",\"#00afaf\",\"#00afd7\",\"#00afff\",\"#00d700\",\"#00d75f\",\"#00d787\",\"#00d7af\",\"#00d7d7\",\"#00d7ff\",\"#00ff00\",\"#00ff5f\",\"#00ff87\",\"#00ffaf\",\"#00ffd7\",\"#00ffff\",\"#5f0000\",\"#5f005f\",\"#5f0087\",\"#5f00af\",\"#5f00d7\",\"#5f00ff\",\"#5f5f00\",\"#5f5f5f\",\"#5f5f87\",\"#5f5faf\",\"#5f5fd7\",\"#5f5fff\",\"#5f8700\",\"#5f875f\",\"#5f8787\",\"#5f87af\",\"#5f87d7\",\"#5f87ff\",\"#5faf00\",\"#5faf5f\",\"#5faf87\",\"#5fafaf\",\"#5fafd7\",\"#5fafff\",\"#5fd700\",\"#5fd75f\",\"#5fd787\",\"#5fd7af\",\"#5fd7d7\",\"#5fd7ff\",\"#5fff00\",\"#5fff5f\",\"#5fff87\",\"#5fffaf\",\"#5fffd7\",\"#5fffff\",\"#870000\",\"#87005f\",\"#870087\",\"#8700af\",\"#8700d7\",\"#8700ff\",\"#875f00\",\"#875f5f\",\"#875f87\",\"#875faf\",\"#875fd7\",\"#875fff\",\"#878700\",\"#87875f\",\"#878787\",\"#8787af\",\"#8787d7\",\"#8787ff\",\"#87af00\",\"#87af5f\",\"#87af87\",\"#87afaf\",\"#87afd7\",\"#87afff\",\"#87d700\",\"#87d75f\",\"#87d787\",\"#87d7af\",\"#87d7d7\",\"#87d7ff\",\"#87ff00\",\"#87ff5f\",\"#87ff87\",\"#87ffaf\",\"#87ffd7\",\"#87ffff\",\"#af0000\",\"#af005f\",\"#af0087\",\"#af00af\",\"#af00d7\",\"#af00ff\",\"#af5f00\",\"#af5f5f\",\"#af5f87\",\"#af5faf\",\"#af5fd7\",\"#af5fff\",\"#af8700\",\"#af875f\",\"#af8787\",\"#af87af\",\"#af87d7\",\"#af87ff\",\"#afaf00\",\"#afaf5f\",\"#afaf87\",\"#afafaf\",\"#afafd7\",\"#afafff\",\"#afd700\",\"#afd75f\",\"#afd787\",\"#afd7af\",\"#afd7d7\",\"#afd7ff\",\"#afff00\",\"#afff5f\",\"#afff87\",\"#afffaf\",\"#afffd7\",\"#afffff\",\"#d70000\",\"#d7005f\",\"#d70087\",\"#d700af\",\"#d700d7\",\"#d700ff\",\"#d75f00\",\"#d75f5f\",\"#d75f87\",\"#d75faf\",\"#d75fd7\",\"#d75fff\",\"#d78700\",\"#d7875f\",\"#d78787\",\"#d787af\",\"#d787d7\",\"#d787ff\",\"#d7af00\",\"#d7af5f\",\"#d7af87\",\"#d7afaf\",\"#d7afd7\",\"#d7afff\",\"#d7d700\",\"#d7d75f\",\"#d7d787\",\"#d7d7af\",\"#d7d7d7\",\"#d7d7ff\",\"#d7ff00\",\"#d7ff5f\",\"#d7ff87\",\"#d7ffaf\",\"#d7ffd7\",\"#d7ffff\",\"#ff0000\",\"#ff005f\",\"#ff0087\",\"#ff00af\",\"#ff00d7\",\"#ff00ff\",\"#ff5f00\",\"#ff5f5f\",\"#ff5f87\",\"#ff5faf\",\"#ff5fd7\",\"#ff5fff\",\"#ff8700\",\"#ff875f\",\"#ff8787\",\"#ff87af\",\"#ff87d7\",\"#ff87ff\",\"#ffaf00\",\"#ffaf5f\",\"#ffaf87\",\"#ffafaf\",\"#ffafd7\",\"#ffafff\",\"#ffd700\",\"#ffd75f\",\"#ffd787\",\"#ffd7af\",\"#ffd7d7\",\"#ffd7ff\",\"#ffff00\",\"#ffff5f\",\"#ffff87\",\"#ffffaf\",\"#ffffd7\",\"#ffffff\",\"#080808\",\"#121212\",\"#1c1c1c\",\"#262626\",\"#303030\",\"#3a3a3a\",\"#444444\",\"#4e4e4e\",\"#585858\",\"#626262\",\"#6c6c6c\",\"#767676\",\"#808080\",\"#8a8a8a\",\"#949494\",\"#9e9e9e\",\"#a8a8a8\",\"#b2b2b2\",\"#bcbcbc\",\"#c6c6c6\",\"#d0d0d0\",\"#dadada\",\"#e4e4e4\",\"#eeeeee\"]},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"fonts\",\n        name: \"Fonts\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"General Font Settings\",\n                settings: [\n                    {id: \"fontSize\", name: \"Base font size\", type: \"number\", value: 13, min: 4, max: 60, step: 0.5, range: true},\n                    {id: \"fontThicken\", name: \"Thicken fonts\", type: \"switch\", note: \"This currently only affects macOS.\", value: false},\n                    {id: \"fontFeature\", name: \"Font ligature settings\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"family\",\n                name: \"Font Families\",\n                settings: [\n                    {id: \"fontFamily\", name: \"Main font family\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBold\", name: \"Font family for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyItalic\", name: \"Font family for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBoldItalic\", name: \"Font family for bold italic text\", type: \"text\", value: \"\"},\n                    {id: \"windowTitleFontFamily\", name: \"Window title font family\", note: \"This is currently only supported on macOS\", type: \"text\", value: \"\"},\n                    {id: \"fontCodepointMap\", name: \"Unicode-specifc font mapping\", note: \"\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"styles\",\n                name: \"Font Styles\",\n                note: \"Named font styles for the fields above. For example for `Ioveska Heavy` you would use a style of `Heavy`. Alternately you can set the style to `false` to completely disable the style and revert to default style.\",\n                settings: [\n                    {id: \"fontStyle\", name: \"Main font style\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBold\", name: \"Font style for bold text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleItalic\", name: \"Font style for italic text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBoldItalic\", name: \"Font style for bold italic text\", type: \"text\", value: \"default\"},\n                ]\n            },\n            {\n                id: \"variations\",\n                name: \"Font Variations\",\n                note: \"Variable font specific settings, please only touch this if you know what you're doing!\",\n                settings: [\n                    {id: \"fontVariation\", name: \"Main font variant\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBold\", name: \"Font variant for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationItalic\", name: \"Font variant for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBoldItalic\", name: \"Font variant for bold italic text\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced Font & Cell Settings\",\n                note: \"The settings below have very little validation in Ghostty and can cause your terminal to become unusable. Be careful messing with any of these.\",\n                settings: [\n                    {id: \"adjustCellWidth\", name: \"Cell width adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCellHeight\", name: \"Cell height adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustFontBaseline\", name: \"Font baseline adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlinePosition\", name: \"Underline position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlineThickness\", name: \"Underline thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughPosition\", name: \"Strikethrough position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughThickness\", name: \"Strikethrough thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCursorThickness\", name: \"Cursor thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"graphemeWidthMethod\", name: \"Grapheme width calculation method\", type: \"dropdown\", value: \"unicode\", options: [\"unicode\", \"legacy\"]},\n                ]\n            },\n\n        ]\n    },\n    {\n        id: \"keybinds\",\n        name: \"Keybinds\",\n        groups: [\n            {\n                id: \"keybinds\",\n                name: \"\",\n                settings: [\n                    {id: \"keybind\", name: \"\", type: \"keybinds\", value: [\"super+page_up=scroll_page_up\", \"super+physical:four=goto_tab:4\", \"super+shift+down=jump_to_prompt:1\", \"super+shift+w=close_window\", \"super+shift+left_bracket=previous_tab\", \"super+alt+i=inspector:toggle\", \"super+w=close_surface\", \"super+physical:eight=goto_tab:8\", \"super+alt+right=goto_split:right\", \"shift+up=adjust_selection:up\", \"super+enter=toggle_fullscreen\", \"super+t=new_tab\", \"super+c=copy_to_clipboard\", \"super+shift+right_bracket=next_tab\", \"super+physical:one=goto_tab:1\", \"shift+left=adjust_selection:left\", \"super+equal=increase_font_size:1\", \"shift+page_up=adjust_selection:page_up\", \"super+physical:three=goto_tab:3\", \"super+d=new_split:right\", \"super+ctrl+down=resize_split:down,10\", \"shift+end=adjust_selection:end\", \"super+plus=increase_font_size:1\", \"super+q=quit\", \"super+home=scroll_to_top\", \"super+ctrl+left=resize_split:left,10\", \"super+ctrl+up=resize_split:up,10\", \"super+shift+up=jump_to_prompt:-1\", \"shift+right=adjust_selection:right\", \"super+comma=open_config\", \"super+shift+comma=reload_config\", \"super+minus=decrease_font_size:1\", \"shift+page_down=adjust_selection:page_down\", \"super+a=select_all\", \"alt+shift+equal=equalize_splits\", \"super+shift+enter=toggle_split_zoom\", \"super+alt+down=goto_split:bottom\", \"super+ctrl+f=toggle_fullscreen\", \"super+ctrl+right=resize_split:right,10\", \"super+alt+shift+j=write_scrollback_file:open\", \"shift+down=adjust_selection:down\", \"super+n=new_window\", \"super+alt+left=goto_split:left\", \"super+page_down=scroll_page_down\", \"super+alt+shift+w=close_all_windows\", \"super+alt+up=goto_split:top\", \"super+left_bracket=goto_split:previous\", \"super+physical:nine=goto_tab:9\", \"super+right_bracket=goto_split:next\", \"super+end=scroll_to_bottom\", \"super+shift+j=write_scrollback_file:paste\", \"super+shift+d=new_split:down\", \"super+zero=reset_font_size\", \"super+physical:five=goto_tab:5\", \"shift+home=adjust_selection:home\", \"super+physical:seven=goto_tab:7\", \"super+k=clear_screen\", \"super+physical:two=goto_tab:2\", \"super+physical:six=goto_tab:6\", \"super+v=paste_from_clipboard\"]}\n                ]\n            }\n        ]\n    },\n    {\n        id: \"mouse\",\n        name: \"Mouse\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"cursorClickToMove\", name: \"Enable click to move cursor\", type: \"switch\", value: true},\n                    {id: \"mouseHideWhileTyping\", name: \"Hide mouse while typing\", type: \"switch\", value: false},\n                    {id: \"mouseShiftCapture\", name: \"Allow shift with mouse click\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"always\", \"never\"]},\n                    // Technically the values should be min: 0.01, max: 10000, step: 0.01 but those are insane so instead I'll use sane defaults\n                    {id: \"mouseScrollMultiplier\", name: \"Mouse scroll multiplier\", type: \"number\", range: true, value: 1, min: 0.1, max: 10, step: 0.1},\n                    {id: \"focusFollowsMouse\", name: \"Focus splits on mouse move\", type: \"switch\", value: false},\n                    {id: \"clickRepeatInterval\", name: \"Milliseconds between multi-click\", note: \"A value of 0 means to use the operating system's default timing.\", type: \"number\", value: 0, min: 0, size: 4},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"gtk\",\n        name: \"GTK\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"class\", name: \"WM_CLASS class field\", note: \"This defaults to `com.mitchellh.ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"x11InstanceName\", name: \"WM_CLASS instance name\", note: \"This defaults to `ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"gtkSingleInstance\", name: \"Single-instance mode\", type: \"dropdown\", value: \"desktop\", options: [{name: \"detect\", value: \"desktop\"}, \"true\", \"false\"]},\n                    {id: \"gtkTitlebar\", name: \"Show titlebar\", type: \"switch\", value: true},\n                    {id: \"gtkTabsLocation\", name: \"Tab location\", type: \"dropdown\", value: \"top\", options: [\"top\", \"right\", \"bottom\", \"left\"]},\n                    {id: \"gtkWideTabs\", name: \"Use wide tabs\", type: \"switch\", value: true},\n                    {id: \"gtkAdwaita\", name: \"Enable adwaita theme support\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"linux\",\n        name: \"Linux\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"linuxCgroup\", name: \"Use dedicated cgroups\", type: \"dropdown\", value: \"single-instance\", options: [\"single-instance\", \"always\", \"never\"]},\n                    {id: \"linuxCgroupMemoryLimit\", name: \"Memory limit (bytes)\", type: \"number\", min: 0, max: 4294967295, size: 12},\n                    {id: \"linuxCgroupProcessLimit\", name: \"Max number of processes\", type: \"number\", min: 0, size: 5},\n                    {id: \"linuxCgroupHardFail\", name: \"Hard fail on startup\", type: \"switch\", value: false},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"macos\",\n        name: \"macOS\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"macosNonNativeFullscreen\", name: \"Use non-native fullscreen\", note: \"Tabs currently do not work with non-native fullscreen windows\", type: \"dropdown\", value: \"false\", options: [\"visible-menu\", \"true\", \"false\"]},\n                    {id: \"macosTitlebarStyle\", name: \"Titlebar style\", type: \"dropdown\", value: \"transparent\", options: [\"transparent\", \"native\", \"tabs\"]},\n                    {id: \"macosOptionAsAlt\", name: \"Use option key as alt key\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"left\", \"right\"]},\n                    {id: \"macosWindowShadow\", name: \"Show the window shadow\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n] as Panel[];\n```\n```typescript\n\nconst {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\nconst colorScheme = parseColorScheme(colorSchemeResponse);\n// error: 'colorScheme' is assigned a value but never used. Allowed unused vars must match /^_/u.\n\nexport default [\n```\n\n\n\nTo apply the selected theme colors to the base colors, cursor colors, and color palette, you can modify the `config` store when the theme dropdown value changes. Here's how you can do it:\n\n1. First, create a reactive statement that watches for changes in the theme dropdown:\n\n```typescript\n$: {\n  if (config.theme) {\n    applyTheme(config.theme);\n  }\n}\n```\n\n2. Implement the `applyTheme` function:\n\n```typescript\nasync function applyTheme(themeName: string) {\n  const {colorSchemeResponse} = await fetchColorScheme(themeName);\n  const colorScheme = parseColorScheme(colorSchemeResponse);\n\n  // Apply base colors\n  if (colorScheme.background) config.background = colorScheme.background;\n  if (colorScheme.foreground) config.foreground = colorScheme.foreground;\n  if (colorScheme.selectionBackground) config.selectionBackground = colorScheme.selectionBackground;\n  if (colorScheme.selectionForeground) config.selectionForeground = colorScheme.selectionForeground;\n\n  // Apply cursor colors\n  if (colorScheme.cursorColor) config.cursorColor = colorScheme.cursorColor;\n\n  // Apply color palette\n  if (colorScheme.palette) {\n    const newPalette = Array(256).fill('#000000');\n    for (const [index, color] of Object.entries(colorScheme.palette)) {\n      newPalette[parseInt(index)] = color;\n    }\n    config.palette = newPalette;\n  }\n}\n```\n\n3. Update the `config` store to include these new properties:\n\n```typescript\nconst config = $state({\n  // ... existing properties\n  theme: '',\n  background: '#282c34',\n  foreground: '#ffffff',\n  selectionBackground: '',\n  selectionForeground: '',\n  cursorColor: '',\n  palette: [] as string[],\n}) as Record<keyof DefaultConfig, any>;\n```\n\n4. Make sure to update the `DefaultConfig` interface to include these new properties:\n\n```typescript\ninterface DefaultConfig {\n  // ... existing properties\n  theme: string;\n  background: HexColor;\n  foreground: HexColor;\n  selectionBackground: HexColor;\n  selectionForeground: HexColor;\n  cursorColor: HexColor;\n  palette: HexColor[];\n}\n```\n\nWith these changes, when a user selects a theme from the dropdown, the `applyTheme` function will be called, fetching the theme colors and updating the `config` store with the new values. This will automatically update the base colors, cursor colors, and color palette in your application.\n\nRemember to handle any potential errors that might occur during the theme fetching and parsing process.\nWhere do these changes go?\nI apologize for the confusion. You're right to ask where these changes should go, as they don't fit neatly into the existing file structure you've shown. Here's a suggestion on how to implement this functionality:\n\n1. Create a new file called `themeHandler.ts` in the `src/lib` directory. This file will contain the theme-related logic:\n\n```typescript\n// src/lib/themeHandler.ts\n\nimport type { HexColor } from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport { fetchColorScheme, parseColorScheme } from \"$lib/data/settings\";\n\nexport async function applyTheme(themeName: string) {\n  const { colorSchemeResponse } = await fetchColorScheme(themeName);\n  const colorScheme = parseColorScheme(colorSchemeResponse);\n\n  // Apply base colors\n  if (colorScheme.background) config.background = colorScheme.background;\n  if (colorScheme.foreground) config.foreground = colorScheme.foreground;\n  if (colorScheme.selectionBackground) config.selectionBackground = colorScheme.selectionBackground;\n  if (colorScheme.selectionForeground) config.selectionForeground = colorScheme.selectionForeground;\n\n  // Apply cursor colors\n  if (colorScheme.cursorColor) config.cursorColor = colorScheme.cursorColor;\n\n  // Apply color palette\n  if (colorScheme.palette) {\n    const newPalette = Array(256).fill('#000000');\n    for (const [index, color] of Object.entries(colorScheme.palette)) {\n      newPalette[parseInt(index)] = color as HexColor;\n    }\n    config.palette = newPalette;\n  }\n}\n```\n\n2. Modify the `config.svelte.ts` file to include the new properties and import the `applyTheme` function:\n\n```typescript\n// src/lib/stores/config.svelte.ts\n\nimport { applyTheme } from \"$lib/themeHandler\";\nimport type { HexColor } from \"$lib/utils/colors\";\n\n// ... existing imports and code\n\nconst config = $state({\n  // ... existing properties\n  theme: '',\n  background: '#282c34' as HexColor,\n  foreground: '#ffffff' as HexColor,\n  selectionBackground: '' as HexColor,\n  selectionForeground: '' as HexColor,\n  cursorColor: '' as HexColor,\n  palette: [] as HexColor[],\n}) as Record<keyof DefaultConfig, any>;\n\n// Add a reactive statement to watch for theme changes\n$: {\n  if (config.theme) {\n    applyTheme(config.theme);\n  }\n}\n\n// ... rest of the existing code\n\ninterface DefaultConfig {\n  // ... existing properties\n  theme: string;\n  background: HexColor;\n  foreground: HexColor;\n  selectionBackground: HexColor;\n  selectionForeground: HexColor;\n  cursorColor: HexColor;\n  palette: HexColor[];\n}\n\n// ... rest of the existing code\n```\n\n3. Update the `settings.ts` file to export the `fetchColorScheme` and `parseColorScheme` functions:\n\n```typescript\n// src/lib/data/settings.ts\n\n// ... existing code\n\nexport const fetchColorScheme = async (theme: string) => {\n  // ... existing implementation\n};\n\nexport const parseColorScheme = (input: string): ColorScheme => {\n  // ... existing implementation\n};\n\n// ... rest of the existing code\n```\n\nThese changes will integrate the theme handling logic into your existing structure. The `applyTheme` function will be called whenever the `theme` property in the `config` store changes, updating the colors accordingly.\n\nRemember to handle any potential errors that might occur during the theme fetching and parsing process in your UI components or error boundary.\neslint: Unexpected labeled statement\nI apologize for the confusion. The error you're encountering is due to the use of labels in reactive statements, which is a feature specific to Svelte, not TypeScript. Since we're working with a TypeScript file, we need to approach this differently. Let's modify the `config.svelte.ts` file to handle theme changes without using Svelte-specific syntax:\n\n1. Update the `config.svelte.ts` file:\n\n```typescript\n// src/lib/stores/config.svelte.ts\n\nimport { derived } from 'svelte/store';\nimport type { HexColor } from \"$lib/utils/colors\";\nimport { applyTheme } from \"$lib/themeHandler\";\n\n// ... existing imports and code\n\nconst config = {\n  // ... existing properties\n  theme: '',\n  background: '#282c34' as HexColor,\n  foreground: '#ffffff' as HexColor,\n  selectionBackground: '' as HexColor,\n  selectionForeground: '' as HexColor,\n  cursorColor: '' as HexColor,\n  palette: [] as HexColor[],\n} as Record<keyof DefaultConfig, any>;\n\n// Create a derived store to watch for theme changes\n\n\n// Subscribe to the themeWatcher to trigger theme changes\nthemeWatcher.subscribe(() => {});\n\n// ... rest of the existing code\n\ninterface DefaultConfig {\n  // ... existing properties\n  theme: string;\n  background: HexColor;\n  foreground: HexColor;\n  selectionBackground: HexColor;\n  selectionForeground: HexColor;\n  cursorColor: HexColor;\n  palette: HexColor[];\n}\n\n// ... rest of the existing code\n\nexport default config;\n```\n\n2. Update the `themeHandler.ts` file:\n\n```typescript\n// src/lib/themeHandler.ts\n\nimport type { HexColor } from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport { fetchColorScheme, parseColorScheme } from \"$lib/data/settings\";\n\nexport async function applyTheme(themeName: string) {\n  try {\n    const { colorSchemeResponse } = await fetchColorScheme(themeName);\n    const colorScheme = parseColorScheme(colorSchemeResponse);\n\n    // Apply base colors\n    if (colorScheme.background) config.background = colorScheme.background;\n    if (colorScheme.foreground) config.foreground = colorScheme.foreground;\n    if (colorScheme.selectionBackground) config.selectionBackground = colorScheme.selectionBackground;\n    if (colorScheme.selectionForeground) config.selectionForeground = colorScheme.selectionForeground;\n\n    // Apply cursor colors\n    if (colorScheme.cursorColor) config.cursorColor = colorScheme.cursorColor;\n\n    // Apply color palette\n    if (colorScheme.palette) {\n      const newPalette = Array(256).fill('#000000');\n      for (const [index, color] of Object.entries(colorScheme.palette)) {\n        newPalette[parseInt(index)] = color as HexColor;\n      }\n      config.palette = newPalette;\n    }\n  } catch (error) {\n    console.error(\"Error applying theme:\", error);\n    // Handle the error as needed (e.g., show a notification to the user)\n  }\n}\n```\n\nThese changes accomplish the following:\n\n1. We create a derived store `themeWatcher` that watches for changes to `config.theme`.\n2. When `config.theme` changes, `applyTheme` is called with the new theme.\n3. We subscribe to `themeWatcher` to ensure it's active and responsive to changes.\n4. The `applyTheme` function now includes error handling.\n\nThis approach should work with TypeScript and avoid the ESLint error while still providing the desired functionality of applying the theme when it changes.\neslint: 'derived' is not defined.\n\n```ts ghostty-config/src/lib/stores/config.svelte.ts\nimport {dev} from \"$app/environment\";\nimport settings, {type KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"$lib/utils/colors\";\nimport themeHandler from \"$lib/utils/themeHandler\";\n// import defs from \"../data/defaults.json\";\n\n// TODO: find a good way to properly type the config\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaults: Partial<Record<keyof DefaultConfig, any>> = {};\n\nfor (const panel of settings) {\n    for (const group of panel.groups) {\n        for (const setting of group.settings) {\n            defaults[setting.id as keyof typeof defaults] = setting.value;\n        }\n    }\n}\n\nif (dev) {\n    // eslint-disable-next-line no-console\n    console.log(defaults);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\nconst themeWatcher = derived(\n  () => config.theme,\n  (theme, set) => {\n    if (theme) {\n      themeHandler(theme).then(() => set(theme));\n    }\n  }\n);\n\nexport function keyToConfig(key: string) {\n    return key.replaceAll(/([A-Z])/g, \"-$1\").toLowerCase();\n}\n\nexport function diff() {\n    // TODO: more elegance\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const output: Partial<Record<keyof typeof defaults|string, any>> = {};\n\n    for (const k in config) {\n        const key = k as keyof DefaultConfig;\n        if (Array.isArray(config[key]) && key === \"keybind\") {\n            const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (Array.isArray(config[key]) && key === \"palette\") {\n            const toAdd = [];\n            for (let p = 0; p < defaults[key].length; p++) {\n                if (config[key][p] === defaults[key][p]) continue;\n                toAdd.push(`${p}=${config[key][p]}`);\n            }\n            // const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (config[key] != defaults[key]) {\n            output[keyToConfig(key)] = config[key];\n        }\n    }\n\n    return output;\n}\n\nexport function load(conf: Partial<typeof config>) {\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n        }\n        else if (key === \"palette\") {\n            for (let p = 0; p < conf.palette.length; p++) {\n                if (!conf.palette[p]) continue;\n                config.palette[p] = conf.palette[p];\n            }\n        }\n    }\n}\n\nexport default config;\n\n\n// TODO: is this useful?\ninterface DefaultConfig {\n    palette: HexColor[];\n    keybind: KeybindString[];\n    fontFamily: string;\n    fontFamilyBold: string;\n    fontFamilyItalic: string;\n    fontFamilyBoldItalic: string;\n    fontStyle: string;\n    fontStyleBold: string;\n    fontStyleItalic: string;\n    fontStyleBoldItalic: string;\n    fontFeature: string;\n    fontSize: number;\n    fontVariation: string;\n    fontVariationBold: string;\n    fontVariationItalic: string;\n    fontVariationBoldItalic: string;\n    fontCodepointMap: string;\n    fontThicken: boolean;\n    adjustCellWidth: string;\n    adjustCellHeight: string;\n    adjustFontBaseline: string;\n    adjustUnderlinePosition: string;\n    adjustUnderlineThickness: string;\n    adjustStrikethroughPosition: string;\n    adjustStrikethroughThickness: string;\n    adjustCursorThickness: string;\n    graphemeWidthMethod: string;\n    theme: string;\n    background: HexColor;\n    foreground: HexColor;\n    selectionForeground: string;\n    selectionBackground: string;\n    selectionInvertFgBg: boolean;\n    minimumContrast: number;\n    cursorColor: string;\n    cursorInvertFgBg: boolean;\n    cursorOpacity: number;\n    cursorStyle: string;\n    cursorStyleBlink: string;\n    cursorText: string;\n    cursorClickToMove: boolean;\n    mouseHideWhileTyping: boolean;\n    mouseShiftCapture: boolean;\n    mouseScrollMultiplier: number;\n    backgroundOpacity: number;\n    backgroundBlurRadius: number;\n    unfocusedSplitOpacity: number;\n    unfocusedSplitFill: string;\n    command: string;\n    waitAfterCommand: boolean;\n    abnormalCommandExitRuntime: number;\n    scrollbackLimit: number;\n    linkUrl: boolean;\n    fullscreen: boolean;\n    title: string;\n    class: string;\n    workingDirectory: string;\n    windowPaddingX: number;\n    windowPaddingY: number;\n    windowPaddingBalance: boolean;\n    windowPaddingColor: string;\n    windowVsync: boolean;\n    windowInheritWorkingDirectory: boolean;\n    windowInheritFontSize: boolean;\n    windowDecoration: boolean;\n    windowTitleFontFamily: string;\n    windowTheme: string;\n    windowColorspace: string;\n    windowHeight: number;\n    windowWidth: number;\n    windowSaveState: string;\n    windowStepResize: boolean;\n    windowNewTabPosition: string;\n    resizeOverlay: string;\n    resizeOverlayPosition: string;\n    resizeOverlayDuration: string;\n    focusFollowsMouse: boolean;\n    clipboardRead: string;\n    clipboardWrite: string;\n    clipboardTrimTrailingSpaces: boolean;\n    clipboardPasteProtection: boolean;\n    clipboardPasteBracketedSafe: boolean;\n    imageStorageLimit: number;\n    copyOnSelect: boolean;\n    clickRepeatInterval: number;\n    configFile: string;\n    configDefaultFiles: boolean;\n    confirmCloseSurface: boolean;\n    quitAfterLastWindowClosed: boolean;\n    quitAfterLastWindowClosedDelay: string;\n    initialWindow: boolean;\n    shellIntegration: string;\n    shellIntegrationFeatures: string;\n    oscColorReportFormat: string;\n    vtKamAllowed: boolean;\n    customShader: string;\n    customShaderAnimation: boolean;\n    macosNonNativeFullscreen: boolean;\n    macosTitlebarStyle: string;\n    macosOptionAsAlt: boolean;\n    macosWindowShadow: boolean;\n    linuxCgroup: string;\n    linuxCgroupMemoryLimit: string;\n    linuxCgroupProcessesLimit: string;\n    linuxCgroupHardFail: boolean;\n    gtkSingleInstance: string;\n    gtkTitlebar: boolean;\n    gtkTabsLocation: string;\n    gtkWideTabs: boolean;\n    gtkAdwaita: boolean;\n    desktopNotifications: boolean;\n    boldIsBright: boolean;\n    term: string;\n    enquiryResponse: string;\n}\n```\n```typescript\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\nconst themeWatcher = derived(\n// error: 'themeWatcher' is assigned a value but never used. Allowed unused vars must match /^_/u.\n  () => config.theme,\n  (theme, set) => {\n```\n```typescript\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\nconst themeWatcher = derived(\n// error: Cannot find name 'derived'. Did you mean '$derived'?\n  () => config.theme,\n  (theme, set) => {\n```\n```typescript\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\nconst themeWatcher = derived(\n// error: 'derived' is not defined.\n  () => config.theme,\n  (theme, set) => {\n```\n```typescript\nconst themeWatcher = derived(\n  () => config.theme,\n  (theme, set) => {\n// error: Parameter 'theme' implicitly has an 'any' type.\n    if (theme) {\n      themeHandler(theme).then(() => set(theme));\n```\n```typescript\nconst themeWatcher = derived(\n  () => config.theme,\n  (theme, set) => {\n// error: Parameter 'set' implicitly has an 'any' type.\n    if (theme) {\n      themeHandler(theme).then(() => set(theme));\n```\n\n\n```ts ghostty-config/src/lib/data/settings.ts\nimport config from \"$lib/stores/config.svelte\";\nimport type {HexColor} from \"$lib/utils/colors\";\n\ninterface BaseSettingType {\n    id: string;\n    name: string;\n    note?: string;\n}\n\ninterface Panel extends BaseSettingType {\n    groups: Group[];\n}\n\ninterface Group extends BaseSettingType {\n    settings: (Switch | Text | Number | Dropdown | Color | Palette | Keybinds)[];\n    // type: \"group\";\n}\n\ntype SettingType = \"switch\" | \"number\" | \"dropdown\" | \"text\" | \"color\" | \"palette\" | \"keybinds\";\n\ninterface BaseSettingItem extends BaseSettingType {\n    type: SettingType;\n    value: unknown;\n}\n\ninterface Switch extends BaseSettingItem {\n    type: \"switch\";\n    value: boolean;\n}\n\ninterface Text extends BaseSettingItem {\n    type: \"text\";\n    value: string;\n}\n\ninterface Number extends BaseSettingItem {\n    type: \"number\";\n    value: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    size?: number;\n    range?: boolean;\n}\n\ninterface DropdownOption {\n    name: string;\n    value: string;\n}\n\ninterface Dropdown extends BaseSettingItem {\n    type: \"dropdown\";\n    value: \"string\";\n    options: (DropdownOption | string)[];\n}\n\ninterface Color extends BaseSettingItem {\n    value: HexColor;\n    type: \"color\";\n}\n\ninterface Palette extends BaseSettingItem {\n    value: HexColor[];\n    type: \"palette\";\n}\n\nexport type KeybindString = `${string}=${string}`;\ninterface Keybinds extends BaseSettingItem {\n    value: KeybindString[];\n    type: \"keybinds\";\n}\n\ninterface ThemeResponse {\n  \"type\": string;\n  \"encoding\": string;\n  \"size\": number;\n  \"name\": string;\n  \"path\": string;\n  \"content\": string;\n  \"sha\": string;\n  \"url\": string;\n  \"git_url\": string;\n  \"html_url\": string;\n  \"download_url\": string;\n  \"_links\": {\n    \"git\": string;\n    \"self\": string;\n    \"html\": string;\n  }\n}\n\ninterface ColorScheme {\n  palette: { [key: string]: string };\n  background?: string;\n  foreground?: string;\n  cursorColor?: string;\n  selectionBackground?: string;\n  selectionForeground?: string;\n}\n\nconst fetchThemeFiles = async () => {\n    const apiUrl = \"https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty\";\n\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const themeFiles = await response.json();\n\n    return {themeFiles};\n};\n\n// Function to convert raw string data into a JSON object\nexport const parseColorScheme = (input: string): ColorScheme => {\n  const colorScheme: ColorScheme = {palette: {}};\n\n  // Split input by lines\n  const lines = input.split(\"\\n\");\n\n  lines.forEach((line) => {\n    if (line.startsWith(\"palette\")) {\n      const [, rest] = line.split(\"palette =\").map(part => part.trim());\n\n      if (rest) {\n        const [paletteIndex, color] = rest.split(\"=\");\n        if (paletteIndex && color) {\n          colorScheme.palette[paletteIndex.trim()] = color.trim();\n        }\n      }\n    }\n    else {\n      const [key, value] = line.split(\"=\").map(part => part.trim());\n\n      switch (key) {\n        case \"background\":\n          colorScheme.background = `#${value}`;\n          break;\n        case \"foreground\":\n          colorScheme.foreground = `#${value}`;\n          break;\n        case \"cursor-color\":\n          colorScheme.cursorColor = `#${value}`;\n          break;\n        case \"selection-background\":\n          colorScheme.selectionBackground = `#${value}`;\n          break;\n        case \"selection-foreground\":\n          colorScheme.selectionForeground = `#${value}`;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n\n  return colorScheme;\n};\n\nexport const fetchColorScheme = async (theme: string) => {\n    const apiUrl = `https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty${theme ? \"/\" + theme : \"\"}`;\n\n    const response = await fetch(apiUrl,{\n        headers: {\n            Accept: \"application/vnd.github.raw+json\"\n        }\n    });\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const colorSchemeResponse = await response.text();\n\n    return {colorSchemeResponse};\n};\n\nconst {themeFiles} = await fetchThemeFiles();\nconst themeFileNames = themeFiles && themeFiles.map((file: ThemeResponse) => file.name);\n\nconst {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\nconst colorScheme = parseColorScheme(colorSchemeResponse);\n\nexport default [\n    {\n        id: \"application\",\n        name: \"Application\",\n        note: \"\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                // type: \"group\",\n                settings: [\n                    {id: \"title\", name: \"Static title for all windows\", type: \"text\", value: \"\"},\n                    {id: \"desktopNotifications\", name: \"Allow desktop notifications\", type: \"switch\", value: true},\n                    {id: \"configFile\", name: \"Additional config file\", type: \"text\", value: \"\"},\n                    {id: \"configDefaultFiles\", name: \"Load default config file\", type: \"switch\", value: true},\n                    {id: \"linkUrl\", name: \"Automatically link URLs\", note: \"Matching occurs while holding the control (Linux) or command (macOS) key.\", type: \"switch\", value: true},\n                ]\n            },\n            {\n                id: \"startup\",\n                name: \"Startup\",\n                // type: \"group\",\n                settings: [\n                    {id: \"command\", name: \"Command to run on launch\", type: \"text\", value: \"\"},\n                    {id: \"fullscreen\", name: \"Launch in fullscreen mode\", type: \"switch\", value: false},\n                    {id: \"initialWindow\", name: \"Show a window on startup\", type: \"switch\", value: true},\n                    {id: \"workingDirectory\", name: \"Directory to use after startup\", note: \"Special values of `home` and `inherit` are also allowed here.\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shutdown\",\n                name: \"Shutdown\",\n                // type: \"group\",\n                settings: [\n                    {id: \"waitAfterCommand\", name: \"Wait for input after command\", type: \"switch\", value: false},\n                    {id: \"abnormalCommandExitRuntime\", name: \"Abnormal command exit runtime\", type: \"number\", value: 250, min: 0, size: 5},\n                    {id: \"confirmCloseSurface\", name: \"Confirm when closing a surface\", type: \"switch\", value: true},\n                    {id: \"quitAfterLastWindowClosed\", name: \"Quit after closing last window\", type: \"switch\", value: false},\n                    {id: \"quitAfterLastWindowClosedDelay\", name: \"Delay before auto quitting\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shell\",\n                name: \"Shell Integration\",\n                // type: \"group\",\n                settings: [\n                    {id: \"shellIntegration\", name: \"Shell integration style\", type: \"dropdown\", value: \"detect\", options: [\"none\", \"detect\", \"bash\", \"elvish\", \"fish\", \"zsh\"]},\n                    {id: \"shellIntegrationFeatures\", name: \"Shell integration features\", note: \"The current available features are cursor, sudo, and title. Including one force enables it, prefixing it with `no-` force disables it, omitting it falls back to default.\", type: \"text\", value: \"cursor,no-sudo,title\"},\n                    {id: \"term\", name: \"TERM environment variable\", type: \"text\", value: \"xterm-ghostty\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced\",\n                note: \"You should only touch these settings if you know what you're doing, otherwise you could cause major issues with Ghostty!\",\n                // type: \"group\",\n                settings: [\n                    {id: \"scrollbackLimit\", name: \"Scrollback buffer size (bytes)\", note: \"This buffer exists completely in memory but is allocated lazily.\", type: \"number\", value: 10000000, min: 0, size: 10},\n                    {id: \"customShader\", name: \"Custom shader\", note: \"This matches the API of Shadertoy.\", type: \"text\", value: \"\"},\n                    {id: \"customShaderAnimation\", name: \"Allow shaders to animate\", type: \"dropdown\", value: \"false\", options: [\"false\", \"true\", \"always\"]},\n                    {id: \"enquiryResponse\", name: \"Reponse to ENQ\", type: \"text\", value: \"\"},\n                    {id: \"oscColorReportFormat\", name: \"OSC color report format\", type: \"dropdown\", value: \"16-bit\", options: [\"none\", \"8-bit\", \"16-bit\"]},\n                    {id: \"vtKamAllowed\", name: \"VT kam mode allowed\", note: \"If you don't know what this is, don't touch it!\", type: \"switch\", value: false},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"clipboard\",\n        name: \"Clipboard\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"clipboardRead\", name: \"Allow terminal to read clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"clipboardWrite\", name: \"Allow terminal to write clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"copyOnSelect\", name: \"Copy on select\", type: \"switch\", value: true},\n                    {id: \"clipboardTrimTrailingSpaces\", name: \"Trim trailing space on copy\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteProtection\", name: \"Confirm when pasting unsafely\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteBracketedSafe\", name: \"Mark bracketed paste as safe\", type: \"switch\", value: true},\n                    {id: \"imageStorageLimit\", name: \"Image buffer limit (bytes)\", type: \"number\", value: 320000000, min: 0, max: 4294967295, size: 12},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"window\",\n        name: \"Window\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"windowVsync\", name: \"Enable vsync\", type: \"switch\", value: true},\n                    {id: \"windowInheritWorkingDirectory\", name: \"Inherit working directory\", type: \"switch\", value: true},\n                    {id: \"windowInheritFontSize\", name: \"Inherit font size\", type: \"switch\", value: true},\n                    {id: \"windowColorspace\", name: \"Window colorspace\", type: \"dropdown\", value: \"srgb\", options: [\"srgb\", \"display-p3\"]},\n                    {id: \"windowSaveState\", name: \"Save window state\", type: \"dropdown\", value: \"default\", options: [\"default\", \"never\", \"always\"]},\n                    // maybe move to application?\n                    {id: \"windowNewTabPosition\", name: \"New tab position\", type: \"dropdown\", value: \"current\", options: [\"current\", \"end\"]},\n                ]\n            },\n            {\n                id: \"appearance\",\n                name: \"Appearance\",\n                settings: [\n                    {id: \"windowTheme\", name: \"Window theme\", type: \"dropdown\", value: \"auto\", options: [\"auto\", \"system\", \"light\", \"dark\"]},\n                    {id: \"windowDecoration\", name: \"Enable native frames\", type: \"switch\", value: true},\n                    {id: \"windowPaddingX\", name: \"Horizontal window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingY\", name: \"Vertical window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingBalance\", name: \"Auto-balance window padding\", type: \"switch\", value: false},\n                    {id: \"windowPaddingColor\", name: \"Window padding color\", type: \"dropdown\", value: \"extend\", options: [\"background\", \"extend\", \"extend-always\"]},\n\n                    // maybe move to colors\n                    {id: \"backgroundOpacity\", name: \"Background opacity\", type: \"number\", range: true, value: 1, min: 0, max: 1, step: 0.01},\n                    {id: \"backgroundBlurRadius\", name: \"Background blur radius\", note: \"A value of 20 is reasonable for a good looking blur, going beyond that can cause rendering and performance issues.\", type: \"number\", range: true, value: 0, min: 0, max: 50, step: 1},\n                    {id: \"unfocusedSplitOpacity\", name: \"Unfocused split opacity\", type: \"number\", range: true, value: 0.7, min: 0.15, max: 1, step: 0.01},\n                    {id: \"unfocusedSplitFill\", name: \"Unfocused split fill color\", type: \"color\", value: \"\"},\n                ]\n            },\n            {\n                id: \"resize\",\n                name: \"Sizing & Resizing\",\n                settings: [\n                    {id: \"windowHeight\", name: \"Initial window height\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 4, step: 1, size: 4},\n                    {id: \"windowWidth\", name: \"Initial window width\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 10, step: 1, size: 4},\n                    {id: \"windowStepResize\", name: \"Resize in grid cell increments\", type: \"switch\", value: false},\n                    {id: \"resizeOverlay\", name: \"Show resize overlays\", type: \"dropdown\", value: \"after-first\", options: [\"always\", \"never\", \"after-first\"]},\n                    {id: \"resizeOverlayPosition\", name: \"Resize overlay position\", type: \"dropdown\", value: \"center\", options: [\"center\", \"top-left\", \"top-center\", \"top-right\", \"bottom-left\", \"bottom-center\", \"bottom-right\"]},\n                    {id: \"resizeOverlayDuration\", name: \"Show resize overlay time\", type: \"text\", value: \"750ms\"},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"colors\",\n        name: \"Colors\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                settings: [\n                    {\n                        id: \"theme\",\n                        name: \"Color theme\",\n                        note: \"Any colors selected after setting this will overwrite the theme's colors.\",\n                        type: \"dropdown\",\n                        value: \"\",\n                        options: [\"\", ...themeFileNames]\n                    },\n                    {id: \"boldIsBright\", name: \"Bold text uses bright colors\", type: \"switch\", value: false},\n                    {id: \"minimumContrast\", name: \"Minimum contrast\", type: \"number\", value: 1, range: true, min: 1, max: 21, step: 0.1},\n                ]\n            },\n            {\n                id: \"base\",\n                name: \"Base Colors\",\n                note: \"The preview here shows selected text in the second line of the command output.\",\n                settings: [\n                    {id: \"background\", name: \"Background color\", type: \"color\", value: \"#282c34\"},\n                    {id: \"foreground\", name: \"Foreground color\", type: \"color\", value: \"#ffffff\"},\n                    {id: \"selectionBackground\", name: \"Selection background color\", type: \"color\", value: \"\"},\n                    {id: \"selectionForeground\", name: \"Selection foreground color\", type: \"color\", value: \"\"},\n                    {id: \"selectionInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause selections to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                ]\n            },\n            {\n                id: \"cursor\",\n                name: \"Cursor\",\n                note: \"The cursor in this preview blinks on and off at 1 second intervals for emphasis, it may not match what you see in Ghostty!\",\n                settings: [\n                    {id: \"cursorColor\", name: \"Cursor color\", type: \"color\", value: \"\"},\n                    {id: \"cursorText\", name: \"Text color under cursor\", type: \"color\", value: \"\"},\n                    {id: \"cursorInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause cells under the cursor to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                    {id: \"cursorOpacity\", name: \"Cursor opacity\", type: \"number\", value: 1, range: true, min: 0, max: 1, step: 0.05},\n                    {id: \"cursorStyle\", name: \"Cursor style\", type: \"dropdown\", value: \"block\", options: [\"block\", \"bar\", \"underline\", {value: \"block_hollow\", name: \"hollow block\"}]},\n                    {id: \"cursorStyleBlink\", name: \"Cursor blink style\", note: \"The `default` option defers to DEC mode 12 to determine blinking state.\", type: \"dropdown\", value: \"\", options: [\"true\", \"false\", {value: \"\", name: \"default\"}]},\n                ]\n            },\n            {\n                id: \"palette\",\n                name: \"Color Palette\",\n                note: \"The first 16 colors are the most commonly displayed colors in the terminal.\\n\\nColors 1-8 are typically black, red, green, yellow, blue, magenta, cyan, and white.\\nColors 9-16 are typically \\\"brighter\\\" variants of these colors.\",\n                settings: [\n                    {id: \"palette\", name: \"\", type: \"palette\", value: [\"#1d1f21\",\"#cc6666\",\"#b5bd68\",\"#f0c674\",\"#81a2be\",\"#b294bb\",\"#8abeb7\",\"#c5c8c6\",\"#666666\",\"#d54e53\",\"#b9ca4a\",\"#e7c547\",\"#7aa6da\",\"#c397d8\",\"#70c0b1\",\"#eaeaea\",\"#000000\",\"#00005f\",\"#000087\",\"#0000af\",\"#0000d7\",\"#0000ff\",\"#005f00\",\"#005f5f\",\"#005f87\",\"#005faf\",\"#005fd7\",\"#005fff\",\"#008700\",\"#00875f\",\"#008787\",\"#0087af\",\"#0087d7\",\"#0087ff\",\"#00af00\",\"#00af5f\",\"#00af87\",\"#00afaf\",\"#00afd7\",\"#00afff\",\"#00d700\",\"#00d75f\",\"#00d787\",\"#00d7af\",\"#00d7d7\",\"#00d7ff\",\"#00ff00\",\"#00ff5f\",\"#00ff87\",\"#00ffaf\",\"#00ffd7\",\"#00ffff\",\"#5f0000\",\"#5f005f\",\"#5f0087\",\"#5f00af\",\"#5f00d7\",\"#5f00ff\",\"#5f5f00\",\"#5f5f5f\",\"#5f5f87\",\"#5f5faf\",\"#5f5fd7\",\"#5f5fff\",\"#5f8700\",\"#5f875f\",\"#5f8787\",\"#5f87af\",\"#5f87d7\",\"#5f87ff\",\"#5faf00\",\"#5faf5f\",\"#5faf87\",\"#5fafaf\",\"#5fafd7\",\"#5fafff\",\"#5fd700\",\"#5fd75f\",\"#5fd787\",\"#5fd7af\",\"#5fd7d7\",\"#5fd7ff\",\"#5fff00\",\"#5fff5f\",\"#5fff87\",\"#5fffaf\",\"#5fffd7\",\"#5fffff\",\"#870000\",\"#87005f\",\"#870087\",\"#8700af\",\"#8700d7\",\"#8700ff\",\"#875f00\",\"#875f5f\",\"#875f87\",\"#875faf\",\"#875fd7\",\"#875fff\",\"#878700\",\"#87875f\",\"#878787\",\"#8787af\",\"#8787d7\",\"#8787ff\",\"#87af00\",\"#87af5f\",\"#87af87\",\"#87afaf\",\"#87afd7\",\"#87afff\",\"#87d700\",\"#87d75f\",\"#87d787\",\"#87d7af\",\"#87d7d7\",\"#87d7ff\",\"#87ff00\",\"#87ff5f\",\"#87ff87\",\"#87ffaf\",\"#87ffd7\",\"#87ffff\",\"#af0000\",\"#af005f\",\"#af0087\",\"#af00af\",\"#af00d7\",\"#af00ff\",\"#af5f00\",\"#af5f5f\",\"#af5f87\",\"#af5faf\",\"#af5fd7\",\"#af5fff\",\"#af8700\",\"#af875f\",\"#af8787\",\"#af87af\",\"#af87d7\",\"#af87ff\",\"#afaf00\",\"#afaf5f\",\"#afaf87\",\"#afafaf\",\"#afafd7\",\"#afafff\",\"#afd700\",\"#afd75f\",\"#afd787\",\"#afd7af\",\"#afd7d7\",\"#afd7ff\",\"#afff00\",\"#afff5f\",\"#afff87\",\"#afffaf\",\"#afffd7\",\"#afffff\",\"#d70000\",\"#d7005f\",\"#d70087\",\"#d700af\",\"#d700d7\",\"#d700ff\",\"#d75f00\",\"#d75f5f\",\"#d75f87\",\"#d75faf\",\"#d75fd7\",\"#d75fff\",\"#d78700\",\"#d7875f\",\"#d78787\",\"#d787af\",\"#d787d7\",\"#d787ff\",\"#d7af00\",\"#d7af5f\",\"#d7af87\",\"#d7afaf\",\"#d7afd7\",\"#d7afff\",\"#d7d700\",\"#d7d75f\",\"#d7d787\",\"#d7d7af\",\"#d7d7d7\",\"#d7d7ff\",\"#d7ff00\",\"#d7ff5f\",\"#d7ff87\",\"#d7ffaf\",\"#d7ffd7\",\"#d7ffff\",\"#ff0000\",\"#ff005f\",\"#ff0087\",\"#ff00af\",\"#ff00d7\",\"#ff00ff\",\"#ff5f00\",\"#ff5f5f\",\"#ff5f87\",\"#ff5faf\",\"#ff5fd7\",\"#ff5fff\",\"#ff8700\",\"#ff875f\",\"#ff8787\",\"#ff87af\",\"#ff87d7\",\"#ff87ff\",\"#ffaf00\",\"#ffaf5f\",\"#ffaf87\",\"#ffafaf\",\"#ffafd7\",\"#ffafff\",\"#ffd700\",\"#ffd75f\",\"#ffd787\",\"#ffd7af\",\"#ffd7d7\",\"#ffd7ff\",\"#ffff00\",\"#ffff5f\",\"#ffff87\",\"#ffffaf\",\"#ffffd7\",\"#ffffff\",\"#080808\",\"#121212\",\"#1c1c1c\",\"#262626\",\"#303030\",\"#3a3a3a\",\"#444444\",\"#4e4e4e\",\"#585858\",\"#626262\",\"#6c6c6c\",\"#767676\",\"#808080\",\"#8a8a8a\",\"#949494\",\"#9e9e9e\",\"#a8a8a8\",\"#b2b2b2\",\"#bcbcbc\",\"#c6c6c6\",\"#d0d0d0\",\"#dadada\",\"#e4e4e4\",\"#eeeeee\"]},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"fonts\",\n        name: \"Fonts\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"General Font Settings\",\n                settings: [\n                    {id: \"fontSize\", name: \"Base font size\", type: \"number\", value: 13, min: 4, max: 60, step: 0.5, range: true},\n                    {id: \"fontThicken\", name: \"Thicken fonts\", type: \"switch\", note: \"This currently only affects macOS.\", value: false},\n                    {id: \"fontFeature\", name: \"Font ligature settings\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"family\",\n                name: \"Font Families\",\n                settings: [\n                    {id: \"fontFamily\", name: \"Main font family\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBold\", name: \"Font family for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyItalic\", name: \"Font family for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBoldItalic\", name: \"Font family for bold italic text\", type: \"text\", value: \"\"},\n                    {id: \"windowTitleFontFamily\", name: \"Window title font family\", note: \"This is currently only supported on macOS\", type: \"text\", value: \"\"},\n                    {id: \"fontCodepointMap\", name: \"Unicode-specifc font mapping\", note: \"\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"styles\",\n                name: \"Font Styles\",\n                note: \"Named font styles for the fields above. For example for `Ioveska Heavy` you would use a style of `Heavy`. Alternately you can set the style to `false` to completely disable the style and revert to default style.\",\n                settings: [\n                    {id: \"fontStyle\", name: \"Main font style\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBold\", name: \"Font style for bold text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleItalic\", name: \"Font style for italic text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBoldItalic\", name: \"Font style for bold italic text\", type: \"text\", value: \"default\"},\n                ]\n            },\n            {\n                id: \"variations\",\n                name: \"Font Variations\",\n                note: \"Variable font specific settings, please only touch this if you know what you're doing!\",\n                settings: [\n                    {id: \"fontVariation\", name: \"Main font variant\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBold\", name: \"Font variant for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationItalic\", name: \"Font variant for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBoldItalic\", name: \"Font variant for bold italic text\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced Font & Cell Settings\",\n                note: \"The settings below have very little validation in Ghostty and can cause your terminal to become unusable. Be careful messing with any of these.\",\n                settings: [\n                    {id: \"adjustCellWidth\", name: \"Cell width adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCellHeight\", name: \"Cell height adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustFontBaseline\", name: \"Font baseline adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlinePosition\", name: \"Underline position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlineThickness\", name: \"Underline thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughPosition\", name: \"Strikethrough position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughThickness\", name: \"Strikethrough thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCursorThickness\", name: \"Cursor thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"graphemeWidthMethod\", name: \"Grapheme width calculation method\", type: \"dropdown\", value: \"unicode\", options: [\"unicode\", \"legacy\"]},\n                ]\n            },\n\n        ]\n    },\n    {\n        id: \"keybinds\",\n        name: \"Keybinds\",\n        groups: [\n            {\n                id: \"keybinds\",\n                name: \"\",\n                settings: [\n                    {id: \"keybind\", name: \"\", type: \"keybinds\", value: [\"super+page_up=scroll_page_up\", \"super+physical:four=goto_tab:4\", \"super+shift+down=jump_to_prompt:1\", \"super+shift+w=close_window\", \"super+shift+left_bracket=previous_tab\", \"super+alt+i=inspector:toggle\", \"super+w=close_surface\", \"super+physical:eight=goto_tab:8\", \"super+alt+right=goto_split:right\", \"shift+up=adjust_selection:up\", \"super+enter=toggle_fullscreen\", \"super+t=new_tab\", \"super+c=copy_to_clipboard\", \"super+shift+right_bracket=next_tab\", \"super+physical:one=goto_tab:1\", \"shift+left=adjust_selection:left\", \"super+equal=increase_font_size:1\", \"shift+page_up=adjust_selection:page_up\", \"super+physical:three=goto_tab:3\", \"super+d=new_split:right\", \"super+ctrl+down=resize_split:down,10\", \"shift+end=adjust_selection:end\", \"super+plus=increase_font_size:1\", \"super+q=quit\", \"super+home=scroll_to_top\", \"super+ctrl+left=resize_split:left,10\", \"super+ctrl+up=resize_split:up,10\", \"super+shift+up=jump_to_prompt:-1\", \"shift+right=adjust_selection:right\", \"super+comma=open_config\", \"super+shift+comma=reload_config\", \"super+minus=decrease_font_size:1\", \"shift+page_down=adjust_selection:page_down\", \"super+a=select_all\", \"alt+shift+equal=equalize_splits\", \"super+shift+enter=toggle_split_zoom\", \"super+alt+down=goto_split:bottom\", \"super+ctrl+f=toggle_fullscreen\", \"super+ctrl+right=resize_split:right,10\", \"super+alt+shift+j=write_scrollback_file:open\", \"shift+down=adjust_selection:down\", \"super+n=new_window\", \"super+alt+left=goto_split:left\", \"super+page_down=scroll_page_down\", \"super+alt+shift+w=close_all_windows\", \"super+alt+up=goto_split:top\", \"super+left_bracket=goto_split:previous\", \"super+physical:nine=goto_tab:9\", \"super+right_bracket=goto_split:next\", \"super+end=scroll_to_bottom\", \"super+shift+j=write_scrollback_file:paste\", \"super+shift+d=new_split:down\", \"super+zero=reset_font_size\", \"super+physical:five=goto_tab:5\", \"shift+home=adjust_selection:home\", \"super+physical:seven=goto_tab:7\", \"super+k=clear_screen\", \"super+physical:two=goto_tab:2\", \"super+physical:six=goto_tab:6\", \"super+v=paste_from_clipboard\"]}\n                ]\n            }\n        ]\n    },\n    {\n        id: \"mouse\",\n        name: \"Mouse\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"cursorClickToMove\", name: \"Enable click to move cursor\", type: \"switch\", value: true},\n                    {id: \"mouseHideWhileTyping\", name: \"Hide mouse while typing\", type: \"switch\", value: false},\n                    {id: \"mouseShiftCapture\", name: \"Allow shift with mouse click\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"always\", \"never\"]},\n                    // Technically the values should be min: 0.01, max: 10000, step: 0.01 but those are insane so instead I'll use sane defaults\n                    {id: \"mouseScrollMultiplier\", name: \"Mouse scroll multiplier\", type: \"number\", range: true, value: 1, min: 0.1, max: 10, step: 0.1},\n                    {id: \"focusFollowsMouse\", name: \"Focus splits on mouse move\", type: \"switch\", value: false},\n                    {id: \"clickRepeatInterval\", name: \"Milliseconds between multi-click\", note: \"A value of 0 means to use the operating system's default timing.\", type: \"number\", value: 0, min: 0, size: 4},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"gtk\",\n        name: \"GTK\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"class\", name: \"WM_CLASS class field\", note: \"This defaults to `com.mitchellh.ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"x11InstanceName\", name: \"WM_CLASS instance name\", note: \"This defaults to `ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"gtkSingleInstance\", name: \"Single-instance mode\", type: \"dropdown\", value: \"desktop\", options: [{name: \"detect\", value: \"desktop\"}, \"true\", \"false\"]},\n                    {id: \"gtkTitlebar\", name: \"Show titlebar\", type: \"switch\", value: true},\n                    {id: \"gtkTabsLocation\", name: \"Tab location\", type: \"dropdown\", value: \"top\", options: [\"top\", \"right\", \"bottom\", \"left\"]},\n                    {id: \"gtkWideTabs\", name: \"Use wide tabs\", type: \"switch\", value: true},\n                    {id: \"gtkAdwaita\", name: \"Enable adwaita theme support\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"linux\",\n        name: \"Linux\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"linuxCgroup\", name: \"Use dedicated cgroups\", type: \"dropdown\", value: \"single-instance\", options: [\"single-instance\", \"always\", \"never\"]},\n                    {id: \"linuxCgroupMemoryLimit\", name: \"Memory limit (bytes)\", type: \"number\", min: 0, max: 4294967295, size: 12},\n                    {id: \"linuxCgroupProcessLimit\", name: \"Max number of processes\", type: \"number\", min: 0, size: 5},\n                    {id: \"linuxCgroupHardFail\", name: \"Hard fail on startup\", type: \"switch\", value: false},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"macos\",\n        name: \"macOS\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"macosNonNativeFullscreen\", name: \"Use non-native fullscreen\", note: \"Tabs currently do not work with non-native fullscreen windows\", type: \"dropdown\", value: \"false\", options: [\"visible-menu\", \"true\", \"false\"]},\n                    {id: \"macosTitlebarStyle\", name: \"Titlebar style\", type: \"dropdown\", value: \"transparent\", options: [\"transparent\", \"native\", \"tabs\"]},\n                    {id: \"macosOptionAsAlt\", name: \"Use option key as alt key\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"left\", \"right\"]},\n                    {id: \"macosWindowShadow\", name: \"Show the window shadow\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n] as Panel[];\n```\n```typescript\n\nconst {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\nconst colorScheme = parseColorScheme(colorSchemeResponse);\n// error: 'colorScheme' is assigned a value but never used. Allowed unused vars must match /^_/u.\n\nexport default [\n```\n\n\nI understand the confusion. The issue is that we're trying to use Svelte-specific reactive statements in a TypeScript file. Let's modify the approach to work with TypeScript and the existing structure. Here's how we can update the `config.svelte.ts` file to handle theme changes:\n\n1. First, import the necessary functions from the `settings.ts` file:\n\n```typescript\nimport { fetchColorScheme, parseColorScheme } from \"$lib/data/settings\";\n```\n\n2. Add a new function to handle theme changes:\n\n```typescript\nasync function handleThemeChange(themeName: string) {\n    if (!themeName) return;\n    \n    try {\n        const { colorSchemeResponse } = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        // Apply the theme colors to the config\n        if (colorScheme.background) config.background = colorScheme.background;\n        if (colorScheme.foreground) config.foreground = colorScheme.foreground;\n        if (colorScheme.selectionBackground) config.selectionBackground = colorScheme.selectionBackground;\n        if (colorScheme.selectionForeground) config.selectionForeground = colorScheme.selectionForeground;\n        if (colorScheme.cursorColor) config.cursorColor = colorScheme.cursorColor;\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill('#000000');\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[parseInt(index)] = color as HexColor;\n            }\n            config.palette = newPalette;\n        }\n    } catch (error) {\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n\n3. Modify the `load` function to call `handleThemeChange` when the theme is changed:\n\n```typescript\nexport function load(conf: Partial<typeof config>) {\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n            \n            // Call handleThemeChange when the theme is changed\n            if (key === 'theme') {\n                handleThemeChange(conf[key] as string);\n            }\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n        }\n        else if (key === \"palette\") {\n            for (let p = 0; p < conf.palette.length; p++) {\n                if (!conf.palette[p]) continue;\n                config.palette[p] = conf.palette[p];\n            }\n        }\n    }\n}\n```\n\n4. Remove the unused `colorScheme` variable from the `settings.ts` file to resolve the ESLint warning:\n\n```typescript\n// Remove or comment out these lines\n// const {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\n// const colorScheme = parseColorScheme(colorSchemeResponse);\n```\n\nThese changes will apply the theme colors when a new theme is selected, without using Svelte-specific reactive statements. The theme will be applied when the configuration is loaded or when the theme is changed through the UI.\nThe color palette is not being updated when I make a selection from the theme dropdown menu\n```ts ghostty-config/src/lib/data/settings.ts\nimport config from \"$lib/stores/config.svelte\";\nimport type {HexColor} from \"$lib/utils/colors\";\n\ninterface BaseSettingType {\n    id: string;\n    name: string;\n    note?: string;\n}\n\ninterface Panel extends BaseSettingType {\n    groups: Group[];\n}\n\ninterface Group extends BaseSettingType {\n    settings: (Switch | Text | Number | Dropdown | Color | Palette | Keybinds)[];\n    // type: \"group\";\n}\n\ntype SettingType = \"switch\" | \"number\" | \"dropdown\" | \"text\" | \"color\" | \"palette\" | \"keybinds\";\n\ninterface BaseSettingItem extends BaseSettingType {\n    type: SettingType;\n    value: unknown;\n}\n\ninterface Switch extends BaseSettingItem {\n    type: \"switch\";\n    value: boolean;\n}\n\ninterface Text extends BaseSettingItem {\n    type: \"text\";\n    value: string;\n}\n\ninterface Number extends BaseSettingItem {\n    type: \"number\";\n    value: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    size?: number;\n    range?: boolean;\n}\n\ninterface DropdownOption {\n    name: string;\n    value: string;\n}\n\ninterface Dropdown extends BaseSettingItem {\n    type: \"dropdown\";\n    value: \"string\";\n    options: (DropdownOption | string)[];\n}\n\ninterface Color extends BaseSettingItem {\n    value: HexColor;\n    type: \"color\";\n}\n\ninterface Palette extends BaseSettingItem {\n    value: HexColor[];\n    type: \"palette\";\n}\n\nexport type KeybindString = `${string}=${string}`;\ninterface Keybinds extends BaseSettingItem {\n    value: KeybindString[];\n    type: \"keybinds\";\n}\n\ninterface ThemeResponse {\n  \"type\": string;\n  \"encoding\": string;\n  \"size\": number;\n  \"name\": string;\n  \"path\": string;\n  \"content\": string;\n  \"sha\": string;\n  \"url\": string;\n  \"git_url\": string;\n  \"html_url\": string;\n  \"download_url\": string;\n  \"_links\": {\n    \"git\": string;\n    \"self\": string;\n    \"html\": string;\n  }\n}\n\ninterface ColorScheme {\n  palette: { [key: string]: string };\n  background?: string;\n  foreground?: string;\n  cursorColor?: string;\n  selectionBackground?: string;\n  selectionForeground?: string;\n}\n\nconst fetchThemeFiles = async () => {\n    const apiUrl = \"https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty\";\n\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const themeFiles = await response.json();\n\n    return {themeFiles};\n};\n\n// Function to convert raw string data into a JSON object\nexport const parseColorScheme = (input: string): ColorScheme => {\n  const colorScheme: ColorScheme = {palette: {}};\n\n  // Split input by lines\n  const lines = input.split(\"\\n\");\n\n  lines.forEach((line) => {\n    if (line.startsWith(\"palette\")) {\n      const [, rest] = line.split(\"palette =\").map(part => part.trim());\n\n      if (rest) {\n        const [paletteIndex, color] = rest.split(\"=\");\n        if (paletteIndex && color) {\n          colorScheme.palette[paletteIndex.trim()] = color.trim();\n        }\n      }\n    }\n    else {\n      const [key, value] = line.split(\"=\").map(part => part.trim());\n\n      switch (key) {\n        case \"background\":\n          colorScheme.background = `#${value}`;\n          break;\n        case \"foreground\":\n          colorScheme.foreground = `#${value}`;\n          break;\n        case \"cursor-color\":\n          colorScheme.cursorColor = `#${value}`;\n          break;\n        case \"selection-background\":\n          colorScheme.selectionBackground = `#${value}`;\n          break;\n        case \"selection-foreground\":\n          colorScheme.selectionForeground = `#${value}`;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n\n  return colorScheme;\n};\n\nexport const fetchColorScheme = async (theme: string) => {\n    const apiUrl = `https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty${theme ? \"/\" + theme : \"\"}`;\n\n    const response = await fetch(apiUrl,{\n        headers: {\n            Accept: \"application/vnd.github.raw+json\"\n        }\n    });\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const colorSchemeResponse = await response.text();\n\n    return {colorSchemeResponse};\n};\n\nconst {themeFiles} = await fetchThemeFiles();\nconst themeFileNames = themeFiles && themeFiles.map((file: ThemeResponse) => file.name);\n\n// const {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\n// const colorScheme = parseColorScheme(colorSchemeResponse);\n\nexport default [\n    {\n        id: \"application\",\n        name: \"Application\",\n        note: \"\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                // type: \"group\",\n                settings: [\n                    {id: \"title\", name: \"Static title for all windows\", type: \"text\", value: \"\"},\n                    {id: \"desktopNotifications\", name: \"Allow desktop notifications\", type: \"switch\", value: true},\n                    {id: \"configFile\", name: \"Additional config file\", type: \"text\", value: \"\"},\n                    {id: \"configDefaultFiles\", name: \"Load default config file\", type: \"switch\", value: true},\n                    {id: \"linkUrl\", name: \"Automatically link URLs\", note: \"Matching occurs while holding the control (Linux) or command (macOS) key.\", type: \"switch\", value: true},\n                ]\n            },\n            {\n                id: \"startup\",\n                name: \"Startup\",\n                // type: \"group\",\n                settings: [\n                    {id: \"command\", name: \"Command to run on launch\", type: \"text\", value: \"\"},\n                    {id: \"fullscreen\", name: \"Launch in fullscreen mode\", type: \"switch\", value: false},\n                    {id: \"initialWindow\", name: \"Show a window on startup\", type: \"switch\", value: true},\n                    {id: \"workingDirectory\", name: \"Directory to use after startup\", note: \"Special values of `home` and `inherit` are also allowed here.\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shutdown\",\n                name: \"Shutdown\",\n                // type: \"group\",\n                settings: [\n                    {id: \"waitAfterCommand\", name: \"Wait for input after command\", type: \"switch\", value: false},\n                    {id: \"abnormalCommandExitRuntime\", name: \"Abnormal command exit runtime\", type: \"number\", value: 250, min: 0, size: 5},\n                    {id: \"confirmCloseSurface\", name: \"Confirm when closing a surface\", type: \"switch\", value: true},\n                    {id: \"quitAfterLastWindowClosed\", name: \"Quit after closing last window\", type: \"switch\", value: false},\n                    {id: \"quitAfterLastWindowClosedDelay\", name: \"Delay before auto quitting\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shell\",\n                name: \"Shell Integration\",\n                // type: \"group\",\n                settings: [\n                    {id: \"shellIntegration\", name: \"Shell integration style\", type: \"dropdown\", value: \"detect\", options: [\"none\", \"detect\", \"bash\", \"elvish\", \"fish\", \"zsh\"]},\n                    {id: \"shellIntegrationFeatures\", name: \"Shell integration features\", note: \"The current available features are cursor, sudo, and title. Including one force enables it, prefixing it with `no-` force disables it, omitting it falls back to default.\", type: \"text\", value: \"cursor,no-sudo,title\"},\n                    {id: \"term\", name: \"TERM environment variable\", type: \"text\", value: \"xterm-ghostty\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced\",\n                note: \"You should only touch these settings if you know what you're doing, otherwise you could cause major issues with Ghostty!\",\n                // type: \"group\",\n                settings: [\n                    {id: \"scrollbackLimit\", name: \"Scrollback buffer size (bytes)\", note: \"This buffer exists completely in memory but is allocated lazily.\", type: \"number\", value: 10000000, min: 0, size: 10},\n                    {id: \"customShader\", name: \"Custom shader\", note: \"This matches the API of Shadertoy.\", type: \"text\", value: \"\"},\n                    {id: \"customShaderAnimation\", name: \"Allow shaders to animate\", type: \"dropdown\", value: \"false\", options: [\"false\", \"true\", \"always\"]},\n                    {id: \"enquiryResponse\", name: \"Reponse to ENQ\", type: \"text\", value: \"\"},\n                    {id: \"oscColorReportFormat\", name: \"OSC color report format\", type: \"dropdown\", value: \"16-bit\", options: [\"none\", \"8-bit\", \"16-bit\"]},\n                    {id: \"vtKamAllowed\", name: \"VT kam mode allowed\", note: \"If you don't know what this is, don't touch it!\", type: \"switch\", value: false},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"clipboard\",\n        name: \"Clipboard\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"clipboardRead\", name: \"Allow terminal to read clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"clipboardWrite\", name: \"Allow terminal to write clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"copyOnSelect\", name: \"Copy on select\", type: \"switch\", value: true},\n                    {id: \"clipboardTrimTrailingSpaces\", name: \"Trim trailing space on copy\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteProtection\", name: \"Confirm when pasting unsafely\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteBracketedSafe\", name: \"Mark bracketed paste as safe\", type: \"switch\", value: true},\n                    {id: \"imageStorageLimit\", name: \"Image buffer limit (bytes)\", type: \"number\", value: 320000000, min: 0, max: 4294967295, size: 12},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"window\",\n        name: \"Window\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"windowVsync\", name: \"Enable vsync\", type: \"switch\", value: true},\n                    {id: \"windowInheritWorkingDirectory\", name: \"Inherit working directory\", type: \"switch\", value: true},\n                    {id: \"windowInheritFontSize\", name: \"Inherit font size\", type: \"switch\", value: true},\n                    {id: \"windowColorspace\", name: \"Window colorspace\", type: \"dropdown\", value: \"srgb\", options: [\"srgb\", \"display-p3\"]},\n                    {id: \"windowSaveState\", name: \"Save window state\", type: \"dropdown\", value: \"default\", options: [\"default\", \"never\", \"always\"]},\n                    // maybe move to application?\n                    {id: \"windowNewTabPosition\", name: \"New tab position\", type: \"dropdown\", value: \"current\", options: [\"current\", \"end\"]},\n                ]\n            },\n            {\n                id: \"appearance\",\n                name: \"Appearance\",\n                settings: [\n                    {id: \"windowTheme\", name: \"Window theme\", type: \"dropdown\", value: \"auto\", options: [\"auto\", \"system\", \"light\", \"dark\"]},\n                    {id: \"windowDecoration\", name: \"Enable native frames\", type: \"switch\", value: true},\n                    {id: \"windowPaddingX\", name: \"Horizontal window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingY\", name: \"Vertical window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingBalance\", name: \"Auto-balance window padding\", type: \"switch\", value: false},\n                    {id: \"windowPaddingColor\", name: \"Window padding color\", type: \"dropdown\", value: \"extend\", options: [\"background\", \"extend\", \"extend-always\"]},\n\n                    // maybe move to colors\n                    {id: \"backgroundOpacity\", name: \"Background opacity\", type: \"number\", range: true, value: 1, min: 0, max: 1, step: 0.01},\n                    {id: \"backgroundBlurRadius\", name: \"Background blur radius\", note: \"A value of 20 is reasonable for a good looking blur, going beyond that can cause rendering and performance issues.\", type: \"number\", range: true, value: 0, min: 0, max: 50, step: 1},\n                    {id: \"unfocusedSplitOpacity\", name: \"Unfocused split opacity\", type: \"number\", range: true, value: 0.7, min: 0.15, max: 1, step: 0.01},\n                    {id: \"unfocusedSplitFill\", name: \"Unfocused split fill color\", type: \"color\", value: \"\"},\n                ]\n            },\n            {\n                id: \"resize\",\n                name: \"Sizing & Resizing\",\n                settings: [\n                    {id: \"windowHeight\", name: \"Initial window height\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 4, step: 1, size: 4},\n                    {id: \"windowWidth\", name: \"Initial window width\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 10, step: 1, size: 4},\n                    {id: \"windowStepResize\", name: \"Resize in grid cell increments\", type: \"switch\", value: false},\n                    {id: \"resizeOverlay\", name: \"Show resize overlays\", type: \"dropdown\", value: \"after-first\", options: [\"always\", \"never\", \"after-first\"]},\n                    {id: \"resizeOverlayPosition\", name: \"Resize overlay position\", type: \"dropdown\", value: \"center\", options: [\"center\", \"top-left\", \"top-center\", \"top-right\", \"bottom-left\", \"bottom-center\", \"bottom-right\"]},\n                    {id: \"resizeOverlayDuration\", name: \"Show resize overlay time\", type: \"text\", value: \"750ms\"},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"colors\",\n        name: \"Colors\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                settings: [\n                    {\n                        id: \"theme\",\n                        name: \"Color theme\",\n                        note: \"Any colors selected after setting this will overwrite the theme's colors.\",\n                        type: \"dropdown\",\n                        value: \"\",\n                        options: [\"\", ...themeFileNames]\n                    },\n                    {id: \"boldIsBright\", name: \"Bold text uses bright colors\", type: \"switch\", value: false},\n                    {id: \"minimumContrast\", name: \"Minimum contrast\", type: \"number\", value: 1, range: true, min: 1, max: 21, step: 0.1},\n                ]\n            },\n            {\n                id: \"base\",\n                name: \"Base Colors\",\n                note: \"The preview here shows selected text in the second line of the command output.\",\n                settings: [\n                    {id: \"background\", name: \"Background color\", type: \"color\", value: \"#282c34\"},\n                    {id: \"foreground\", name: \"Foreground color\", type: \"color\", value: \"#ffffff\"},\n                    {id: \"selectionBackground\", name: \"Selection background color\", type: \"color\", value: \"\"},\n                    {id: \"selectionForeground\", name: \"Selection foreground color\", type: \"color\", value: \"\"},\n                    {id: \"selectionInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause selections to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                ]\n            },\n            {\n                id: \"cursor\",\n                name: \"Cursor\",\n                note: \"The cursor in this preview blinks on and off at 1 second intervals for emphasis, it may not match what you see in Ghostty!\",\n                settings: [\n                    {id: \"cursorColor\", name: \"Cursor color\", type: \"color\", value: \"\"},\n                    {id: \"cursorText\", name: \"Text color under cursor\", type: \"color\", value: \"\"},\n                    {id: \"cursorInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause cells under the cursor to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                    {id: \"cursorOpacity\", name: \"Cursor opacity\", type: \"number\", value: 1, range: true, min: 0, max: 1, step: 0.05},\n                    {id: \"cursorStyle\", name: \"Cursor style\", type: \"dropdown\", value: \"block\", options: [\"block\", \"bar\", \"underline\", {value: \"block_hollow\", name: \"hollow block\"}]},\n                    {id: \"cursorStyleBlink\", name: \"Cursor blink style\", note: \"The `default` option defers to DEC mode 12 to determine blinking state.\", type: \"dropdown\", value: \"\", options: [\"true\", \"false\", {value: \"\", name: \"default\"}]},\n                ]\n            },\n            {\n                id: \"palette\",\n                name: \"Color Palette\",\n                note: \"The first 16 colors are the most commonly displayed colors in the terminal.\\n\\nColors 1-8 are typically black, red, green, yellow, blue, magenta, cyan, and white.\\nColors 9-16 are typically \\\"brighter\\\" variants of these colors.\",\n                settings: [\n                    {id: \"palette\", name: \"\", type: \"palette\", value: [\"#1d1f21\",\"#cc6666\",\"#b5bd68\",\"#f0c674\",\"#81a2be\",\"#b294bb\",\"#8abeb7\",\"#c5c8c6\",\"#666666\",\"#d54e53\",\"#b9ca4a\",\"#e7c547\",\"#7aa6da\",\"#c397d8\",\"#70c0b1\",\"#eaeaea\",\"#000000\",\"#00005f\",\"#000087\",\"#0000af\",\"#0000d7\",\"#0000ff\",\"#005f00\",\"#005f5f\",\"#005f87\",\"#005faf\",\"#005fd7\",\"#005fff\",\"#008700\",\"#00875f\",\"#008787\",\"#0087af\",\"#0087d7\",\"#0087ff\",\"#00af00\",\"#00af5f\",\"#00af87\",\"#00afaf\",\"#00afd7\",\"#00afff\",\"#00d700\",\"#00d75f\",\"#00d787\",\"#00d7af\",\"#00d7d7\",\"#00d7ff\",\"#00ff00\",\"#00ff5f\",\"#00ff87\",\"#00ffaf\",\"#00ffd7\",\"#00ffff\",\"#5f0000\",\"#5f005f\",\"#5f0087\",\"#5f00af\",\"#5f00d7\",\"#5f00ff\",\"#5f5f00\",\"#5f5f5f\",\"#5f5f87\",\"#5f5faf\",\"#5f5fd7\",\"#5f5fff\",\"#5f8700\",\"#5f875f\",\"#5f8787\",\"#5f87af\",\"#5f87d7\",\"#5f87ff\",\"#5faf00\",\"#5faf5f\",\"#5faf87\",\"#5fafaf\",\"#5fafd7\",\"#5fafff\",\"#5fd700\",\"#5fd75f\",\"#5fd787\",\"#5fd7af\",\"#5fd7d7\",\"#5fd7ff\",\"#5fff00\",\"#5fff5f\",\"#5fff87\",\"#5fffaf\",\"#5fffd7\",\"#5fffff\",\"#870000\",\"#87005f\",\"#870087\",\"#8700af\",\"#8700d7\",\"#8700ff\",\"#875f00\",\"#875f5f\",\"#875f87\",\"#875faf\",\"#875fd7\",\"#875fff\",\"#878700\",\"#87875f\",\"#878787\",\"#8787af\",\"#8787d7\",\"#8787ff\",\"#87af00\",\"#87af5f\",\"#87af87\",\"#87afaf\",\"#87afd7\",\"#87afff\",\"#87d700\",\"#87d75f\",\"#87d787\",\"#87d7af\",\"#87d7d7\",\"#87d7ff\",\"#87ff00\",\"#87ff5f\",\"#87ff87\",\"#87ffaf\",\"#87ffd7\",\"#87ffff\",\"#af0000\",\"#af005f\",\"#af0087\",\"#af00af\",\"#af00d7\",\"#af00ff\",\"#af5f00\",\"#af5f5f\",\"#af5f87\",\"#af5faf\",\"#af5fd7\",\"#af5fff\",\"#af8700\",\"#af875f\",\"#af8787\",\"#af87af\",\"#af87d7\",\"#af87ff\",\"#afaf00\",\"#afaf5f\",\"#afaf87\",\"#afafaf\",\"#afafd7\",\"#afafff\",\"#afd700\",\"#afd75f\",\"#afd787\",\"#afd7af\",\"#afd7d7\",\"#afd7ff\",\"#afff00\",\"#afff5f\",\"#afff87\",\"#afffaf\",\"#afffd7\",\"#afffff\",\"#d70000\",\"#d7005f\",\"#d70087\",\"#d700af\",\"#d700d7\",\"#d700ff\",\"#d75f00\",\"#d75f5f\",\"#d75f87\",\"#d75faf\",\"#d75fd7\",\"#d75fff\",\"#d78700\",\"#d7875f\",\"#d78787\",\"#d787af\",\"#d787d7\",\"#d787ff\",\"#d7af00\",\"#d7af5f\",\"#d7af87\",\"#d7afaf\",\"#d7afd7\",\"#d7afff\",\"#d7d700\",\"#d7d75f\",\"#d7d787\",\"#d7d7af\",\"#d7d7d7\",\"#d7d7ff\",\"#d7ff00\",\"#d7ff5f\",\"#d7ff87\",\"#d7ffaf\",\"#d7ffd7\",\"#d7ffff\",\"#ff0000\",\"#ff005f\",\"#ff0087\",\"#ff00af\",\"#ff00d7\",\"#ff00ff\",\"#ff5f00\",\"#ff5f5f\",\"#ff5f87\",\"#ff5faf\",\"#ff5fd7\",\"#ff5fff\",\"#ff8700\",\"#ff875f\",\"#ff8787\",\"#ff87af\",\"#ff87d7\",\"#ff87ff\",\"#ffaf00\",\"#ffaf5f\",\"#ffaf87\",\"#ffafaf\",\"#ffafd7\",\"#ffafff\",\"#ffd700\",\"#ffd75f\",\"#ffd787\",\"#ffd7af\",\"#ffd7d7\",\"#ffd7ff\",\"#ffff00\",\"#ffff5f\",\"#ffff87\",\"#ffffaf\",\"#ffffd7\",\"#ffffff\",\"#080808\",\"#121212\",\"#1c1c1c\",\"#262626\",\"#303030\",\"#3a3a3a\",\"#444444\",\"#4e4e4e\",\"#585858\",\"#626262\",\"#6c6c6c\",\"#767676\",\"#808080\",\"#8a8a8a\",\"#949494\",\"#9e9e9e\",\"#a8a8a8\",\"#b2b2b2\",\"#bcbcbc\",\"#c6c6c6\",\"#d0d0d0\",\"#dadada\",\"#e4e4e4\",\"#eeeeee\"]},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"fonts\",\n        name: \"Fonts\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"General Font Settings\",\n                settings: [\n                    {id: \"fontSize\", name: \"Base font size\", type: \"number\", value: 13, min: 4, max: 60, step: 0.5, range: true},\n                    {id: \"fontThicken\", name: \"Thicken fonts\", type: \"switch\", note: \"This currently only affects macOS.\", value: false},\n                    {id: \"fontFeature\", name: \"Font ligature settings\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"family\",\n                name: \"Font Families\",\n                settings: [\n                    {id: \"fontFamily\", name: \"Main font family\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBold\", name: \"Font family for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyItalic\", name: \"Font family for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBoldItalic\", name: \"Font family for bold italic text\", type: \"text\", value: \"\"},\n                    {id: \"windowTitleFontFamily\", name: \"Window title font family\", note: \"This is currently only supported on macOS\", type: \"text\", value: \"\"},\n                    {id: \"fontCodepointMap\", name: \"Unicode-specifc font mapping\", note: \"\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"styles\",\n                name: \"Font Styles\",\n                note: \"Named font styles for the fields above. For example for `Ioveska Heavy` you would use a style of `Heavy`. Alternately you can set the style to `false` to completely disable the style and revert to default style.\",\n                settings: [\n                    {id: \"fontStyle\", name: \"Main font style\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBold\", name: \"Font style for bold text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleItalic\", name: \"Font style for italic text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBoldItalic\", name: \"Font style for bold italic text\", type: \"text\", value: \"default\"},\n                ]\n            },\n            {\n                id: \"variations\",\n                name: \"Font Variations\",\n                note: \"Variable font specific settings, please only touch this if you know what you're doing!\",\n                settings: [\n                    {id: \"fontVariation\", name: \"Main font variant\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBold\", name: \"Font variant for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationItalic\", name: \"Font variant for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBoldItalic\", name: \"Font variant for bold italic text\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced Font & Cell Settings\",\n                note: \"The settings below have very little validation in Ghostty and can cause your terminal to become unusable. Be careful messing with any of these.\",\n                settings: [\n                    {id: \"adjustCellWidth\", name: \"Cell width adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCellHeight\", name: \"Cell height adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustFontBaseline\", name: \"Font baseline adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlinePosition\", name: \"Underline position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlineThickness\", name: \"Underline thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughPosition\", name: \"Strikethrough position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughThickness\", name: \"Strikethrough thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCursorThickness\", name: \"Cursor thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"graphemeWidthMethod\", name: \"Grapheme width calculation method\", type: \"dropdown\", value: \"unicode\", options: [\"unicode\", \"legacy\"]},\n                ]\n            },\n\n        ]\n    },\n    {\n        id: \"keybinds\",\n        name: \"Keybinds\",\n        groups: [\n            {\n                id: \"keybinds\",\n                name: \"\",\n                settings: [\n                    {id: \"keybind\", name: \"\", type: \"keybinds\", value: [\"super+page_up=scroll_page_up\", \"super+physical:four=goto_tab:4\", \"super+shift+down=jump_to_prompt:1\", \"super+shift+w=close_window\", \"super+shift+left_bracket=previous_tab\", \"super+alt+i=inspector:toggle\", \"super+w=close_surface\", \"super+physical:eight=goto_tab:8\", \"super+alt+right=goto_split:right\", \"shift+up=adjust_selection:up\", \"super+enter=toggle_fullscreen\", \"super+t=new_tab\", \"super+c=copy_to_clipboard\", \"super+shift+right_bracket=next_tab\", \"super+physical:one=goto_tab:1\", \"shift+left=adjust_selection:left\", \"super+equal=increase_font_size:1\", \"shift+page_up=adjust_selection:page_up\", \"super+physical:three=goto_tab:3\", \"super+d=new_split:right\", \"super+ctrl+down=resize_split:down,10\", \"shift+end=adjust_selection:end\", \"super+plus=increase_font_size:1\", \"super+q=quit\", \"super+home=scroll_to_top\", \"super+ctrl+left=resize_split:left,10\", \"super+ctrl+up=resize_split:up,10\", \"super+shift+up=jump_to_prompt:-1\", \"shift+right=adjust_selection:right\", \"super+comma=open_config\", \"super+shift+comma=reload_config\", \"super+minus=decrease_font_size:1\", \"shift+page_down=adjust_selection:page_down\", \"super+a=select_all\", \"alt+shift+equal=equalize_splits\", \"super+shift+enter=toggle_split_zoom\", \"super+alt+down=goto_split:bottom\", \"super+ctrl+f=toggle_fullscreen\", \"super+ctrl+right=resize_split:right,10\", \"super+alt+shift+j=write_scrollback_file:open\", \"shift+down=adjust_selection:down\", \"super+n=new_window\", \"super+alt+left=goto_split:left\", \"super+page_down=scroll_page_down\", \"super+alt+shift+w=close_all_windows\", \"super+alt+up=goto_split:top\", \"super+left_bracket=goto_split:previous\", \"super+physical:nine=goto_tab:9\", \"super+right_bracket=goto_split:next\", \"super+end=scroll_to_bottom\", \"super+shift+j=write_scrollback_file:paste\", \"super+shift+d=new_split:down\", \"super+zero=reset_font_size\", \"super+physical:five=goto_tab:5\", \"shift+home=adjust_selection:home\", \"super+physical:seven=goto_tab:7\", \"super+k=clear_screen\", \"super+physical:two=goto_tab:2\", \"super+physical:six=goto_tab:6\", \"super+v=paste_from_clipboard\"]}\n                ]\n            }\n        ]\n    },\n    {\n        id: \"mouse\",\n        name: \"Mouse\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"cursorClickToMove\", name: \"Enable click to move cursor\", type: \"switch\", value: true},\n                    {id: \"mouseHideWhileTyping\", name: \"Hide mouse while typing\", type: \"switch\", value: false},\n                    {id: \"mouseShiftCapture\", name: \"Allow shift with mouse click\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"always\", \"never\"]},\n                    // Technically the values should be min: 0.01, max: 10000, step: 0.01 but those are insane so instead I'll use sane defaults\n                    {id: \"mouseScrollMultiplier\", name: \"Mouse scroll multiplier\", type: \"number\", range: true, value: 1, min: 0.1, max: 10, step: 0.1},\n                    {id: \"focusFollowsMouse\", name: \"Focus splits on mouse move\", type: \"switch\", value: false},\n                    {id: \"clickRepeatInterval\", name: \"Milliseconds between multi-click\", note: \"A value of 0 means to use the operating system's default timing.\", type: \"number\", value: 0, min: 0, size: 4},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"gtk\",\n        name: \"GTK\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"class\", name: \"WM_CLASS class field\", note: \"This defaults to `com.mitchellh.ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"x11InstanceName\", name: \"WM_CLASS instance name\", note: \"This defaults to `ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"gtkSingleInstance\", name: \"Single-instance mode\", type: \"dropdown\", value: \"desktop\", options: [{name: \"detect\", value: \"desktop\"}, \"true\", \"false\"]},\n                    {id: \"gtkTitlebar\", name: \"Show titlebar\", type: \"switch\", value: true},\n                    {id: \"gtkTabsLocation\", name: \"Tab location\", type: \"dropdown\", value: \"top\", options: [\"top\", \"right\", \"bottom\", \"left\"]},\n                    {id: \"gtkWideTabs\", name: \"Use wide tabs\", type: \"switch\", value: true},\n                    {id: \"gtkAdwaita\", name: \"Enable adwaita theme support\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"linux\",\n        name: \"Linux\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"linuxCgroup\", name: \"Use dedicated cgroups\", type: \"dropdown\", value: \"single-instance\", options: [\"single-instance\", \"always\", \"never\"]},\n                    {id: \"linuxCgroupMemoryLimit\", name: \"Memory limit (bytes)\", type: \"number\", min: 0, max: 4294967295, size: 12},\n                    {id: \"linuxCgroupProcessLimit\", name: \"Max number of processes\", type: \"number\", min: 0, size: 5},\n                    {id: \"linuxCgroupHardFail\", name: \"Hard fail on startup\", type: \"switch\", value: false},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"macos\",\n        name: \"macOS\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"macosNonNativeFullscreen\", name: \"Use non-native fullscreen\", note: \"Tabs currently do not work with non-native fullscreen windows\", type: \"dropdown\", value: \"false\", options: [\"visible-menu\", \"true\", \"false\"]},\n                    {id: \"macosTitlebarStyle\", name: \"Titlebar style\", type: \"dropdown\", value: \"transparent\", options: [\"transparent\", \"native\", \"tabs\"]},\n                    {id: \"macosOptionAsAlt\", name: \"Use option key as alt key\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"left\", \"right\"]},\n                    {id: \"macosWindowShadow\", name: \"Show the window shadow\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n] as Panel[];\n```\n```typescript\nimport config from \"$lib/stores/config.svelte\";\n// error: 'config' is defined but never used. Allowed unused vars must match /^_/u.\nimport type {HexColor} from \"$lib/utils/colors\";\n\n```\n\n\n```ts ghostty-config/src/lib/stores/config.svelte.ts\nimport {dev} from \"$app/environment\";\nimport settings, {type KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"$lib/utils/colors\";\nimport themeHandler from \"$lib/utils/themeHandler\";\n// import defs from \"../data/defaults.json\";\n\n// TODO: find a good way to properly type the config\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaults: Partial<Record<keyof DefaultConfig, any>> = {};\n\nfor (const panel of settings) {\n    for (const group of panel.groups) {\n        for (const setting of group.settings) {\n            defaults[setting.id as keyof typeof defaults] = setting.value;\n        }\n    }\n}\n\nif (dev) {\n    // eslint-disable-next-line no-console\n    console.log(defaults);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\n\nexport function keyToConfig(key: string) {\n    return key.replaceAll(/([A-Z])/g, \"-$1\").toLowerCase();\n}\n\nexport function diff() {\n    // TODO: more elegance\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const output: Partial<Record<keyof typeof defaults|string, any>> = {};\n\n    for (const k in config) {\n        const key = k as keyof DefaultConfig;\n        if (Array.isArray(config[key]) && key === \"keybind\") {\n            const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (Array.isArray(config[key]) && key === \"palette\") {\n            const toAdd = [];\n            for (let p = 0; p < defaults[key].length; p++) {\n                if (config[key][p] === defaults[key][p]) continue;\n                toAdd.push(`${p}=${config[key][p]}`);\n            }\n            // const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (config[key] != defaults[key]) {\n            output[keyToConfig(key)] = config[key];\n        }\n    }\n\n    return output;\n}\n\nexport function load(conf: Partial<typeof config>) {\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n\n            if (key === \"theme\") {\n                themeHandler(conf[key] as string);\n            }\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n        }\n        else if (key === \"palette\") {\n            for (let p = 0; p < conf.palette.length; p++) {\n                if (!conf.palette[p]) continue;\n                config.palette[p] = conf.palette[p];\n            }\n        }\n    }\n}\n\nexport default config;\n\n\n// TODO: is this useful?\ninterface DefaultConfig {\n    palette: HexColor[];\n    keybind: KeybindString[];\n    fontFamily: string;\n    fontFamilyBold: string;\n    fontFamilyItalic: string;\n    fontFamilyBoldItalic: string;\n    fontStyle: string;\n    fontStyleBold: string;\n    fontStyleItalic: string;\n    fontStyleBoldItalic: string;\n    fontFeature: string;\n    fontSize: number;\n    fontVariation: string;\n    fontVariationBold: string;\n    fontVariationItalic: string;\n    fontVariationBoldItalic: string;\n    fontCodepointMap: string;\n    fontThicken: boolean;\n    adjustCellWidth: string;\n    adjustCellHeight: string;\n    adjustFontBaseline: string;\n    adjustUnderlinePosition: string;\n    adjustUnderlineThickness: string;\n    adjustStrikethroughPosition: string;\n    adjustStrikethroughThickness: string;\n    adjustCursorThickness: string;\n    graphemeWidthMethod: string;\n    theme: string;\n    background: HexColor;\n    foreground: HexColor;\n    selectionForeground: string;\n    selectionBackground: string;\n    selectionInvertFgBg: boolean;\n    minimumContrast: number;\n    cursorColor: string;\n    cursorInvertFgBg: boolean;\n    cursorOpacity: number;\n    cursorStyle: string;\n    cursorStyleBlink: string;\n    cursorText: string;\n    cursorClickToMove: boolean;\n    mouseHideWhileTyping: boolean;\n    mouseShiftCapture: boolean;\n    mouseScrollMultiplier: number;\n    backgroundOpacity: number;\n    backgroundBlurRadius: number;\n    unfocusedSplitOpacity: number;\n    unfocusedSplitFill: string;\n    command: string;\n    waitAfterCommand: boolean;\n    abnormalCommandExitRuntime: number;\n    scrollbackLimit: number;\n    linkUrl: boolean;\n    fullscreen: boolean;\n    title: string;\n    class: string;\n    workingDirectory: string;\n    windowPaddingX: number;\n    windowPaddingY: number;\n    windowPaddingBalance: boolean;\n    windowPaddingColor: string;\n    windowVsync: boolean;\n    windowInheritWorkingDirectory: boolean;\n    windowInheritFontSize: boolean;\n    windowDecoration: boolean;\n    windowTitleFontFamily: string;\n    windowTheme: string;\n    windowColorspace: string;\n    windowHeight: number;\n    windowWidth: number;\n    windowSaveState: string;\n    windowStepResize: boolean;\n    windowNewTabPosition: string;\n    resizeOverlay: string;\n    resizeOverlayPosition: string;\n    resizeOverlayDuration: string;\n    focusFollowsMouse: boolean;\n    clipboardRead: string;\n    clipboardWrite: string;\n    clipboardTrimTrailingSpaces: boolean;\n    clipboardPasteProtection: boolean;\n    clipboardPasteBracketedSafe: boolean;\n    imageStorageLimit: number;\n    copyOnSelect: boolean;\n    clickRepeatInterval: number;\n    configFile: string;\n    configDefaultFiles: boolean;\n    confirmCloseSurface: boolean;\n    quitAfterLastWindowClosed: boolean;\n    quitAfterLastWindowClosedDelay: string;\n    initialWindow: boolean;\n    shellIntegration: string;\n    shellIntegrationFeatures: string;\n    oscColorReportFormat: string;\n    vtKamAllowed: boolean;\n    customShader: string;\n    customShaderAnimation: boolean;\n    macosNonNativeFullscreen: boolean;\n    macosTitlebarStyle: string;\n    macosOptionAsAlt: boolean;\n    macosWindowShadow: boolean;\n    linuxCgroup: string;\n    linuxCgroupMemoryLimit: string;\n    linuxCgroupProcessesLimit: string;\n    linuxCgroupHardFail: boolean;\n    gtkSingleInstance: string;\n    gtkTitlebar: boolean;\n    gtkTabsLocation: string;\n    gtkWideTabs: boolean;\n    gtkAdwaita: boolean;\n    desktopNotifications: boolean;\n    boldIsBright: boolean;\n    term: string;\n    enquiryResponse: string;\n}\n```\n\n\n```ts ghostty-config/src/lib/utils/themeHandler.ts\nimport type {HexColor} from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport {fetchColorScheme, parseColorScheme} from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    const {colorSchemeResponse} = await fetchColorScheme(themeName);\n    const colorScheme = parseColorScheme(colorSchemeResponse);\n\n    const colorProperties = [\n        \"background\",\n        \"foreground\",\n        \"selectionBackground\",\n        \"selectionForeground\",\n        \"cursorColor\"\n    ] as const;\n\n    colorProperties.forEach((prop) => {\n        if (colorScheme[prop]) config[prop] = colorScheme[prop] as HexColor;\n    });\n\n    if (colorScheme.palette) {\n        config.palette = Array(256).fill(\"#000000\") as HexColor[];\n        for (const [index, color] of Object.entries(colorScheme.palette)) {\n            config.palette[+index] = color as HexColor;\n        }\n    }\n}\n```\n\n\nThank you for providing the additional context. I see that the theme handling logic is already implemented in the `themeHandler.ts` file. The issue you're experiencing with the color palette not updating when selecting a theme from the dropdown menu might be due to how the changes are being propagated.\n\nLet's modify the `themeHandler` function to ensure it's updating the config correctly and triggering a re-render:\n\n1. Update the `themeHandler.ts` file:\n\n```typescript\nimport type { HexColor } from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport { fetchColorScheme, parseColorScheme } from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    try {\n        const { colorSchemeResponse } = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        const colorProperties = [\n            \"background\",\n            \"foreground\",\n            \"selectionBackground\",\n            \"selectionForeground\",\n            \"cursorColor\"\n        ] as const;\n\n        colorProperties.forEach((prop) => {\n            if (colorScheme[prop]) config[prop] = colorScheme[prop] as HexColor;\n        });\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill(\"#000000\") as HexColor[];\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[+index] = color as HexColor;\n            }\n            config.palette = newPalette;\n        }\n\n        // Force a re-render by updating the theme property\n        config.theme = themeName;\n    } catch (error) {\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n\n2. In the `config.svelte.ts` file, ensure that the `load` function is calling `themeHandler`:\n\n```typescript\nexport function load(conf: Partial<typeof config>) {\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n\n            if (key === \"theme\") {\n                themeHandler(conf[key] as string);\n            }\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n        }\n        else if (key === \"palette\") {\n            config.palette = [...conf.palette];\n        }\n    }\n}\n```\n\n3. Make sure that the component rendering the color palette is reactive to changes in `config.palette`. If you're using Svelte, you might want to use the `$:` reactive statement to update the UI when the palette changes.\n\n4. If you're still experiencing issues, you might need to trigger a manual re-render of the component that displays the color palette. You can do this by adding a dummy reactive variable that changes whenever the theme is updated.\n\nThese changes should ensure that when a new theme is selected from the dropdown, the color palette and other theme-related properties are updated correctly in the config, and the UI is re-rendered to reflect these changes.\n\nIf you're still encountering issues, please provide more information about how the color palette is being displayed in your UI, and I'll be happy to offer more specific advice.\nI still do not see the values being updated\nI apologize for the confusion. Let's try a more direct approach to ensure the values are being updated and that we can see these updates. We'll add some logging and make sure the changes are being applied correctly.\n\n1. First, let's modify the `themeHandler.ts` file to log the changes:\n\n```typescript\nimport type { HexColor } from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport { fetchColorScheme, parseColorScheme } from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    try {\n        console.log(\"Applying theme:\", themeName);\n        const { colorSchemeResponse } = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        console.log(\"Parsed color scheme:\", colorScheme);\n\n        const colorProperties = [\n            \"background\",\n            \"foreground\",\n            \"selectionBackground\",\n            \"selectionForeground\",\n            \"cursorColor\"\n        ] as const;\n\n        colorProperties.forEach((prop) => {\n            if (colorScheme[prop]) {\n                config[prop] = colorScheme[prop] as HexColor;\n                console.log(`Updated ${prop}:`, config[prop]);\n            }\n        });\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill(\"#000000\") as HexColor[];\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[+index] = color as HexColor;\n            }\n            config.palette = newPalette;\n            console.log(\"Updated palette:\", config.palette);\n        }\n\n        // Force a re-render by updating the theme property\n        config.theme = themeName;\n        console.log(\"Theme application complete\");\n    } catch (error) {\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n\n2. In the `config.svelte.ts` file, let's modify the `load` function to ensure it's calling `themeHandler` and log when it's being called:\n\n```typescript\nexport function load(conf: Partial<typeof config>) {\n    console.log(\"Load function called with:\", conf);\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n            console.log(`Updated ${key}:`, config[key as keyof typeof config]);\n\n            if (key === \"theme\") {\n                console.log(\"Calling themeHandler with:\", conf[key]);\n                themeHandler(conf[key] as string);\n            }\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n            console.log(\"Updated keybind:\", config.keybind);\n        }\n        else if (key === \"palette\") {\n            config.palette = [...conf.palette];\n            console.log(\"Updated palette:\", config.palette);\n        }\n    }\n}\n```\n\n3. Make sure that the component where you're selecting the theme is correctly calling the `load` function when a new theme is selected. For example:\n\n```svelte\n<script>\nimport { load } from '$lib/stores/config.svelte';\n\nfunction onThemeSelect(event) {\n    const selectedTheme = event.target.value;\n    console.log(\"Theme selected:\", selectedTheme);\n    load({ theme: selectedTheme });\n}\n</script>\n\n<select on:change={onThemeSelect}>\n    {#each themes as theme}\n        <option value={theme}>{theme}</option>\n    {/each}\n</select>\n```\n\n4. In the component where you're displaying the color palette, make sure you're using the `$` store syntax to access the reactive values:\n\n```svelte\n<script>\nimport { config } from '$lib/stores/config.svelte';\n</script>\n\n{#each $config.palette as color, index}\n    <div style=\"background-color: {color};\">Color {index}: {color}</div>\n{/each}\n```\n\nWith these changes, you should see log messages in the console when a theme is selected, when the `load` function is called, and when the theme is applied. This will help you track where the process might be failing.\n\nIf you're still not seeing the updates, please check the console for any error messages or unexpected behavior in the logs. Also, make sure that the `config` store is properly exported and imported in the relevant files.\n\nIf the issue persists, it would be helpful to see the component where you're selecting the theme and displaying the palette, as well as any console output you're getting when you select a new theme.\n\n```svelte ghostty-config/src/lib/components/settings/Color.svelte\n<script lang=\"ts\">\n    import {fade, fly} from \"svelte/transition\";\n    import {luminosity, isDark, type HexColor} from \"$lib/utils/colors\";\n    import ColorPicker from \"$lib/components/ColorPicker.svelte\";\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), size = 20, label = \"\", defaultValue}: {value: HexColor, size?: number, label?: string, defaultValue?: HexColor} = $props();\n    const borderColor = $derived(`rgba(255, 255, 255, ${luminosity(value) * 0.0027451 + 0.3})`);\n    const labelColor = $derived(isDark(value) ? `var(--font-color)` : \"black\");\n    let popoutOpen = $state(false);\n\n    function click(event: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n        popoutOpen = !popoutOpen;\n    }\n\n    function reset(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (defaultValue !== undefined) value = defaultValue;\n    }\n\n    function keydown(event: KeyboardEvent) {\n        if (!popoutOpen) return;\n        if (event.key === \"Escape\") click(event);\n    }\n</script>\n\n\n<svelte:document onkeydown={keydown} />\n\n<div class=\"color-wrap\" style:width=\"{size}px\" style:height=\"{size}px\" style:background-color={value} style:border-color={borderColor}>\n    {#if label}<span class=\"label\" style:color={labelColor}>{label}</span>{/if}\n    <input type=\"color\" bind:value style:width=\"{size}px\" style:height=\"{size}px\" onclick={click} oncontextmenu={reset} />\n</div>\n\n{#if popoutOpen}\n<div class=\"shadow\" onclick={click} transition:fade={{duration: 200}} role=\"none\"></div>\n<div class=\"picker-container\" transition:fly={{y: 32, duration: 200}}>\n    <ColorPicker bind:value />\n    <button class=\"close\" onclick={click} type=\"button\" title=\"Close\"><span>×</span></button>\n</div>\n{/if}\n\n\n<style>\n/* .color-wrap-container {\n    position: relative;\n} */\n.shadow {\n    background: rgba(0, 0, 0, 0.3);\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    z-index: 1;\n}\n\n.picker-container {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n}\n.picker-container .close {\n    background: var(--color-danger);\n    color: white;\n    position: absolute;\n    top: -4px;\n    right: -4px;\n    border-radius: 50%;\n    height: 16px;\n    width: 16px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.1rem;\n    padding: 0;\n    cursor: pointer;\n    border: 0;\n    outline: 0;\n}\n\n.picker-container .close span {\n    margin-top: -1.5px;\n}\n\n.color-wrap {\n    position: relative;\n    display: flex;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    outline: none;\n    overflow: hidden;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    /* box-shadow: 0 0 1px 0px rgba(255, 255, 255, 0.5) inset; */\n    box-shadow: 0 0 3px 0px black;\n    justify-content: center;\n    align-items: center;\n}\n\ninput {\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    width: 20px;\n    height: 20px;\n    border: 0;\n    padding: 0;\n    outline: none;\n    box-shadow: none;\n    opacity: 0;\n}\n\ninput:focus {\n    outline: var(--border-input-focus);\n}\n\n.label {\n    /* text-shadow: 0 0 5px black; */\n    font-weight: 600;\n}\n</style>\n```\n\n\n```svelte ghostty-config/src/lib/components/settings/Palette.svelte\n<script lang=\"ts\">\n    import type {HexColor} from \"$lib/utils/colors\";\n    import Color from \"./Color.svelte\";\n\n\n    const {value = $bindable([]), defaultValue}: {value: HexColor[], defaultValue: HexColor[]} = $props();\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as _, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={value[i]} size={40} label={(i + 1).toString()} />\n        {/each}\n    </div>\n</div>\n\n<style>\n.grid-container {\n    display: flex;\n    align-items: center;\n    flex: 1;\n}\n.color-grid {\n    display: grid;\n    /* width: 100%; */\n    flex: 1;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(32, 1fr);\n    /* grid-column-gap: 30px; */\n    justify-content: space-around;\n    justify-items: center;\n\n    /* align-items: center; */\n    /* align-content: space-evenly; */\n    grid-row-gap: 14px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\n\n```svelte ghostty-config/src/lib/components/settings/Dropdown.svelte\n<script lang=\"ts\">\n    type Props = {\n        value: string;\n        options: (string | {name: string, value: string})[]\n    };\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), options}: Props = $props();\n</script>\n\n<select bind:value>\n    {#each options as option, i (i)}\n        {#if typeof(option) === \"string\"}\n            <option value={option}>{option}</option>\n        {:else}\n            <option value={option.value}>{option.name}</option>\n        {/if}\n    {/each}\n</select>\n\n<style>\nselect {\n    background: var(--bg-level-2);\n    border: 0px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    outline: none;\n    color: inherit;\n    text-align: right;\n    max-width: 175px;\n}\n\nselect:focus {\n    background: var(--bg-input-focus);\n    outline: var(--border-input-focus);\n}\n</style>\n```\n\n\n```ts ghostty-config/src/lib/data/settings.ts\nimport config from \"$lib/stores/config.svelte\";\nimport type {HexColor} from \"$lib/utils/colors\";\n\ninterface BaseSettingType {\n    id: string;\n    name: string;\n    note?: string;\n}\n\ninterface Panel extends BaseSettingType {\n    groups: Group[];\n}\n\ninterface Group extends BaseSettingType {\n    settings: (Switch | Text | Number | Dropdown | Color | Palette | Keybinds)[];\n    // type: \"group\";\n}\n\ntype SettingType = \"switch\" | \"number\" | \"dropdown\" | \"text\" | \"color\" | \"palette\" | \"keybinds\";\n\ninterface BaseSettingItem extends BaseSettingType {\n    type: SettingType;\n    value: unknown;\n}\n\ninterface Switch extends BaseSettingItem {\n    type: \"switch\";\n    value: boolean;\n}\n\ninterface Text extends BaseSettingItem {\n    type: \"text\";\n    value: string;\n}\n\ninterface Number extends BaseSettingItem {\n    type: \"number\";\n    value: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    size?: number;\n    range?: boolean;\n}\n\ninterface DropdownOption {\n    name: string;\n    value: string;\n}\n\ninterface Dropdown extends BaseSettingItem {\n    type: \"dropdown\";\n    value: \"string\";\n    options: (DropdownOption | string)[];\n}\n\ninterface Color extends BaseSettingItem {\n    value: HexColor;\n    type: \"color\";\n}\n\ninterface Palette extends BaseSettingItem {\n    value: HexColor[];\n    type: \"palette\";\n}\n\nexport type KeybindString = `${string}=${string}`;\ninterface Keybinds extends BaseSettingItem {\n    value: KeybindString[];\n    type: \"keybinds\";\n}\n\ninterface ThemeResponse {\n  \"type\": string;\n  \"encoding\": string;\n  \"size\": number;\n  \"name\": string;\n  \"path\": string;\n  \"content\": string;\n  \"sha\": string;\n  \"url\": string;\n  \"git_url\": string;\n  \"html_url\": string;\n  \"download_url\": string;\n  \"_links\": {\n    \"git\": string;\n    \"self\": string;\n    \"html\": string;\n  }\n}\n\ninterface ColorScheme {\n  palette: { [key: string]: string };\n  background?: string;\n  foreground?: string;\n  cursorColor?: string;\n  selectionBackground?: string;\n  selectionForeground?: string;\n}\n\nconst fetchThemeFiles = async () => {\n    const apiUrl = \"https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty\";\n\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const themeFiles = await response.json();\n\n    return {themeFiles};\n};\n\n// Function to convert raw string data into a JSON object\nexport const parseColorScheme = (input: string): ColorScheme => {\n  const colorScheme: ColorScheme = {palette: {}};\n\n  // Split input by lines\n  const lines = input.split(\"\\n\");\n\n  lines.forEach((line) => {\n    if (line.startsWith(\"palette\")) {\n      const [, rest] = line.split(\"palette =\").map(part => part.trim());\n\n      if (rest) {\n        const [paletteIndex, color] = rest.split(\"=\");\n        if (paletteIndex && color) {\n          colorScheme.palette[paletteIndex.trim()] = color.trim();\n        }\n      }\n    }\n    else {\n      const [key, value] = line.split(\"=\").map(part => part.trim());\n\n      switch (key) {\n        case \"background\":\n          colorScheme.background = `#${value}`;\n          break;\n        case \"foreground\":\n          colorScheme.foreground = `#${value}`;\n          break;\n        case \"cursor-color\":\n          colorScheme.cursorColor = `#${value}`;\n          break;\n        case \"selection-background\":\n          colorScheme.selectionBackground = `#${value}`;\n          break;\n        case \"selection-foreground\":\n          colorScheme.selectionForeground = `#${value}`;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n\n  return colorScheme;\n};\n\nexport const fetchColorScheme = async (theme: string) => {\n    const apiUrl = `https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty${theme ? \"/\" + theme : \"\"}`;\n\n    const response = await fetch(apiUrl,{\n        headers: {\n            Accept: \"application/vnd.github.raw+json\"\n        }\n    });\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const colorSchemeResponse = await response.text();\n\n    return {colorSchemeResponse};\n};\n\nconst {themeFiles} = await fetchThemeFiles();\nconst themeFileNames = themeFiles && themeFiles.map((file: ThemeResponse) => file.name);\n\n// const {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\n// const colorScheme = parseColorScheme(colorSchemeResponse);\n\nexport default [\n    {\n        id: \"application\",\n        name: \"Application\",\n        note: \"\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                // type: \"group\",\n                settings: [\n                    {id: \"title\", name: \"Static title for all windows\", type: \"text\", value: \"\"},\n                    {id: \"desktopNotifications\", name: \"Allow desktop notifications\", type: \"switch\", value: true},\n                    {id: \"configFile\", name: \"Additional config file\", type: \"text\", value: \"\"},\n                    {id: \"configDefaultFiles\", name: \"Load default config file\", type: \"switch\", value: true},\n                    {id: \"linkUrl\", name: \"Automatically link URLs\", note: \"Matching occurs while holding the control (Linux) or command (macOS) key.\", type: \"switch\", value: true},\n                ]\n            },\n            {\n                id: \"startup\",\n                name: \"Startup\",\n                // type: \"group\",\n                settings: [\n                    {id: \"command\", name: \"Command to run on launch\", type: \"text\", value: \"\"},\n                    {id: \"fullscreen\", name: \"Launch in fullscreen mode\", type: \"switch\", value: false},\n                    {id: \"initialWindow\", name: \"Show a window on startup\", type: \"switch\", value: true},\n                    {id: \"workingDirectory\", name: \"Directory to use after startup\", note: \"Special values of `home` and `inherit` are also allowed here.\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shutdown\",\n                name: \"Shutdown\",\n                // type: \"group\",\n                settings: [\n                    {id: \"waitAfterCommand\", name: \"Wait for input after command\", type: \"switch\", value: false},\n                    {id: \"abnormalCommandExitRuntime\", name: \"Abnormal command exit runtime\", type: \"number\", value: 250, min: 0, size: 5},\n                    {id: \"confirmCloseSurface\", name: \"Confirm when closing a surface\", type: \"switch\", value: true},\n                    {id: \"quitAfterLastWindowClosed\", name: \"Quit after closing last window\", type: \"switch\", value: false},\n                    {id: \"quitAfterLastWindowClosedDelay\", name: \"Delay before auto quitting\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shell\",\n                name: \"Shell Integration\",\n                // type: \"group\",\n                settings: [\n                    {id: \"shellIntegration\", name: \"Shell integration style\", type: \"dropdown\", value: \"detect\", options: [\"none\", \"detect\", \"bash\", \"elvish\", \"fish\", \"zsh\"]},\n                    {id: \"shellIntegrationFeatures\", name: \"Shell integration features\", note: \"The current available features are cursor, sudo, and title. Including one force enables it, prefixing it with `no-` force disables it, omitting it falls back to default.\", type: \"text\", value: \"cursor,no-sudo,title\"},\n                    {id: \"term\", name: \"TERM environment variable\", type: \"text\", value: \"xterm-ghostty\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced\",\n                note: \"You should only touch these settings if you know what you're doing, otherwise you could cause major issues with Ghostty!\",\n                // type: \"group\",\n                settings: [\n                    {id: \"scrollbackLimit\", name: \"Scrollback buffer size (bytes)\", note: \"This buffer exists completely in memory but is allocated lazily.\", type: \"number\", value: 10000000, min: 0, size: 10},\n                    {id: \"customShader\", name: \"Custom shader\", note: \"This matches the API of Shadertoy.\", type: \"text\", value: \"\"},\n                    {id: \"customShaderAnimation\", name: \"Allow shaders to animate\", type: \"dropdown\", value: \"false\", options: [\"false\", \"true\", \"always\"]},\n                    {id: \"enquiryResponse\", name: \"Reponse to ENQ\", type: \"text\", value: \"\"},\n                    {id: \"oscColorReportFormat\", name: \"OSC color report format\", type: \"dropdown\", value: \"16-bit\", options: [\"none\", \"8-bit\", \"16-bit\"]},\n                    {id: \"vtKamAllowed\", name: \"VT kam mode allowed\", note: \"If you don't know what this is, don't touch it!\", type: \"switch\", value: false},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"clipboard\",\n        name: \"Clipboard\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"clipboardRead\", name: \"Allow terminal to read clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"clipboardWrite\", name: \"Allow terminal to write clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"copyOnSelect\", name: \"Copy on select\", type: \"switch\", value: true},\n                    {id: \"clipboardTrimTrailingSpaces\", name: \"Trim trailing space on copy\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteProtection\", name: \"Confirm when pasting unsafely\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteBracketedSafe\", name: \"Mark bracketed paste as safe\", type: \"switch\", value: true},\n                    {id: \"imageStorageLimit\", name: \"Image buffer limit (bytes)\", type: \"number\", value: 320000000, min: 0, max: 4294967295, size: 12},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"window\",\n        name: \"Window\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"windowVsync\", name: \"Enable vsync\", type: \"switch\", value: true},\n                    {id: \"windowInheritWorkingDirectory\", name: \"Inherit working directory\", type: \"switch\", value: true},\n                    {id: \"windowInheritFontSize\", name: \"Inherit font size\", type: \"switch\", value: true},\n                    {id: \"windowColorspace\", name: \"Window colorspace\", type: \"dropdown\", value: \"srgb\", options: [\"srgb\", \"display-p3\"]},\n                    {id: \"windowSaveState\", name: \"Save window state\", type: \"dropdown\", value: \"default\", options: [\"default\", \"never\", \"always\"]},\n                    // maybe move to application?\n                    {id: \"windowNewTabPosition\", name: \"New tab position\", type: \"dropdown\", value: \"current\", options: [\"current\", \"end\"]},\n                ]\n            },\n            {\n                id: \"appearance\",\n                name: \"Appearance\",\n                settings: [\n                    {id: \"windowTheme\", name: \"Window theme\", type: \"dropdown\", value: \"auto\", options: [\"auto\", \"system\", \"light\", \"dark\"]},\n                    {id: \"windowDecoration\", name: \"Enable native frames\", type: \"switch\", value: true},\n                    {id: \"windowPaddingX\", name: \"Horizontal window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingY\", name: \"Vertical window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingBalance\", name: \"Auto-balance window padding\", type: \"switch\", value: false},\n                    {id: \"windowPaddingColor\", name: \"Window padding color\", type: \"dropdown\", value: \"extend\", options: [\"background\", \"extend\", \"extend-always\"]},\n\n                    // maybe move to colors\n                    {id: \"backgroundOpacity\", name: \"Background opacity\", type: \"number\", range: true, value: 1, min: 0, max: 1, step: 0.01},\n                    {id: \"backgroundBlurRadius\", name: \"Background blur radius\", note: \"A value of 20 is reasonable for a good looking blur, going beyond that can cause rendering and performance issues.\", type: \"number\", range: true, value: 0, min: 0, max: 50, step: 1},\n                    {id: \"unfocusedSplitOpacity\", name: \"Unfocused split opacity\", type: \"number\", range: true, value: 0.7, min: 0.15, max: 1, step: 0.01},\n                    {id: \"unfocusedSplitFill\", name: \"Unfocused split fill color\", type: \"color\", value: \"\"},\n                ]\n            },\n            {\n                id: \"resize\",\n                name: \"Sizing & Resizing\",\n                settings: [\n                    {id: \"windowHeight\", name: \"Initial window height\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 4, step: 1, size: 4},\n                    {id: \"windowWidth\", name: \"Initial window width\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 10, step: 1, size: 4},\n                    {id: \"windowStepResize\", name: \"Resize in grid cell increments\", type: \"switch\", value: false},\n                    {id: \"resizeOverlay\", name: \"Show resize overlays\", type: \"dropdown\", value: \"after-first\", options: [\"always\", \"never\", \"after-first\"]},\n                    {id: \"resizeOverlayPosition\", name: \"Resize overlay position\", type: \"dropdown\", value: \"center\", options: [\"center\", \"top-left\", \"top-center\", \"top-right\", \"bottom-left\", \"bottom-center\", \"bottom-right\"]},\n                    {id: \"resizeOverlayDuration\", name: \"Show resize overlay time\", type: \"text\", value: \"750ms\"},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"colors\",\n        name: \"Colors\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                settings: [\n                    {\n                        id: \"theme\",\n                        name: \"Color theme\",\n                        note: \"Any colors selected after setting this will overwrite the theme's colors.\",\n                        type: \"dropdown\",\n                        value: \"\",\n                        options: [\"\", ...themeFileNames]\n                    },\n                    {id: \"boldIsBright\", name: \"Bold text uses bright colors\", type: \"switch\", value: false},\n                    {id: \"minimumContrast\", name: \"Minimum contrast\", type: \"number\", value: 1, range: true, min: 1, max: 21, step: 0.1},\n                ]\n            },\n            {\n                id: \"base\",\n                name: \"Base Colors\",\n                note: \"The preview here shows selected text in the second line of the command output.\",\n                settings: [\n                    {id: \"background\", name: \"Background color\", type: \"color\", value: \"#282c34\"},\n                    {id: \"foreground\", name: \"Foreground color\", type: \"color\", value: \"#ffffff\"},\n                    {id: \"selectionBackground\", name: \"Selection background color\", type: \"color\", value: \"\"},\n                    {id: \"selectionForeground\", name: \"Selection foreground color\", type: \"color\", value: \"\"},\n                    {id: \"selectionInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause selections to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                ]\n            },\n            {\n                id: \"cursor\",\n                name: \"Cursor\",\n                note: \"The cursor in this preview blinks on and off at 1 second intervals for emphasis, it may not match what you see in Ghostty!\",\n                settings: [\n                    {id: \"cursorColor\", name: \"Cursor color\", type: \"color\", value: \"\"},\n                    {id: \"cursorText\", name: \"Text color under cursor\", type: \"color\", value: \"\"},\n                    {id: \"cursorInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause cells under the cursor to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                    {id: \"cursorOpacity\", name: \"Cursor opacity\", type: \"number\", value: 1, range: true, min: 0, max: 1, step: 0.05},\n                    {id: \"cursorStyle\", name: \"Cursor style\", type: \"dropdown\", value: \"block\", options: [\"block\", \"bar\", \"underline\", {value: \"block_hollow\", name: \"hollow block\"}]},\n                    {id: \"cursorStyleBlink\", name: \"Cursor blink style\", note: \"The `default` option defers to DEC mode 12 to determine blinking state.\", type: \"dropdown\", value: \"\", options: [\"true\", \"false\", {value: \"\", name: \"default\"}]},\n                ]\n            },\n            {\n                id: \"palette\",\n                name: \"Color Palette\",\n                note: \"The first 16 colors are the most commonly displayed colors in the terminal.\\n\\nColors 1-8 are typically black, red, green, yellow, blue, magenta, cyan, and white.\\nColors 9-16 are typically \\\"brighter\\\" variants of these colors.\",\n                settings: [\n                    {id: \"palette\", name: \"\", type: \"palette\", value: [\"#1d1f21\",\"#cc6666\",\"#b5bd68\",\"#f0c674\",\"#81a2be\",\"#b294bb\",\"#8abeb7\",\"#c5c8c6\",\"#666666\",\"#d54e53\",\"#b9ca4a\",\"#e7c547\",\"#7aa6da\",\"#c397d8\",\"#70c0b1\",\"#eaeaea\",\"#000000\",\"#00005f\",\"#000087\",\"#0000af\",\"#0000d7\",\"#0000ff\",\"#005f00\",\"#005f5f\",\"#005f87\",\"#005faf\",\"#005fd7\",\"#005fff\",\"#008700\",\"#00875f\",\"#008787\",\"#0087af\",\"#0087d7\",\"#0087ff\",\"#00af00\",\"#00af5f\",\"#00af87\",\"#00afaf\",\"#00afd7\",\"#00afff\",\"#00d700\",\"#00d75f\",\"#00d787\",\"#00d7af\",\"#00d7d7\",\"#00d7ff\",\"#00ff00\",\"#00ff5f\",\"#00ff87\",\"#00ffaf\",\"#00ffd7\",\"#00ffff\",\"#5f0000\",\"#5f005f\",\"#5f0087\",\"#5f00af\",\"#5f00d7\",\"#5f00ff\",\"#5f5f00\",\"#5f5f5f\",\"#5f5f87\",\"#5f5faf\",\"#5f5fd7\",\"#5f5fff\",\"#5f8700\",\"#5f875f\",\"#5f8787\",\"#5f87af\",\"#5f87d7\",\"#5f87ff\",\"#5faf00\",\"#5faf5f\",\"#5faf87\",\"#5fafaf\",\"#5fafd7\",\"#5fafff\",\"#5fd700\",\"#5fd75f\",\"#5fd787\",\"#5fd7af\",\"#5fd7d7\",\"#5fd7ff\",\"#5fff00\",\"#5fff5f\",\"#5fff87\",\"#5fffaf\",\"#5fffd7\",\"#5fffff\",\"#870000\",\"#87005f\",\"#870087\",\"#8700af\",\"#8700d7\",\"#8700ff\",\"#875f00\",\"#875f5f\",\"#875f87\",\"#875faf\",\"#875fd7\",\"#875fff\",\"#878700\",\"#87875f\",\"#878787\",\"#8787af\",\"#8787d7\",\"#8787ff\",\"#87af00\",\"#87af5f\",\"#87af87\",\"#87afaf\",\"#87afd7\",\"#87afff\",\"#87d700\",\"#87d75f\",\"#87d787\",\"#87d7af\",\"#87d7d7\",\"#87d7ff\",\"#87ff00\",\"#87ff5f\",\"#87ff87\",\"#87ffaf\",\"#87ffd7\",\"#87ffff\",\"#af0000\",\"#af005f\",\"#af0087\",\"#af00af\",\"#af00d7\",\"#af00ff\",\"#af5f00\",\"#af5f5f\",\"#af5f87\",\"#af5faf\",\"#af5fd7\",\"#af5fff\",\"#af8700\",\"#af875f\",\"#af8787\",\"#af87af\",\"#af87d7\",\"#af87ff\",\"#afaf00\",\"#afaf5f\",\"#afaf87\",\"#afafaf\",\"#afafd7\",\"#afafff\",\"#afd700\",\"#afd75f\",\"#afd787\",\"#afd7af\",\"#afd7d7\",\"#afd7ff\",\"#afff00\",\"#afff5f\",\"#afff87\",\"#afffaf\",\"#afffd7\",\"#afffff\",\"#d70000\",\"#d7005f\",\"#d70087\",\"#d700af\",\"#d700d7\",\"#d700ff\",\"#d75f00\",\"#d75f5f\",\"#d75f87\",\"#d75faf\",\"#d75fd7\",\"#d75fff\",\"#d78700\",\"#d7875f\",\"#d78787\",\"#d787af\",\"#d787d7\",\"#d787ff\",\"#d7af00\",\"#d7af5f\",\"#d7af87\",\"#d7afaf\",\"#d7afd7\",\"#d7afff\",\"#d7d700\",\"#d7d75f\",\"#d7d787\",\"#d7d7af\",\"#d7d7d7\",\"#d7d7ff\",\"#d7ff00\",\"#d7ff5f\",\"#d7ff87\",\"#d7ffaf\",\"#d7ffd7\",\"#d7ffff\",\"#ff0000\",\"#ff005f\",\"#ff0087\",\"#ff00af\",\"#ff00d7\",\"#ff00ff\",\"#ff5f00\",\"#ff5f5f\",\"#ff5f87\",\"#ff5faf\",\"#ff5fd7\",\"#ff5fff\",\"#ff8700\",\"#ff875f\",\"#ff8787\",\"#ff87af\",\"#ff87d7\",\"#ff87ff\",\"#ffaf00\",\"#ffaf5f\",\"#ffaf87\",\"#ffafaf\",\"#ffafd7\",\"#ffafff\",\"#ffd700\",\"#ffd75f\",\"#ffd787\",\"#ffd7af\",\"#ffd7d7\",\"#ffd7ff\",\"#ffff00\",\"#ffff5f\",\"#ffff87\",\"#ffffaf\",\"#ffffd7\",\"#ffffff\",\"#080808\",\"#121212\",\"#1c1c1c\",\"#262626\",\"#303030\",\"#3a3a3a\",\"#444444\",\"#4e4e4e\",\"#585858\",\"#626262\",\"#6c6c6c\",\"#767676\",\"#808080\",\"#8a8a8a\",\"#949494\",\"#9e9e9e\",\"#a8a8a8\",\"#b2b2b2\",\"#bcbcbc\",\"#c6c6c6\",\"#d0d0d0\",\"#dadada\",\"#e4e4e4\",\"#eeeeee\"]},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"fonts\",\n        name: \"Fonts\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"General Font Settings\",\n                settings: [\n                    {id: \"fontSize\", name: \"Base font size\", type: \"number\", value: 13, min: 4, max: 60, step: 0.5, range: true},\n                    {id: \"fontThicken\", name: \"Thicken fonts\", type: \"switch\", note: \"This currently only affects macOS.\", value: false},\n                    {id: \"fontFeature\", name: \"Font ligature settings\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"family\",\n                name: \"Font Families\",\n                settings: [\n                    {id: \"fontFamily\", name: \"Main font family\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBold\", name: \"Font family for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyItalic\", name: \"Font family for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBoldItalic\", name: \"Font family for bold italic text\", type: \"text\", value: \"\"},\n                    {id: \"windowTitleFontFamily\", name: \"Window title font family\", note: \"This is currently only supported on macOS\", type: \"text\", value: \"\"},\n                    {id: \"fontCodepointMap\", name: \"Unicode-specifc font mapping\", note: \"\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"styles\",\n                name: \"Font Styles\",\n                note: \"Named font styles for the fields above. For example for `Ioveska Heavy` you would use a style of `Heavy`. Alternately you can set the style to `false` to completely disable the style and revert to default style.\",\n                settings: [\n                    {id: \"fontStyle\", name: \"Main font style\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBold\", name: \"Font style for bold text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleItalic\", name: \"Font style for italic text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBoldItalic\", name: \"Font style for bold italic text\", type: \"text\", value: \"default\"},\n                ]\n            },\n            {\n                id: \"variations\",\n                name: \"Font Variations\",\n                note: \"Variable font specific settings, please only touch this if you know what you're doing!\",\n                settings: [\n                    {id: \"fontVariation\", name: \"Main font variant\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBold\", name: \"Font variant for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationItalic\", name: \"Font variant for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBoldItalic\", name: \"Font variant for bold italic text\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced Font & Cell Settings\",\n                note: \"The settings below have very little validation in Ghostty and can cause your terminal to become unusable. Be careful messing with any of these.\",\n                settings: [\n                    {id: \"adjustCellWidth\", name: \"Cell width adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCellHeight\", name: \"Cell height adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustFontBaseline\", name: \"Font baseline adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlinePosition\", name: \"Underline position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlineThickness\", name: \"Underline thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughPosition\", name: \"Strikethrough position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughThickness\", name: \"Strikethrough thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCursorThickness\", name: \"Cursor thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"graphemeWidthMethod\", name: \"Grapheme width calculation method\", type: \"dropdown\", value: \"unicode\", options: [\"unicode\", \"legacy\"]},\n                ]\n            },\n\n        ]\n    },\n    {\n        id: \"keybinds\",\n        name: \"Keybinds\",\n        groups: [\n            {\n                id: \"keybinds\",\n                name: \"\",\n                settings: [\n                    {id: \"keybind\", name: \"\", type: \"keybinds\", value: [\"super+page_up=scroll_page_up\", \"super+physical:four=goto_tab:4\", \"super+shift+down=jump_to_prompt:1\", \"super+shift+w=close_window\", \"super+shift+left_bracket=previous_tab\", \"super+alt+i=inspector:toggle\", \"super+w=close_surface\", \"super+physical:eight=goto_tab:8\", \"super+alt+right=goto_split:right\", \"shift+up=adjust_selection:up\", \"super+enter=toggle_fullscreen\", \"super+t=new_tab\", \"super+c=copy_to_clipboard\", \"super+shift+right_bracket=next_tab\", \"super+physical:one=goto_tab:1\", \"shift+left=adjust_selection:left\", \"super+equal=increase_font_size:1\", \"shift+page_up=adjust_selection:page_up\", \"super+physical:three=goto_tab:3\", \"super+d=new_split:right\", \"super+ctrl+down=resize_split:down,10\", \"shift+end=adjust_selection:end\", \"super+plus=increase_font_size:1\", \"super+q=quit\", \"super+home=scroll_to_top\", \"super+ctrl+left=resize_split:left,10\", \"super+ctrl+up=resize_split:up,10\", \"super+shift+up=jump_to_prompt:-1\", \"shift+right=adjust_selection:right\", \"super+comma=open_config\", \"super+shift+comma=reload_config\", \"super+minus=decrease_font_size:1\", \"shift+page_down=adjust_selection:page_down\", \"super+a=select_all\", \"alt+shift+equal=equalize_splits\", \"super+shift+enter=toggle_split_zoom\", \"super+alt+down=goto_split:bottom\", \"super+ctrl+f=toggle_fullscreen\", \"super+ctrl+right=resize_split:right,10\", \"super+alt+shift+j=write_scrollback_file:open\", \"shift+down=adjust_selection:down\", \"super+n=new_window\", \"super+alt+left=goto_split:left\", \"super+page_down=scroll_page_down\", \"super+alt+shift+w=close_all_windows\", \"super+alt+up=goto_split:top\", \"super+left_bracket=goto_split:previous\", \"super+physical:nine=goto_tab:9\", \"super+right_bracket=goto_split:next\", \"super+end=scroll_to_bottom\", \"super+shift+j=write_scrollback_file:paste\", \"super+shift+d=new_split:down\", \"super+zero=reset_font_size\", \"super+physical:five=goto_tab:5\", \"shift+home=adjust_selection:home\", \"super+physical:seven=goto_tab:7\", \"super+k=clear_screen\", \"super+physical:two=goto_tab:2\", \"super+physical:six=goto_tab:6\", \"super+v=paste_from_clipboard\"]}\n                ]\n            }\n        ]\n    },\n    {\n        id: \"mouse\",\n        name: \"Mouse\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"cursorClickToMove\", name: \"Enable click to move cursor\", type: \"switch\", value: true},\n                    {id: \"mouseHideWhileTyping\", name: \"Hide mouse while typing\", type: \"switch\", value: false},\n                    {id: \"mouseShiftCapture\", name: \"Allow shift with mouse click\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"always\", \"never\"]},\n                    // Technically the values should be min: 0.01, max: 10000, step: 0.01 but those are insane so instead I'll use sane defaults\n                    {id: \"mouseScrollMultiplier\", name: \"Mouse scroll multiplier\", type: \"number\", range: true, value: 1, min: 0.1, max: 10, step: 0.1},\n                    {id: \"focusFollowsMouse\", name: \"Focus splits on mouse move\", type: \"switch\", value: false},\n                    {id: \"clickRepeatInterval\", name: \"Milliseconds between multi-click\", note: \"A value of 0 means to use the operating system's default timing.\", type: \"number\", value: 0, min: 0, size: 4},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"gtk\",\n        name: \"GTK\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"class\", name: \"WM_CLASS class field\", note: \"This defaults to `com.mitchellh.ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"x11InstanceName\", name: \"WM_CLASS instance name\", note: \"This defaults to `ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"gtkSingleInstance\", name: \"Single-instance mode\", type: \"dropdown\", value: \"desktop\", options: [{name: \"detect\", value: \"desktop\"}, \"true\", \"false\"]},\n                    {id: \"gtkTitlebar\", name: \"Show titlebar\", type: \"switch\", value: true},\n                    {id: \"gtkTabsLocation\", name: \"Tab location\", type: \"dropdown\", value: \"top\", options: [\"top\", \"right\", \"bottom\", \"left\"]},\n                    {id: \"gtkWideTabs\", name: \"Use wide tabs\", type: \"switch\", value: true},\n                    {id: \"gtkAdwaita\", name: \"Enable adwaita theme support\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"linux\",\n        name: \"Linux\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"linuxCgroup\", name: \"Use dedicated cgroups\", type: \"dropdown\", value: \"single-instance\", options: [\"single-instance\", \"always\", \"never\"]},\n                    {id: \"linuxCgroupMemoryLimit\", name: \"Memory limit (bytes)\", type: \"number\", min: 0, max: 4294967295, size: 12},\n                    {id: \"linuxCgroupProcessLimit\", name: \"Max number of processes\", type: \"number\", min: 0, size: 5},\n                    {id: \"linuxCgroupHardFail\", name: \"Hard fail on startup\", type: \"switch\", value: false},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"macos\",\n        name: \"macOS\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"macosNonNativeFullscreen\", name: \"Use non-native fullscreen\", note: \"Tabs currently do not work with non-native fullscreen windows\", type: \"dropdown\", value: \"false\", options: [\"visible-menu\", \"true\", \"false\"]},\n                    {id: \"macosTitlebarStyle\", name: \"Titlebar style\", type: \"dropdown\", value: \"transparent\", options: [\"transparent\", \"native\", \"tabs\"]},\n                    {id: \"macosOptionAsAlt\", name: \"Use option key as alt key\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"left\", \"right\"]},\n                    {id: \"macosWindowShadow\", name: \"Show the window shadow\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n] as Panel[];\n```\n```typescript\nimport config from \"$lib/stores/config.svelte\";\n// error: 'config' is defined but never used. Allowed unused vars must match /^_/u.\nimport type {HexColor} from \"$lib/utils/colors\";\n\n```\n\n\n```ts ghostty-config/src/lib/stores/config.svelte.ts\nimport {dev} from \"$app/environment\";\nimport settings, {type KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"$lib/utils/colors\";\nimport themeHandler from \"$lib/utils/themeHandler\";\n// import defs from \"../data/defaults.json\";\n\n// TODO: find a good way to properly type the config\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaults: Partial<Record<keyof DefaultConfig, any>> = {};\n\nfor (const panel of settings) {\n    for (const group of panel.groups) {\n        for (const setting of group.settings) {\n            defaults[setting.id as keyof typeof defaults] = setting.value;\n        }\n    }\n}\n\nif (dev) {\n    // eslint-disable-next-line no-console\n    console.log(defaults);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\n\nexport function keyToConfig(key: string) {\n    return key.replaceAll(/([A-Z])/g, \"-$1\").toLowerCase();\n}\n\nexport function diff() {\n    // TODO: more elegance\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const output: Partial<Record<keyof typeof defaults|string, any>> = {};\n\n    for (const k in config) {\n        const key = k as keyof DefaultConfig;\n        if (Array.isArray(config[key]) && key === \"keybind\") {\n            const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (Array.isArray(config[key]) && key === \"palette\") {\n            const toAdd = [];\n            for (let p = 0; p < defaults[key].length; p++) {\n                if (config[key][p] === defaults[key][p]) continue;\n                toAdd.push(`${p}=${config[key][p]}`);\n            }\n            // const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (config[key] != defaults[key]) {\n            output[keyToConfig(key)] = config[key];\n        }\n    }\n\n    return output;\n}\n\nexport function load(conf: Partial<typeof config>) {\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n\n            if (key === \"theme\") {\n                themeHandler(conf[key] as string);\n            }\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n        }\n        else if (key === \"palette\") {\n            config.palette = [...conf.palette];\n        }\n    }\n}\n\nexport default config;\n\n\n// TODO: is this useful?\ninterface DefaultConfig {\n    palette: HexColor[];\n    keybind: KeybindString[];\n    fontFamily: string;\n    fontFamilyBold: string;\n    fontFamilyItalic: string;\n    fontFamilyBoldItalic: string;\n    fontStyle: string;\n    fontStyleBold: string;\n    fontStyleItalic: string;\n    fontStyleBoldItalic: string;\n    fontFeature: string;\n    fontSize: number;\n    fontVariation: string;\n    fontVariationBold: string;\n    fontVariationItalic: string;\n    fontVariationBoldItalic: string;\n    fontCodepointMap: string;\n    fontThicken: boolean;\n    adjustCellWidth: string;\n    adjustCellHeight: string;\n    adjustFontBaseline: string;\n    adjustUnderlinePosition: string;\n    adjustUnderlineThickness: string;\n    adjustStrikethroughPosition: string;\n    adjustStrikethroughThickness: string;\n    adjustCursorThickness: string;\n    graphemeWidthMethod: string;\n    theme: string;\n    background: HexColor;\n    foreground: HexColor;\n    selectionForeground: string;\n    selectionBackground: string;\n    selectionInvertFgBg: boolean;\n    minimumContrast: number;\n    cursorColor: string;\n    cursorInvertFgBg: boolean;\n    cursorOpacity: number;\n    cursorStyle: string;\n    cursorStyleBlink: string;\n    cursorText: string;\n    cursorClickToMove: boolean;\n    mouseHideWhileTyping: boolean;\n    mouseShiftCapture: boolean;\n    mouseScrollMultiplier: number;\n    backgroundOpacity: number;\n    backgroundBlurRadius: number;\n    unfocusedSplitOpacity: number;\n    unfocusedSplitFill: string;\n    command: string;\n    waitAfterCommand: boolean;\n    abnormalCommandExitRuntime: number;\n    scrollbackLimit: number;\n    linkUrl: boolean;\n    fullscreen: boolean;\n    title: string;\n    class: string;\n    workingDirectory: string;\n    windowPaddingX: number;\n    windowPaddingY: number;\n    windowPaddingBalance: boolean;\n    windowPaddingColor: string;\n    windowVsync: boolean;\n    windowInheritWorkingDirectory: boolean;\n    windowInheritFontSize: boolean;\n    windowDecoration: boolean;\n    windowTitleFontFamily: string;\n    windowTheme: string;\n    windowColorspace: string;\n    windowHeight: number;\n    windowWidth: number;\n    windowSaveState: string;\n    windowStepResize: boolean;\n    windowNewTabPosition: string;\n    resizeOverlay: string;\n    resizeOverlayPosition: string;\n    resizeOverlayDuration: string;\n    focusFollowsMouse: boolean;\n    clipboardRead: string;\n    clipboardWrite: string;\n    clipboardTrimTrailingSpaces: boolean;\n    clipboardPasteProtection: boolean;\n    clipboardPasteBracketedSafe: boolean;\n    imageStorageLimit: number;\n    copyOnSelect: boolean;\n    clickRepeatInterval: number;\n    configFile: string;\n    configDefaultFiles: boolean;\n    confirmCloseSurface: boolean;\n    quitAfterLastWindowClosed: boolean;\n    quitAfterLastWindowClosedDelay: string;\n    initialWindow: boolean;\n    shellIntegration: string;\n    shellIntegrationFeatures: string;\n    oscColorReportFormat: string;\n    vtKamAllowed: boolean;\n    customShader: string;\n    customShaderAnimation: boolean;\n    macosNonNativeFullscreen: boolean;\n    macosTitlebarStyle: string;\n    macosOptionAsAlt: boolean;\n    macosWindowShadow: boolean;\n    linuxCgroup: string;\n    linuxCgroupMemoryLimit: string;\n    linuxCgroupProcessesLimit: string;\n    linuxCgroupHardFail: boolean;\n    gtkSingleInstance: string;\n    gtkTitlebar: boolean;\n    gtkTabsLocation: string;\n    gtkWideTabs: boolean;\n    gtkAdwaita: boolean;\n    desktopNotifications: boolean;\n    boldIsBright: boolean;\n    term: string;\n    enquiryResponse: string;\n}\n```\n\n\n```ts ghostty-config/src/lib/utils/themeHandler.ts\nimport type {HexColor} from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport {fetchColorScheme, parseColorScheme} from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    try {\n        const {colorSchemeResponse} = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        const colorProperties = [\n            \"background\",\n            \"foreground\",\n            \"selectionBackground\",\n            \"selectionForeground\",\n            \"cursorColor\"\n        ] as const;\n\n        colorProperties.forEach((prop) => {\n            if (colorScheme[prop]) config[prop] = colorScheme[prop] as HexColor;\n        });\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill(\"#000000\") as HexColor[];\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[+index] = color as HexColor;\n            }\n            config.palette = newPalette;\n        }\n\n        // Force a re-render by updating the theme property\n        config.theme = themeName;\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n\n\n```ts ghostty-config/src/lib/utils/parse.ts\nimport type {KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"./colors\";\n\nconst re = /^\\s*([a-z-]+)[\\s]*=\\s*(.*)\\s*$/;\n\nexport default function(configString: string) {\n    const lines = configString.split(\"\\n\");\n\n    const results = {\n        palette: Array(256),\n        keybind: [] as Array<string>\n    } as {palette: (HexColor|\"\")[], keybind: KeybindString[], [key: string]: string|string[]};\n\n    for (let p = 0; p < 256; p++) results.palette[p] = \"\";\n\n    for (const l of lines) {\n        const line = l.trim();\n        const match = re.exec(line);\n        if (!match) continue;\n        const key = match[1].trim();\n        const value = match[2].trim();\n\n        if (key === \"palette\") {\n            const split = value.split(\"=\");\n            const num = parseInt(split[0].trim());\n            const color = split[1].trim() as HexColor; // TODO: perform validation\n            if (num < 0 || num > 255) continue;\n            results.palette[num] = color;\n        }\n        else if (key === \"keybind\") {\n            results.keybind.push(value as KeybindString); // TODO: perform validation\n        }\n        else {\n            const split = key.split(\"-\");\n            let newKey = split[0].trim();\n            for (let s = 1; s < split.length; s++) {\n                newKey += split[s].charAt(0).toUpperCase();\n                newKey += split[s].substring(1);\n            }\n            results[newKey] = value;\n        }\n    }\n\n    return results;\n};\n\n```\n\n\n```ts ghostty-config/src/lib/utils/colors.ts\nexport type HexColor = `#${string}`;\nexport type RgbArray = [number, number, number];\nexport type HsvArray = [number, number, number];\nexport type HsvObj = {hue: number, saturation: number, value: number};\n\nexport function luminosity(color: HexColor) {\n    const int = parseInt(color.substring(1), 16);\n    const red = int >> 16 & 0xFF;\n    const green = int >> 8 & 0xFF;\n    const blue = int >> 0 & 0xFF;\n\n    return (0.2126 * red) + (0.7152 * green) + (0.0722 * blue);\n}\n\n\nexport function isDark(color: HexColor) {\n    return luminosity(color) < 128;\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n */\nexport function hsvToRgb(hue: number, saturation: number, value: number): RgbArray {\n    const i = Math.floor(hue * 6);\n    const f = hue * 6 - i;\n    const p = value * (1 - saturation);\n    const q = value * (1 - f * saturation);\n    const t = value * (1 - (1 - f) * saturation);\n\n    let r, g, b;\n    switch (i % 6) {\n        /* eslint-disable no-sequences, @typescript-eslint/no-unused-expressions */\n        case 0: r = value, g = t, b = p; break;\n        case 1: r = q, g = value, b = p; break;\n        case 2: r = p, g = value, b = t; break;\n        case 3: r = p, g = q, b = value; break;\n        case 4: r = t, g = p, b = value; break;\n        default:\n        case 5: r = value, g = p, b = q; break;\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n}\n\nexport function rgbToHsv(red: number, green: number, blue: number): HsvObj {\n    const percentRed = red / 255;\n    const percentGreen = green / 255;\n    const percentBlue = blue / 255;\n    const cMax = Math.max(percentRed, percentGreen, percentBlue);\n    const cMin = Math.min(percentRed, percentGreen, percentBlue);\n    const delta = cMax - cMin;\n\n    let newHue = 0;\n    if (percentRed === cMax) newHue = 60 * (((percentGreen - percentBlue) / delta) % 6) / 360;\n    else if (percentGreen === cMax) newHue = 60 * (((percentBlue - percentRed) / delta) + 2) / 360;\n    else if (percentBlue === cMax) newHue = 60 * (((percentRed - percentGreen) / delta) + 4) / 360;\n    if (newHue < 0) newHue += 6;\n\n    const hue = delta === 0 ? 0 : newHue;\n    const saturation = cMax === 0 ? 0 : delta / cMax;\n    const value = cMax;\n    return {hue, saturation, value};\n}\n\n\nexport function rgbToHex(red: number, green: number, blue: number): HexColor {\n    const get = (color: number) => color.toString(16).padStart(2, \"0\").toUpperCase();\n    return `#${get(red)}${get(green)}${get(blue)}`;\n}\n\nexport function hexToRgb(string: HexColor): RgbArray {\n    const hex = string.slice(1);\n    const get = (s: number, e: number) => parseInt(hex.substring(s, e), 16);\n    return [get(0, 2), get(2, 4), get(4,6)];\n}\n```\n\n\n```svelte ghostty-config/src/lib/components/ColorPicker.svelte\n<script lang=\"ts\">\n    import {hexToRgb, hsvToRgb, rgbToHex, rgbToHsv, luminosity, type HexColor} from \"$lib/utils/colors\";\n\n\n    // eslint-disable-next-line prefer-const\n    let {defaultValue = \"#408080\", value = $bindable(defaultValue)}: {defaultValue?: HexColor, value?: HexColor|\"\"} = $props();\n\n    let {hue, saturation, value: brightness} = $state(rgbToHsv(...hexToRgb(value || defaultValue)));\n    const [red, green, blue] = $derived.by(() => hsvToRgb(hue, saturation, brightness));\n    const hueField = $derived(`rgb(${hsvToRgb(hue, 1, 1).join(\", \")})`);\n    const csgTop = $derived((1 - brightness) * 100);\n    const csgLeft = $derived(saturation * 100);\n    const hgLeft = $derived(hue * 100);\n    const hexValue = $derived(rgbToHex(...hsvToRgb(hue, saturation, brightness)));\n    const borderColor = $derived(`rgba(255, 255, 255, ${luminosity(value || defaultValue) * 0.0027451 + 0.3})`);\n    const isEmpty = $derived(value === \"\");\n\n    let tracked: HTMLDivElement|null;\n\n    function moveGrabber(event: MouseEvent) {\n        if (!tracked) return;\n\n        const mouseX = event.clientX;\n        const mouseY = event.clientY;\n        const trackedPos = tracked.getBoundingClientRect();\n\n        let xPercentage = (mouseX - trackedPos.x) / trackedPos.width * 100;\n        let yPercentage = (mouseY - trackedPos.y) / trackedPos.height * 100;\n\n        if (xPercentage > 100) xPercentage = 100;\n        if (xPercentage < 0) xPercentage = 0;\n        if (yPercentage > 100) yPercentage = 100;\n        if (yPercentage < 0) yPercentage = 0;\n\n        if (tracked.id === \"colorspace\") {\n            saturation = xPercentage / 100;\n            brightness = 1 - yPercentage / 100;\n        }\n        else if (tracked.id === \"huespace\") {\n            hue = xPercentage / 100;\n        }\n\n        // Update the customColor which should be bound for change\n        value = hexValue;\n    }\n\n    function mouseMove(event: MouseEvent) {\n        if (!tracked) return;\n        moveGrabber(event);\n    }\n\n    function mouseDown(event: MouseEvent) {\n        tracked = event.currentTarget as HTMLDivElement;\n        moveGrabber(event);\n    }\n</script>\n\n<svelte:document onmouseup={() => tracked = null} onmousemove={mouseMove} />\n\n<div class=\"picker-container\">\n    <div id=\"colorspace\" style:background={hueField} onmousedown={mouseDown} role=\"slider\" aria-valuenow={saturation} tabindex=\"0\">\n        <div class=\"colorspace-grabber\" style:top={csgTop + \"%\"} style:left={csgLeft + \"%\"}></div>\n    </div>\n\n    <div id=\"huespace\" onmousedown={mouseDown} role=\"slider\" aria-valuenow={hue} tabindex=\"0\">\n        <div class=\"huespace-grabber\" style:left={hgLeft + \"%\"}></div>\n    </div>\n\n    <div class=\"color-info\">\n        <div class=\"info-split\">\n            <div class=\"color-picked\" class:empty={isEmpty} style:background=\"rgb({red}, {green}, {blue})\" style:border-color={borderColor}></div>\n\n            <div class=\"color-values\">\n                <div class=\"hex-value\">{isEmpty ? \"-\" : hexValue}</div>\n\n                <div class=\"rgb-values\">\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : red}</div>\n                        <div>R</div>\n                    </div>\n\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : green}</div>\n                        <div>G</div>\n                    </div>\n\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : blue}</div>\n                        <div>B</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<style>\n.picker-container {\n    position: relative;\n    background: var(--bg-modal);\n    border: 1px solid black;\n    box-shadow: 0 0 20px -1px rgba(0,0,0,0.7);\n    padding: 12px;\n    border-radius: var(--radius-level-2);\n    overflow: hidden;\n}\n\n.picker-container::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    box-shadow: 0 0 1px white inset;\n    border-radius: inherit;\n    z-index: 2;\n    pointer-events: none;\n}\n\n#colorspace {\n    width: 240px;\n    height: 160px;\n    position: relative;\n    overflow: hidden;\n    border-radius: var(--radius-level-3);\n    border: 1px solid var(--border-input);\n    box-shadow: 0 0 3px 0px black;\n}\n\n#colorspace::before,\n#colorspace::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n#colorspace::before {\n    background: linear-gradient(to right, rgb(255, 255, 255), rgba(255, 255, 255, 0));\n    z-index: 1;\n}\n\n#colorspace::after {\n    background: linear-gradient(to top, rgb(0, 0, 0), rgba(0, 0, 0, 0));\n    z-index: 2;\n}\n\n.colorspace-grabber {\n    margin: 0;\n    padding: 0;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid black;\n    background: white;\n    position: relative;\n    transform: translate(-50%, -50%);\n    left: 100%;\n    pointer-events: none;\n    z-index: 3;\n}\n\n#huespace {\n    background: linear-gradient(to right, #ff0000 0%, #ffff00 17%, #00ff00 33%, #00ffff 50%, #0000ff 67%, #ff00ff 83%, #ff0000 100%);\n    margin: 15px 10px 10px 10px;\n    border-radius: 10px;\n    height: 10px;\n}\n\n.huespace-grabber {\n    background: white;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid black;\n    transform: translate(-50%, -1px);\n    left: 0%;\n    position: relative;\n    cursor: default;\n    pointer-events: none;\n}\n\n.color-info {\n    display: flex;\n    padding: 10px;\n    /* padding-top: 10px; */\n    width: 100%;\n    position: relative;\n}\n\n.info-split {\n    display: flex;\n    width: 100%;\n    gap: 20px;\n}\n\n.color-picked {\n    display: flex;\n    flex: 1 1 50%;\n    min-height: 100%;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 1);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 1) inset;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    box-shadow: 0 0 3px 0px black;\n}\n\n.color-values {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex: 50%;\n    gap: 12px;\n}\n\n.hex-value {\n    display: flex;\n    justify-content: center;\n    background: var(--bg-input-focus);\n    padding: 2px;\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    width: 100%;\n}\n\n.rgb-values {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n}\n\n.rgb-value {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 6px;\n}\n\n.value {\n    display: flex;\n    justify-content: center;\n    background: var(--bg-input-focus);\n    padding: 2px;\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    width: 30px;\n}\n\n\n.color-picked.empty {\n    background: var(--bg-input-focus)!important;\n    border-color: var(--border-input)!important;\n    box-shadow: none!important;\n    background: linear-gradient(to top left,\n             rgba(0,0,0,0) 0%,\n             rgba(0,0,0,0) calc(50% - 1px),\n             var(--color-danger) 50%,\n             rgba(0,0,0,0) calc(50% + 1px),\n             rgba(0,0,0,0) 100%),\n         linear-gradient(to top right,\n             rgba(0,0,0,0) 0%,\n             rgba(0,0,0,0) calc(50% - 1px),\n             var(--color-danger) 50%,\n             rgba(0,0,0,0) calc(50% + 1px),\n             rgba(0,0,0,0) 100%) var(--bg-input-focus)!important;\n    /* opacity: 0; */\n}\n\n/* .empty .hex-value, */\n/* .empty .value {\n    color: transparent;\n} */\n</style>\n```\n\n\nThank you for providing the additional code. I see that the theme handling is implemented, but there might be an issue with how the changes are being propagated to the UI. Let's make a few modifications to ensure the palette is updated correctly when a theme is selected.\n\n1. First, let's modify the `themeHandler.ts` file to emit an event when the theme is applied:\n\n```typescript\nimport type {HexColor} from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport {fetchColorScheme, parseColorScheme} from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    try {\n        const {colorSchemeResponse} = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        const colorProperties = [\n            \"background\",\n            \"foreground\",\n            \"selectionBackground\",\n            \"selectionForeground\",\n            \"cursorColor\"\n        ] as const;\n\n        colorProperties.forEach((prop) => {\n            if (colorScheme[prop]) config[prop] = colorScheme[prop] as HexColor;\n        });\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill(\"#000000\") as HexColor[];\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[+index] = color as HexColor;\n            }\n            config.palette = newPalette;\n        }\n\n        // Force a re-render by updating the theme property\n        config.theme = themeName;\n\n        // Emit a custom event to notify that the theme has been applied\n        window.dispatchEvent(new CustomEvent('themeApplied', { detail: { theme: themeName } }));\n\n        console.log(\"Theme applied:\", themeName);\n        console.log(\"New palette:\", config.palette);\n    }\n    catch (error) {\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n\n2. Now, let's modify the `Palette.svelte` component to listen for this event and update its local state:\n\n```svelte\n<script lang=\"ts\">\n    import type {HexColor} from \"$lib/utils/colors\";\n    import Color from \"./Color.svelte\";\n    import config from \"$lib/stores/config.svelte\";\n\n    const {value = $bindable([]), defaultValue}: {value: HexColor[], defaultValue: HexColor[]} = $props();\n\n    // Function to update local state when the theme is applied\n    function updatePalette() {\n        value = [...config.palette];\n    }\n\n    // Listen for the themeApplied event\n    onMount(() => {\n        window.addEventListener('themeApplied', updatePalette);\n        return () => {\n            window.removeEventListener('themeApplied', updatePalette);\n        };\n    });\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as _, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={value[i]} size={40} label={(i + 1).toString()} />\n        {/each}\n    </div>\n</div>\n\n<style>\n    /* ... (styles remain unchanged) ... */\n</style>\n```\n\n3. In the component where you're selecting the theme (which you haven't provided), make sure you're calling the `themeHandler` function when a new theme is selected. It should look something like this:\n\n```svelte\n<script lang=\"ts\">\n    import themeHandler from \"$lib/utils/themeHandler\";\n    import config from \"$lib/stores/config.svelte\";\n\n    function onThemeSelect(event) {\n        const selectedTheme = event.target.value;\n        themeHandler(selectedTheme);\n    }\n</script>\n\n<select bind:value={config.theme} on:change={onThemeSelect}>\n    {#each themes as theme}\n        <option value={theme}>{theme}</option>\n    {/each}\n</select>\n```\n\nThese changes should ensure that when a new theme is selected:\n1. The `themeHandler` function is called.\n2. The `config` store is updated with the new theme colors and palette.\n3. A custom event is dispatched to notify that the theme has been applied.\n4. The `Palette` component listens for this event and updates its local state with the new palette colors.\n\nThis should resolve the issue of the color palette not updating when selecting a theme from the dropdown menu. If you're still experiencing issues, please provide the component where you're selecting the theme, and I can offer more specific advice.\n\n```svelte ghostty-config/src/routes/settings/[category]/+page.svelte\n<script lang=\"ts\">\n    import Page from \"$lib/views/Page.svelte\";\n\n    import {page} from \"$app/stores\";\n    import Switch from \"$lib/components/settings/Switch.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n\n    import settings from \"$lib/data/settings\";\n    import config from \"$lib/stores/config.svelte\";\n    import Text from \"$lib/components/settings/Text.svelte\";\n    import Number from \"$lib/components/settings/Number.svelte\";\n    import Dropdown from \"$lib/components/settings/Dropdown.svelte\";\n    import Color from \"$lib/components/settings/Color.svelte\";\n    import Palette from \"$lib/components/settings/Palette.svelte\";\n    import FontPreview from \"$lib/views/FontPreview.svelte\";\n    import BaseColorPreview from \"$lib/views/BaseColorPreview.svelte\";\n    import CursorPreview from \"$lib/views/CursorPreview.svelte\";\n    import PalettePreview from \"$lib/views/PalettePreview.svelte\";\n    import Admonition from \"$lib/components/Admonition.svelte\";\n\n\n    const category = $derived(settings.find(c => c.id === $page.params.category));\n    const title = $derived(category?.name ?? $page.params.category);\n</script>\n\n\n<Page {title}>\n    {#if category}\n        {#if category.id === \"fonts\"}\n            <FontPreview />\n        {:else if category.id === \"colors\"}\n            <Admonition size=\"1.5rem\">You can reset a color to its default value by right clicking!</Admonition>\n        {/if}\n        {#each category.groups as group (group.id)}\n            <Group title={group.name} note={group.note}>\n                {#if category.id === \"colors\" && group.id === \"base\"}\n                    <BaseColorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"cursor\"}\n                    <CursorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"palette\"}\n                    <PalettePreview />\n                    <Separator />\n                {/if}\n                {#each group.settings as setting, i (setting.id)}\n                    {#if i !== 0}<Separator />{/if}\n                    <Item name={setting.name} note={setting.note}>\n                        {#if setting.type === \"switch\"}\n                            <Switch bind:checked={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"text\"}\n                            <Text bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"number\"}\n                            <Number bind:value={config[setting.id as keyof typeof config]} range={setting.range} min={setting.min} max={setting.max} step={setting.step} size={setting.size} />\n                        {:else if setting.type === \"dropdown\"}\n                            <Dropdown bind:value={config[setting.id as keyof typeof config]} options={setting.options} />\n                        {:else if setting.type === \"color\"}\n                            <Color defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"palette\"}\n                            <Palette defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {/if}\n                    </Item>\n                {/each}\n            </Group>\n        {/each}\n    {:else}\n        <h1>What Happened?</h1>\n        <p>You shouldn't be here! If you followed a link, please report the bug on GitHub. Otherwise, go ahead and start browsing on the left.</p>\n    {/if}\n</Page>\n```\n\n\n```ts ghostty-config/src/lib/utils/themeHandler.ts\nimport type {HexColor} from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport {fetchColorScheme, parseColorScheme} from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    try {\n        const {colorSchemeResponse} = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        const colorProperties = [\n            \"background\",\n            \"foreground\",\n            \"selectionBackground\",\n            \"selectionForeground\",\n            \"cursorColor\"\n        ] as const;\n\n        colorProperties.forEach((prop) => {\n            if (colorScheme[prop]) config[prop] = colorScheme[prop] as HexColor;\n        });\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill(\"#000000\") as HexColor[];\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[+index] = color as HexColor;\n            }\n            config.palette = newPalette;\n        }\n\n        // Force a re-render by updating the theme property\n        config.theme = themeName;\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n\n\n```ts ghostty-config/src/lib/utils/parse.ts\nimport type {KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"./colors\";\n\nconst re = /^\\s*([a-z-]+)[\\s]*=\\s*(.*)\\s*$/;\n\nexport default function(configString: string) {\n    const lines = configString.split(\"\\n\");\n\n    const results = {\n        palette: Array(256),\n        keybind: [] as Array<string>\n    } as {palette: (HexColor|\"\")[], keybind: KeybindString[], [key: string]: string|string[]};\n\n    for (let p = 0; p < 256; p++) results.palette[p] = \"\";\n\n    for (const l of lines) {\n        const line = l.trim();\n        const match = re.exec(line);\n        if (!match) continue;\n        const key = match[1].trim();\n        const value = match[2].trim();\n\n        if (key === \"palette\") {\n            const split = value.split(\"=\");\n            const num = parseInt(split[0].trim());\n            const color = split[1].trim() as HexColor; // TODO: perform validation\n            if (num < 0 || num > 255) continue;\n            results.palette[num] = color;\n        }\n        else if (key === \"keybind\") {\n            results.keybind.push(value as KeybindString); // TODO: perform validation\n        }\n        else {\n            const split = key.split(\"-\");\n            let newKey = split[0].trim();\n            for (let s = 1; s < split.length; s++) {\n                newKey += split[s].charAt(0).toUpperCase();\n                newKey += split[s].substring(1);\n            }\n            results[newKey] = value;\n        }\n    }\n\n    return results;\n};\n\n```\n\n\n```ts ghostty-config/src/lib/utils/colors.ts\nexport type HexColor = `#${string}`;\nexport type RgbArray = [number, number, number];\nexport type HsvArray = [number, number, number];\nexport type HsvObj = {hue: number, saturation: number, value: number};\n\nexport function luminosity(color: HexColor) {\n    const int = parseInt(color.substring(1), 16);\n    const red = int >> 16 & 0xFF;\n    const green = int >> 8 & 0xFF;\n    const blue = int >> 0 & 0xFF;\n\n    return (0.2126 * red) + (0.7152 * green) + (0.0722 * blue);\n}\n\n\nexport function isDark(color: HexColor) {\n    return luminosity(color) < 128;\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n */\nexport function hsvToRgb(hue: number, saturation: number, value: number): RgbArray {\n    const i = Math.floor(hue * 6);\n    const f = hue * 6 - i;\n    const p = value * (1 - saturation);\n    const q = value * (1 - f * saturation);\n    const t = value * (1 - (1 - f) * saturation);\n\n    let r, g, b;\n    switch (i % 6) {\n        /* eslint-disable no-sequences, @typescript-eslint/no-unused-expressions */\n        case 0: r = value, g = t, b = p; break;\n        case 1: r = q, g = value, b = p; break;\n        case 2: r = p, g = value, b = t; break;\n        case 3: r = p, g = q, b = value; break;\n        case 4: r = t, g = p, b = value; break;\n        default:\n        case 5: r = value, g = p, b = q; break;\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n}\n\nexport function rgbToHsv(red: number, green: number, blue: number): HsvObj {\n    const percentRed = red / 255;\n    const percentGreen = green / 255;\n    const percentBlue = blue / 255;\n    const cMax = Math.max(percentRed, percentGreen, percentBlue);\n    const cMin = Math.min(percentRed, percentGreen, percentBlue);\n    const delta = cMax - cMin;\n\n    let newHue = 0;\n    if (percentRed === cMax) newHue = 60 * (((percentGreen - percentBlue) / delta) % 6) / 360;\n    else if (percentGreen === cMax) newHue = 60 * (((percentBlue - percentRed) / delta) + 2) / 360;\n    else if (percentBlue === cMax) newHue = 60 * (((percentRed - percentGreen) / delta) + 4) / 360;\n    if (newHue < 0) newHue += 6;\n\n    const hue = delta === 0 ? 0 : newHue;\n    const saturation = cMax === 0 ? 0 : delta / cMax;\n    const value = cMax;\n    return {hue, saturation, value};\n}\n\n\nexport function rgbToHex(red: number, green: number, blue: number): HexColor {\n    const get = (color: number) => color.toString(16).padStart(2, \"0\").toUpperCase();\n    return `#${get(red)}${get(green)}${get(blue)}`;\n}\n\nexport function hexToRgb(string: HexColor): RgbArray {\n    const hex = string.slice(1);\n    const get = (s: number, e: number) => parseInt(hex.substring(s, e), 16);\n    return [get(0, 2), get(2, 4), get(4,6)];\n}\n```\n\n\n```ts ghostty-config/src/lib/stores/config.svelte.ts\nimport {dev} from \"$app/environment\";\nimport settings, {type KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"$lib/utils/colors\";\nimport themeHandler from \"$lib/utils/themeHandler\";\n// import defs from \"../data/defaults.json\";\n\n// TODO: find a good way to properly type the config\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaults: Partial<Record<keyof DefaultConfig, any>> = {};\n\nfor (const panel of settings) {\n    for (const group of panel.groups) {\n        for (const setting of group.settings) {\n            defaults[setting.id as keyof typeof defaults] = setting.value;\n        }\n    }\n}\n\nif (dev) {\n    // eslint-disable-next-line no-console\n    console.log(defaults);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\n\nexport function keyToConfig(key: string) {\n    return key.replaceAll(/([A-Z])/g, \"-$1\").toLowerCase();\n}\n\nexport function diff() {\n    // TODO: more elegance\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const output: Partial<Record<keyof typeof defaults|string, any>> = {};\n\n    for (const k in config) {\n        const key = k as keyof DefaultConfig;\n        if (Array.isArray(config[key]) && key === \"keybind\") {\n            const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (Array.isArray(config[key]) && key === \"palette\") {\n            const toAdd = [];\n            for (let p = 0; p < defaults[key].length; p++) {\n                if (config[key][p] === defaults[key][p]) continue;\n                toAdd.push(`${p}=${config[key][p]}`);\n            }\n            // const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (config[key] != defaults[key]) {\n            output[keyToConfig(key)] = config[key];\n        }\n    }\n\n    return output;\n}\n\nexport function load(conf: Partial<typeof config>) {\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n\n            if (key === \"theme\") {\n                themeHandler(conf[key] as string);\n            }\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n        }\n        else if (key === \"palette\") {\n            config.palette = [...conf.palette];\n        }\n    }\n}\n\nexport default config;\n\n\n// TODO: is this useful?\ninterface DefaultConfig {\n    palette: HexColor[];\n    keybind: KeybindString[];\n    fontFamily: string;\n    fontFamilyBold: string;\n    fontFamilyItalic: string;\n    fontFamilyBoldItalic: string;\n    fontStyle: string;\n    fontStyleBold: string;\n    fontStyleItalic: string;\n    fontStyleBoldItalic: string;\n    fontFeature: string;\n    fontSize: number;\n    fontVariation: string;\n    fontVariationBold: string;\n    fontVariationItalic: string;\n    fontVariationBoldItalic: string;\n    fontCodepointMap: string;\n    fontThicken: boolean;\n    adjustCellWidth: string;\n    adjustCellHeight: string;\n    adjustFontBaseline: string;\n    adjustUnderlinePosition: string;\n    adjustUnderlineThickness: string;\n    adjustStrikethroughPosition: string;\n    adjustStrikethroughThickness: string;\n    adjustCursorThickness: string;\n    graphemeWidthMethod: string;\n    theme: string;\n    background: HexColor;\n    foreground: HexColor;\n    selectionForeground: string;\n    selectionBackground: string;\n    selectionInvertFgBg: boolean;\n    minimumContrast: number;\n    cursorColor: string;\n    cursorInvertFgBg: boolean;\n    cursorOpacity: number;\n    cursorStyle: string;\n    cursorStyleBlink: string;\n    cursorText: string;\n    cursorClickToMove: boolean;\n    mouseHideWhileTyping: boolean;\n    mouseShiftCapture: boolean;\n    mouseScrollMultiplier: number;\n    backgroundOpacity: number;\n    backgroundBlurRadius: number;\n    unfocusedSplitOpacity: number;\n    unfocusedSplitFill: string;\n    command: string;\n    waitAfterCommand: boolean;\n    abnormalCommandExitRuntime: number;\n    scrollbackLimit: number;\n    linkUrl: boolean;\n    fullscreen: boolean;\n    title: string;\n    class: string;\n    workingDirectory: string;\n    windowPaddingX: number;\n    windowPaddingY: number;\n    windowPaddingBalance: boolean;\n    windowPaddingColor: string;\n    windowVsync: boolean;\n    windowInheritWorkingDirectory: boolean;\n    windowInheritFontSize: boolean;\n    windowDecoration: boolean;\n    windowTitleFontFamily: string;\n    windowTheme: string;\n    windowColorspace: string;\n    windowHeight: number;\n    windowWidth: number;\n    windowSaveState: string;\n    windowStepResize: boolean;\n    windowNewTabPosition: string;\n    resizeOverlay: string;\n    resizeOverlayPosition: string;\n    resizeOverlayDuration: string;\n    focusFollowsMouse: boolean;\n    clipboardRead: string;\n    clipboardWrite: string;\n    clipboardTrimTrailingSpaces: boolean;\n    clipboardPasteProtection: boolean;\n    clipboardPasteBracketedSafe: boolean;\n    imageStorageLimit: number;\n    copyOnSelect: boolean;\n    clickRepeatInterval: number;\n    configFile: string;\n    configDefaultFiles: boolean;\n    confirmCloseSurface: boolean;\n    quitAfterLastWindowClosed: boolean;\n    quitAfterLastWindowClosedDelay: string;\n    initialWindow: boolean;\n    shellIntegration: string;\n    shellIntegrationFeatures: string;\n    oscColorReportFormat: string;\n    vtKamAllowed: boolean;\n    customShader: string;\n    customShaderAnimation: boolean;\n    macosNonNativeFullscreen: boolean;\n    macosTitlebarStyle: string;\n    macosOptionAsAlt: boolean;\n    macosWindowShadow: boolean;\n    linuxCgroup: string;\n    linuxCgroupMemoryLimit: string;\n    linuxCgroupProcessesLimit: string;\n    linuxCgroupHardFail: boolean;\n    gtkSingleInstance: string;\n    gtkTitlebar: boolean;\n    gtkTabsLocation: string;\n    gtkWideTabs: boolean;\n    gtkAdwaita: boolean;\n    desktopNotifications: boolean;\n    boldIsBright: boolean;\n    term: string;\n    enquiryResponse: string;\n}\n```\n\n\n```ts ghostty-config/src/lib/data/settings.ts\nimport config from \"$lib/stores/config.svelte\";\nimport type {HexColor} from \"$lib/utils/colors\";\n\ninterface BaseSettingType {\n    id: string;\n    name: string;\n    note?: string;\n}\n\ninterface Panel extends BaseSettingType {\n    groups: Group[];\n}\n\ninterface Group extends BaseSettingType {\n    settings: (Switch | Text | Number | Dropdown | Color | Palette | Keybinds)[];\n    // type: \"group\";\n}\n\ntype SettingType = \"switch\" | \"number\" | \"dropdown\" | \"text\" | \"color\" | \"palette\" | \"keybinds\";\n\ninterface BaseSettingItem extends BaseSettingType {\n    type: SettingType;\n    value: unknown;\n}\n\ninterface Switch extends BaseSettingItem {\n    type: \"switch\";\n    value: boolean;\n}\n\ninterface Text extends BaseSettingItem {\n    type: \"text\";\n    value: string;\n}\n\ninterface Number extends BaseSettingItem {\n    type: \"number\";\n    value: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    size?: number;\n    range?: boolean;\n}\n\ninterface DropdownOption {\n    name: string;\n    value: string;\n}\n\ninterface Dropdown extends BaseSettingItem {\n    type: \"dropdown\";\n    value: \"string\";\n    options: (DropdownOption | string)[];\n}\n\ninterface Color extends BaseSettingItem {\n    value: HexColor;\n    type: \"color\";\n}\n\ninterface Palette extends BaseSettingItem {\n    value: HexColor[];\n    type: \"palette\";\n}\n\nexport type KeybindString = `${string}=${string}`;\ninterface Keybinds extends BaseSettingItem {\n    value: KeybindString[];\n    type: \"keybinds\";\n}\n\ninterface ThemeResponse {\n  \"type\": string;\n  \"encoding\": string;\n  \"size\": number;\n  \"name\": string;\n  \"path\": string;\n  \"content\": string;\n  \"sha\": string;\n  \"url\": string;\n  \"git_url\": string;\n  \"html_url\": string;\n  \"download_url\": string;\n  \"_links\": {\n    \"git\": string;\n    \"self\": string;\n    \"html\": string;\n  }\n}\n\ninterface ColorScheme {\n  palette: { [key: string]: string };\n  background?: string;\n  foreground?: string;\n  cursorColor?: string;\n  selectionBackground?: string;\n  selectionForeground?: string;\n}\n\nconst fetchThemeFiles = async () => {\n    const apiUrl = \"https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty\";\n\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const themeFiles = await response.json();\n\n    return {themeFiles};\n};\n\n// Function to convert raw string data into a JSON object\nexport const parseColorScheme = (input: string): ColorScheme => {\n  const colorScheme: ColorScheme = {palette: {}};\n\n  // Split input by lines\n  const lines = input.split(\"\\n\");\n\n  lines.forEach((line) => {\n    if (line.startsWith(\"palette\")) {\n      const [, rest] = line.split(\"palette =\").map(part => part.trim());\n\n      if (rest) {\n        const [paletteIndex, color] = rest.split(\"=\");\n        if (paletteIndex && color) {\n          colorScheme.palette[paletteIndex.trim()] = color.trim();\n        }\n      }\n    }\n    else {\n      const [key, value] = line.split(\"=\").map(part => part.trim());\n\n      switch (key) {\n        case \"background\":\n          colorScheme.background = `#${value}`;\n          break;\n        case \"foreground\":\n          colorScheme.foreground = `#${value}`;\n          break;\n        case \"cursor-color\":\n          colorScheme.cursorColor = `#${value}`;\n          break;\n        case \"selection-background\":\n          colorScheme.selectionBackground = `#${value}`;\n          break;\n        case \"selection-foreground\":\n          colorScheme.selectionForeground = `#${value}`;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n\n  return colorScheme;\n};\n\nexport const fetchColorScheme = async (theme: string) => {\n    const apiUrl = `https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty${theme ? \"/\" + theme : \"\"}`;\n\n    const response = await fetch(apiUrl,{\n        headers: {\n            Accept: \"application/vnd.github.raw+json\"\n        }\n    });\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const colorSchemeResponse = await response.text();\n\n    return {colorSchemeResponse};\n};\n\nconst {themeFiles} = await fetchThemeFiles();\nconst themeFileNames = themeFiles && themeFiles.map((file: ThemeResponse) => file.name);\n\n// const {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\n// const colorScheme = parseColorScheme(colorSchemeResponse);\n\nexport default [\n    {\n        id: \"application\",\n        name: \"Application\",\n        note: \"\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                // type: \"group\",\n                settings: [\n                    {id: \"title\", name: \"Static title for all windows\", type: \"text\", value: \"\"},\n                    {id: \"desktopNotifications\", name: \"Allow desktop notifications\", type: \"switch\", value: true},\n                    {id: \"configFile\", name: \"Additional config file\", type: \"text\", value: \"\"},\n                    {id: \"configDefaultFiles\", name: \"Load default config file\", type: \"switch\", value: true},\n                    {id: \"linkUrl\", name: \"Automatically link URLs\", note: \"Matching occurs while holding the control (Linux) or command (macOS) key.\", type: \"switch\", value: true},\n                ]\n            },\n            {\n                id: \"startup\",\n                name: \"Startup\",\n                // type: \"group\",\n                settings: [\n                    {id: \"command\", name: \"Command to run on launch\", type: \"text\", value: \"\"},\n                    {id: \"fullscreen\", name: \"Launch in fullscreen mode\", type: \"switch\", value: false},\n                    {id: \"initialWindow\", name: \"Show a window on startup\", type: \"switch\", value: true},\n                    {id: \"workingDirectory\", name: \"Directory to use after startup\", note: \"Special values of `home` and `inherit` are also allowed here.\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shutdown\",\n                name: \"Shutdown\",\n                // type: \"group\",\n                settings: [\n                    {id: \"waitAfterCommand\", name: \"Wait for input after command\", type: \"switch\", value: false},\n                    {id: \"abnormalCommandExitRuntime\", name: \"Abnormal command exit runtime\", type: \"number\", value: 250, min: 0, size: 5},\n                    {id: \"confirmCloseSurface\", name: \"Confirm when closing a surface\", type: \"switch\", value: true},\n                    {id: \"quitAfterLastWindowClosed\", name: \"Quit after closing last window\", type: \"switch\", value: false},\n                    {id: \"quitAfterLastWindowClosedDelay\", name: \"Delay before auto quitting\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shell\",\n                name: \"Shell Integration\",\n                // type: \"group\",\n                settings: [\n                    {id: \"shellIntegration\", name: \"Shell integration style\", type: \"dropdown\", value: \"detect\", options: [\"none\", \"detect\", \"bash\", \"elvish\", \"fish\", \"zsh\"]},\n                    {id: \"shellIntegrationFeatures\", name: \"Shell integration features\", note: \"The current available features are cursor, sudo, and title. Including one force enables it, prefixing it with `no-` force disables it, omitting it falls back to default.\", type: \"text\", value: \"cursor,no-sudo,title\"},\n                    {id: \"term\", name: \"TERM environment variable\", type: \"text\", value: \"xterm-ghostty\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced\",\n                note: \"You should only touch these settings if you know what you're doing, otherwise you could cause major issues with Ghostty!\",\n                // type: \"group\",\n                settings: [\n                    {id: \"scrollbackLimit\", name: \"Scrollback buffer size (bytes)\", note: \"This buffer exists completely in memory but is allocated lazily.\", type: \"number\", value: 10000000, min: 0, size: 10},\n                    {id: \"customShader\", name: \"Custom shader\", note: \"This matches the API of Shadertoy.\", type: \"text\", value: \"\"},\n                    {id: \"customShaderAnimation\", name: \"Allow shaders to animate\", type: \"dropdown\", value: \"false\", options: [\"false\", \"true\", \"always\"]},\n                    {id: \"enquiryResponse\", name: \"Reponse to ENQ\", type: \"text\", value: \"\"},\n                    {id: \"oscColorReportFormat\", name: \"OSC color report format\", type: \"dropdown\", value: \"16-bit\", options: [\"none\", \"8-bit\", \"16-bit\"]},\n                    {id: \"vtKamAllowed\", name: \"VT kam mode allowed\", note: \"If you don't know what this is, don't touch it!\", type: \"switch\", value: false},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"clipboard\",\n        name: \"Clipboard\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"clipboardRead\", name: \"Allow terminal to read clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"clipboardWrite\", name: \"Allow terminal to write clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"copyOnSelect\", name: \"Copy on select\", type: \"switch\", value: true},\n                    {id: \"clipboardTrimTrailingSpaces\", name: \"Trim trailing space on copy\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteProtection\", name: \"Confirm when pasting unsafely\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteBracketedSafe\", name: \"Mark bracketed paste as safe\", type: \"switch\", value: true},\n                    {id: \"imageStorageLimit\", name: \"Image buffer limit (bytes)\", type: \"number\", value: 320000000, min: 0, max: 4294967295, size: 12},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"window\",\n        name: \"Window\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"windowVsync\", name: \"Enable vsync\", type: \"switch\", value: true},\n                    {id: \"windowInheritWorkingDirectory\", name: \"Inherit working directory\", type: \"switch\", value: true},\n                    {id: \"windowInheritFontSize\", name: \"Inherit font size\", type: \"switch\", value: true},\n                    {id: \"windowColorspace\", name: \"Window colorspace\", type: \"dropdown\", value: \"srgb\", options: [\"srgb\", \"display-p3\"]},\n                    {id: \"windowSaveState\", name: \"Save window state\", type: \"dropdown\", value: \"default\", options: [\"default\", \"never\", \"always\"]},\n                    // maybe move to application?\n                    {id: \"windowNewTabPosition\", name: \"New tab position\", type: \"dropdown\", value: \"current\", options: [\"current\", \"end\"]},\n                ]\n            },\n            {\n                id: \"appearance\",\n                name: \"Appearance\",\n                settings: [\n                    {id: \"windowTheme\", name: \"Window theme\", type: \"dropdown\", value: \"auto\", options: [\"auto\", \"system\", \"light\", \"dark\"]},\n                    {id: \"windowDecoration\", name: \"Enable native frames\", type: \"switch\", value: true},\n                    {id: \"windowPaddingX\", name: \"Horizontal window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingY\", name: \"Vertical window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingBalance\", name: \"Auto-balance window padding\", type: \"switch\", value: false},\n                    {id: \"windowPaddingColor\", name: \"Window padding color\", type: \"dropdown\", value: \"extend\", options: [\"background\", \"extend\", \"extend-always\"]},\n\n                    // maybe move to colors\n                    {id: \"backgroundOpacity\", name: \"Background opacity\", type: \"number\", range: true, value: 1, min: 0, max: 1, step: 0.01},\n                    {id: \"backgroundBlurRadius\", name: \"Background blur radius\", note: \"A value of 20 is reasonable for a good looking blur, going beyond that can cause rendering and performance issues.\", type: \"number\", range: true, value: 0, min: 0, max: 50, step: 1},\n                    {id: \"unfocusedSplitOpacity\", name: \"Unfocused split opacity\", type: \"number\", range: true, value: 0.7, min: 0.15, max: 1, step: 0.01},\n                    {id: \"unfocusedSplitFill\", name: \"Unfocused split fill color\", type: \"color\", value: \"\"},\n                ]\n            },\n            {\n                id: \"resize\",\n                name: \"Sizing & Resizing\",\n                settings: [\n                    {id: \"windowHeight\", name: \"Initial window height\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 4, step: 1, size: 4},\n                    {id: \"windowWidth\", name: \"Initial window width\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 10, step: 1, size: 4},\n                    {id: \"windowStepResize\", name: \"Resize in grid cell increments\", type: \"switch\", value: false},\n                    {id: \"resizeOverlay\", name: \"Show resize overlays\", type: \"dropdown\", value: \"after-first\", options: [\"always\", \"never\", \"after-first\"]},\n                    {id: \"resizeOverlayPosition\", name: \"Resize overlay position\", type: \"dropdown\", value: \"center\", options: [\"center\", \"top-left\", \"top-center\", \"top-right\", \"bottom-left\", \"bottom-center\", \"bottom-right\"]},\n                    {id: \"resizeOverlayDuration\", name: \"Show resize overlay time\", type: \"text\", value: \"750ms\"},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"colors\",\n        name: \"Colors\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                settings: [\n                    {\n                        id: \"theme\",\n                        name: \"Color theme\",\n                        note: \"Any colors selected after setting this will overwrite the theme's colors.\",\n                        type: \"dropdown\",\n                        value: \"\",\n                        options: [\"\", ...themeFileNames]\n                    },\n                    {id: \"boldIsBright\", name: \"Bold text uses bright colors\", type: \"switch\", value: false},\n                    {id: \"minimumContrast\", name: \"Minimum contrast\", type: \"number\", value: 1, range: true, min: 1, max: 21, step: 0.1},\n                ]\n            },\n            {\n                id: \"base\",\n                name: \"Base Colors\",\n                note: \"The preview here shows selected text in the second line of the command output.\",\n                settings: [\n                    {id: \"background\", name: \"Background color\", type: \"color\", value: \"#282c34\"},\n                    {id: \"foreground\", name: \"Foreground color\", type: \"color\", value: \"#ffffff\"},\n                    {id: \"selectionBackground\", name: \"Selection background color\", type: \"color\", value: \"\"},\n                    {id: \"selectionForeground\", name: \"Selection foreground color\", type: \"color\", value: \"\"},\n                    {id: \"selectionInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause selections to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                ]\n            },\n            {\n                id: \"cursor\",\n                name: \"Cursor\",\n                note: \"The cursor in this preview blinks on and off at 1 second intervals for emphasis, it may not match what you see in Ghostty!\",\n                settings: [\n                    {id: \"cursorColor\", name: \"Cursor color\", type: \"color\", value: \"\"},\n                    {id: \"cursorText\", name: \"Text color under cursor\", type: \"color\", value: \"\"},\n                    {id: \"cursorInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause cells under the cursor to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                    {id: \"cursorOpacity\", name: \"Cursor opacity\", type: \"number\", value: 1, range: true, min: 0, max: 1, step: 0.05},\n                    {id: \"cursorStyle\", name: \"Cursor style\", type: \"dropdown\", value: \"block\", options: [\"block\", \"bar\", \"underline\", {value: \"block_hollow\", name: \"hollow block\"}]},\n                    {id: \"cursorStyleBlink\", name: \"Cursor blink style\", note: \"The `default` option defers to DEC mode 12 to determine blinking state.\", type: \"dropdown\", value: \"\", options: [\"true\", \"false\", {value: \"\", name: \"default\"}]},\n                ]\n            },\n            {\n                id: \"palette\",\n                name: \"Color Palette\",\n                note: \"The first 16 colors are the most commonly displayed colors in the terminal.\\n\\nColors 1-8 are typically black, red, green, yellow, blue, magenta, cyan, and white.\\nColors 9-16 are typically \\\"brighter\\\" variants of these colors.\",\n                settings: [\n                    {id: \"palette\", name: \"\", type: \"palette\", value: [\"#1d1f21\",\"#cc6666\",\"#b5bd68\",\"#f0c674\",\"#81a2be\",\"#b294bb\",\"#8abeb7\",\"#c5c8c6\",\"#666666\",\"#d54e53\",\"#b9ca4a\",\"#e7c547\",\"#7aa6da\",\"#c397d8\",\"#70c0b1\",\"#eaeaea\",\"#000000\",\"#00005f\",\"#000087\",\"#0000af\",\"#0000d7\",\"#0000ff\",\"#005f00\",\"#005f5f\",\"#005f87\",\"#005faf\",\"#005fd7\",\"#005fff\",\"#008700\",\"#00875f\",\"#008787\",\"#0087af\",\"#0087d7\",\"#0087ff\",\"#00af00\",\"#00af5f\",\"#00af87\",\"#00afaf\",\"#00afd7\",\"#00afff\",\"#00d700\",\"#00d75f\",\"#00d787\",\"#00d7af\",\"#00d7d7\",\"#00d7ff\",\"#00ff00\",\"#00ff5f\",\"#00ff87\",\"#00ffaf\",\"#00ffd7\",\"#00ffff\",\"#5f0000\",\"#5f005f\",\"#5f0087\",\"#5f00af\",\"#5f00d7\",\"#5f00ff\",\"#5f5f00\",\"#5f5f5f\",\"#5f5f87\",\"#5f5faf\",\"#5f5fd7\",\"#5f5fff\",\"#5f8700\",\"#5f875f\",\"#5f8787\",\"#5f87af\",\"#5f87d7\",\"#5f87ff\",\"#5faf00\",\"#5faf5f\",\"#5faf87\",\"#5fafaf\",\"#5fafd7\",\"#5fafff\",\"#5fd700\",\"#5fd75f\",\"#5fd787\",\"#5fd7af\",\"#5fd7d7\",\"#5fd7ff\",\"#5fff00\",\"#5fff5f\",\"#5fff87\",\"#5fffaf\",\"#5fffd7\",\"#5fffff\",\"#870000\",\"#87005f\",\"#870087\",\"#8700af\",\"#8700d7\",\"#8700ff\",\"#875f00\",\"#875f5f\",\"#875f87\",\"#875faf\",\"#875fd7\",\"#875fff\",\"#878700\",\"#87875f\",\"#878787\",\"#8787af\",\"#8787d7\",\"#8787ff\",\"#87af00\",\"#87af5f\",\"#87af87\",\"#87afaf\",\"#87afd7\",\"#87afff\",\"#87d700\",\"#87d75f\",\"#87d787\",\"#87d7af\",\"#87d7d7\",\"#87d7ff\",\"#87ff00\",\"#87ff5f\",\"#87ff87\",\"#87ffaf\",\"#87ffd7\",\"#87ffff\",\"#af0000\",\"#af005f\",\"#af0087\",\"#af00af\",\"#af00d7\",\"#af00ff\",\"#af5f00\",\"#af5f5f\",\"#af5f87\",\"#af5faf\",\"#af5fd7\",\"#af5fff\",\"#af8700\",\"#af875f\",\"#af8787\",\"#af87af\",\"#af87d7\",\"#af87ff\",\"#afaf00\",\"#afaf5f\",\"#afaf87\",\"#afafaf\",\"#afafd7\",\"#afafff\",\"#afd700\",\"#afd75f\",\"#afd787\",\"#afd7af\",\"#afd7d7\",\"#afd7ff\",\"#afff00\",\"#afff5f\",\"#afff87\",\"#afffaf\",\"#afffd7\",\"#afffff\",\"#d70000\",\"#d7005f\",\"#d70087\",\"#d700af\",\"#d700d7\",\"#d700ff\",\"#d75f00\",\"#d75f5f\",\"#d75f87\",\"#d75faf\",\"#d75fd7\",\"#d75fff\",\"#d78700\",\"#d7875f\",\"#d78787\",\"#d787af\",\"#d787d7\",\"#d787ff\",\"#d7af00\",\"#d7af5f\",\"#d7af87\",\"#d7afaf\",\"#d7afd7\",\"#d7afff\",\"#d7d700\",\"#d7d75f\",\"#d7d787\",\"#d7d7af\",\"#d7d7d7\",\"#d7d7ff\",\"#d7ff00\",\"#d7ff5f\",\"#d7ff87\",\"#d7ffaf\",\"#d7ffd7\",\"#d7ffff\",\"#ff0000\",\"#ff005f\",\"#ff0087\",\"#ff00af\",\"#ff00d7\",\"#ff00ff\",\"#ff5f00\",\"#ff5f5f\",\"#ff5f87\",\"#ff5faf\",\"#ff5fd7\",\"#ff5fff\",\"#ff8700\",\"#ff875f\",\"#ff8787\",\"#ff87af\",\"#ff87d7\",\"#ff87ff\",\"#ffaf00\",\"#ffaf5f\",\"#ffaf87\",\"#ffafaf\",\"#ffafd7\",\"#ffafff\",\"#ffd700\",\"#ffd75f\",\"#ffd787\",\"#ffd7af\",\"#ffd7d7\",\"#ffd7ff\",\"#ffff00\",\"#ffff5f\",\"#ffff87\",\"#ffffaf\",\"#ffffd7\",\"#ffffff\",\"#080808\",\"#121212\",\"#1c1c1c\",\"#262626\",\"#303030\",\"#3a3a3a\",\"#444444\",\"#4e4e4e\",\"#585858\",\"#626262\",\"#6c6c6c\",\"#767676\",\"#808080\",\"#8a8a8a\",\"#949494\",\"#9e9e9e\",\"#a8a8a8\",\"#b2b2b2\",\"#bcbcbc\",\"#c6c6c6\",\"#d0d0d0\",\"#dadada\",\"#e4e4e4\",\"#eeeeee\"]},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"fonts\",\n        name: \"Fonts\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"General Font Settings\",\n                settings: [\n                    {id: \"fontSize\", name: \"Base font size\", type: \"number\", value: 13, min: 4, max: 60, step: 0.5, range: true},\n                    {id: \"fontThicken\", name: \"Thicken fonts\", type: \"switch\", note: \"This currently only affects macOS.\", value: false},\n                    {id: \"fontFeature\", name: \"Font ligature settings\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"family\",\n                name: \"Font Families\",\n                settings: [\n                    {id: \"fontFamily\", name: \"Main font family\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBold\", name: \"Font family for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyItalic\", name: \"Font family for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBoldItalic\", name: \"Font family for bold italic text\", type: \"text\", value: \"\"},\n                    {id: \"windowTitleFontFamily\", name: \"Window title font family\", note: \"This is currently only supported on macOS\", type: \"text\", value: \"\"},\n                    {id: \"fontCodepointMap\", name: \"Unicode-specifc font mapping\", note: \"\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"styles\",\n                name: \"Font Styles\",\n                note: \"Named font styles for the fields above. For example for `Ioveska Heavy` you would use a style of `Heavy`. Alternately you can set the style to `false` to completely disable the style and revert to default style.\",\n                settings: [\n                    {id: \"fontStyle\", name: \"Main font style\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBold\", name: \"Font style for bold text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleItalic\", name: \"Font style for italic text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBoldItalic\", name: \"Font style for bold italic text\", type: \"text\", value: \"default\"},\n                ]\n            },\n            {\n                id: \"variations\",\n                name: \"Font Variations\",\n                note: \"Variable font specific settings, please only touch this if you know what you're doing!\",\n                settings: [\n                    {id: \"fontVariation\", name: \"Main font variant\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBold\", name: \"Font variant for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationItalic\", name: \"Font variant for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBoldItalic\", name: \"Font variant for bold italic text\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced Font & Cell Settings\",\n                note: \"The settings below have very little validation in Ghostty and can cause your terminal to become unusable. Be careful messing with any of these.\",\n                settings: [\n                    {id: \"adjustCellWidth\", name: \"Cell width adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCellHeight\", name: \"Cell height adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustFontBaseline\", name: \"Font baseline adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlinePosition\", name: \"Underline position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlineThickness\", name: \"Underline thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughPosition\", name: \"Strikethrough position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughThickness\", name: \"Strikethrough thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCursorThickness\", name: \"Cursor thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"graphemeWidthMethod\", name: \"Grapheme width calculation method\", type: \"dropdown\", value: \"unicode\", options: [\"unicode\", \"legacy\"]},\n                ]\n            },\n\n        ]\n    },\n    {\n        id: \"keybinds\",\n        name: \"Keybinds\",\n        groups: [\n            {\n                id: \"keybinds\",\n                name: \"\",\n                settings: [\n                    {id: \"keybind\", name: \"\", type: \"keybinds\", value: [\"super+page_up=scroll_page_up\", \"super+physical:four=goto_tab:4\", \"super+shift+down=jump_to_prompt:1\", \"super+shift+w=close_window\", \"super+shift+left_bracket=previous_tab\", \"super+alt+i=inspector:toggle\", \"super+w=close_surface\", \"super+physical:eight=goto_tab:8\", \"super+alt+right=goto_split:right\", \"shift+up=adjust_selection:up\", \"super+enter=toggle_fullscreen\", \"super+t=new_tab\", \"super+c=copy_to_clipboard\", \"super+shift+right_bracket=next_tab\", \"super+physical:one=goto_tab:1\", \"shift+left=adjust_selection:left\", \"super+equal=increase_font_size:1\", \"shift+page_up=adjust_selection:page_up\", \"super+physical:three=goto_tab:3\", \"super+d=new_split:right\", \"super+ctrl+down=resize_split:down,10\", \"shift+end=adjust_selection:end\", \"super+plus=increase_font_size:1\", \"super+q=quit\", \"super+home=scroll_to_top\", \"super+ctrl+left=resize_split:left,10\", \"super+ctrl+up=resize_split:up,10\", \"super+shift+up=jump_to_prompt:-1\", \"shift+right=adjust_selection:right\", \"super+comma=open_config\", \"super+shift+comma=reload_config\", \"super+minus=decrease_font_size:1\", \"shift+page_down=adjust_selection:page_down\", \"super+a=select_all\", \"alt+shift+equal=equalize_splits\", \"super+shift+enter=toggle_split_zoom\", \"super+alt+down=goto_split:bottom\", \"super+ctrl+f=toggle_fullscreen\", \"super+ctrl+right=resize_split:right,10\", \"super+alt+shift+j=write_scrollback_file:open\", \"shift+down=adjust_selection:down\", \"super+n=new_window\", \"super+alt+left=goto_split:left\", \"super+page_down=scroll_page_down\", \"super+alt+shift+w=close_all_windows\", \"super+alt+up=goto_split:top\", \"super+left_bracket=goto_split:previous\", \"super+physical:nine=goto_tab:9\", \"super+right_bracket=goto_split:next\", \"super+end=scroll_to_bottom\", \"super+shift+j=write_scrollback_file:paste\", \"super+shift+d=new_split:down\", \"super+zero=reset_font_size\", \"super+physical:five=goto_tab:5\", \"shift+home=adjust_selection:home\", \"super+physical:seven=goto_tab:7\", \"super+k=clear_screen\", \"super+physical:two=goto_tab:2\", \"super+physical:six=goto_tab:6\", \"super+v=paste_from_clipboard\"]}\n                ]\n            }\n        ]\n    },\n    {\n        id: \"mouse\",\n        name: \"Mouse\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"cursorClickToMove\", name: \"Enable click to move cursor\", type: \"switch\", value: true},\n                    {id: \"mouseHideWhileTyping\", name: \"Hide mouse while typing\", type: \"switch\", value: false},\n                    {id: \"mouseShiftCapture\", name: \"Allow shift with mouse click\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"always\", \"never\"]},\n                    // Technically the values should be min: 0.01, max: 10000, step: 0.01 but those are insane so instead I'll use sane defaults\n                    {id: \"mouseScrollMultiplier\", name: \"Mouse scroll multiplier\", type: \"number\", range: true, value: 1, min: 0.1, max: 10, step: 0.1},\n                    {id: \"focusFollowsMouse\", name: \"Focus splits on mouse move\", type: \"switch\", value: false},\n                    {id: \"clickRepeatInterval\", name: \"Milliseconds between multi-click\", note: \"A value of 0 means to use the operating system's default timing.\", type: \"number\", value: 0, min: 0, size: 4},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"gtk\",\n        name: \"GTK\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"class\", name: \"WM_CLASS class field\", note: \"This defaults to `com.mitchellh.ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"x11InstanceName\", name: \"WM_CLASS instance name\", note: \"This defaults to `ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"gtkSingleInstance\", name: \"Single-instance mode\", type: \"dropdown\", value: \"desktop\", options: [{name: \"detect\", value: \"desktop\"}, \"true\", \"false\"]},\n                    {id: \"gtkTitlebar\", name: \"Show titlebar\", type: \"switch\", value: true},\n                    {id: \"gtkTabsLocation\", name: \"Tab location\", type: \"dropdown\", value: \"top\", options: [\"top\", \"right\", \"bottom\", \"left\"]},\n                    {id: \"gtkWideTabs\", name: \"Use wide tabs\", type: \"switch\", value: true},\n                    {id: \"gtkAdwaita\", name: \"Enable adwaita theme support\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"linux\",\n        name: \"Linux\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"linuxCgroup\", name: \"Use dedicated cgroups\", type: \"dropdown\", value: \"single-instance\", options: [\"single-instance\", \"always\", \"never\"]},\n                    {id: \"linuxCgroupMemoryLimit\", name: \"Memory limit (bytes)\", type: \"number\", min: 0, max: 4294967295, size: 12},\n                    {id: \"linuxCgroupProcessLimit\", name: \"Max number of processes\", type: \"number\", min: 0, size: 5},\n                    {id: \"linuxCgroupHardFail\", name: \"Hard fail on startup\", type: \"switch\", value: false},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"macos\",\n        name: \"macOS\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"macosNonNativeFullscreen\", name: \"Use non-native fullscreen\", note: \"Tabs currently do not work with non-native fullscreen windows\", type: \"dropdown\", value: \"false\", options: [\"visible-menu\", \"true\", \"false\"]},\n                    {id: \"macosTitlebarStyle\", name: \"Titlebar style\", type: \"dropdown\", value: \"transparent\", options: [\"transparent\", \"native\", \"tabs\"]},\n                    {id: \"macosOptionAsAlt\", name: \"Use option key as alt key\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"left\", \"right\"]},\n                    {id: \"macosWindowShadow\", name: \"Show the window shadow\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n] as Panel[];\n```\n```typescript\nimport config from \"$lib/stores/config.svelte\";\n// error: 'config' is defined but never used. Allowed unused vars must match /^_/u.\nimport type {HexColor} from \"$lib/utils/colors\";\n\n```\n\n\n```svelte ghostty-config/src/lib/components/ColorPicker.svelte\n<script lang=\"ts\">\n    import {hexToRgb, hsvToRgb, rgbToHex, rgbToHsv, luminosity, type HexColor} from \"$lib/utils/colors\";\n\n\n    // eslint-disable-next-line prefer-const\n    let {defaultValue = \"#408080\", value = $bindable(defaultValue)}: {defaultValue?: HexColor, value?: HexColor|\"\"} = $props();\n\n    let {hue, saturation, value: brightness} = $state(rgbToHsv(...hexToRgb(value || defaultValue)));\n    const [red, green, blue] = $derived.by(() => hsvToRgb(hue, saturation, brightness));\n    const hueField = $derived(`rgb(${hsvToRgb(hue, 1, 1).join(\", \")})`);\n    const csgTop = $derived((1 - brightness) * 100);\n    const csgLeft = $derived(saturation * 100);\n    const hgLeft = $derived(hue * 100);\n    const hexValue = $derived(rgbToHex(...hsvToRgb(hue, saturation, brightness)));\n    const borderColor = $derived(`rgba(255, 255, 255, ${luminosity(value || defaultValue) * 0.0027451 + 0.3})`);\n    const isEmpty = $derived(value === \"\");\n\n    let tracked: HTMLDivElement|null;\n\n    function moveGrabber(event: MouseEvent) {\n        if (!tracked) return;\n\n        const mouseX = event.clientX;\n        const mouseY = event.clientY;\n        const trackedPos = tracked.getBoundingClientRect();\n\n        let xPercentage = (mouseX - trackedPos.x) / trackedPos.width * 100;\n        let yPercentage = (mouseY - trackedPos.y) / trackedPos.height * 100;\n\n        if (xPercentage > 100) xPercentage = 100;\n        if (xPercentage < 0) xPercentage = 0;\n        if (yPercentage > 100) yPercentage = 100;\n        if (yPercentage < 0) yPercentage = 0;\n\n        if (tracked.id === \"colorspace\") {\n            saturation = xPercentage / 100;\n            brightness = 1 - yPercentage / 100;\n        }\n        else if (tracked.id === \"huespace\") {\n            hue = xPercentage / 100;\n        }\n\n        // Update the customColor which should be bound for change\n        value = hexValue;\n    }\n\n    function mouseMove(event: MouseEvent) {\n        if (!tracked) return;\n        moveGrabber(event);\n    }\n\n    function mouseDown(event: MouseEvent) {\n        tracked = event.currentTarget as HTMLDivElement;\n        moveGrabber(event);\n    }\n</script>\n\n<svelte:document onmouseup={() => tracked = null} onmousemove={mouseMove} />\n\n<div class=\"picker-container\">\n    <div id=\"colorspace\" style:background={hueField} onmousedown={mouseDown} role=\"slider\" aria-valuenow={saturation} tabindex=\"0\">\n        <div class=\"colorspace-grabber\" style:top={csgTop + \"%\"} style:left={csgLeft + \"%\"}></div>\n    </div>\n\n    <div id=\"huespace\" onmousedown={mouseDown} role=\"slider\" aria-valuenow={hue} tabindex=\"0\">\n        <div class=\"huespace-grabber\" style:left={hgLeft + \"%\"}></div>\n    </div>\n\n    <div class=\"color-info\">\n        <div class=\"info-split\">\n            <div class=\"color-picked\" class:empty={isEmpty} style:background=\"rgb({red}, {green}, {blue})\" style:border-color={borderColor}></div>\n\n            <div class=\"color-values\">\n                <div class=\"hex-value\">{isEmpty ? \"-\" : hexValue}</div>\n\n                <div class=\"rgb-values\">\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : red}</div>\n                        <div>R</div>\n                    </div>\n\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : green}</div>\n                        <div>G</div>\n                    </div>\n\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : blue}</div>\n                        <div>B</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<style>\n.picker-container {\n    position: relative;\n    background: var(--bg-modal);\n    border: 1px solid black;\n    box-shadow: 0 0 20px -1px rgba(0,0,0,0.7);\n    padding: 12px;\n    border-radius: var(--radius-level-2);\n    overflow: hidden;\n}\n\n.picker-container::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    box-shadow: 0 0 1px white inset;\n    border-radius: inherit;\n    z-index: 2;\n    pointer-events: none;\n}\n\n#colorspace {\n    width: 240px;\n    height: 160px;\n    position: relative;\n    overflow: hidden;\n    border-radius: var(--radius-level-3);\n    border: 1px solid var(--border-input);\n    box-shadow: 0 0 3px 0px black;\n}\n\n#colorspace::before,\n#colorspace::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n#colorspace::before {\n    background: linear-gradient(to right, rgb(255, 255, 255), rgba(255, 255, 255, 0));\n    z-index: 1;\n}\n\n#colorspace::after {\n    background: linear-gradient(to top, rgb(0, 0, 0), rgba(0, 0, 0, 0));\n    z-index: 2;\n}\n\n.colorspace-grabber {\n    margin: 0;\n    padding: 0;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid black;\n    background: white;\n    position: relative;\n    transform: translate(-50%, -50%);\n    left: 100%;\n    pointer-events: none;\n    z-index: 3;\n}\n\n#huespace {\n    background: linear-gradient(to right, #ff0000 0%, #ffff00 17%, #00ff00 33%, #00ffff 50%, #0000ff 67%, #ff00ff 83%, #ff0000 100%);\n    margin: 15px 10px 10px 10px;\n    border-radius: 10px;\n    height: 10px;\n}\n\n.huespace-grabber {\n    background: white;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid black;\n    transform: translate(-50%, -1px);\n    left: 0%;\n    position: relative;\n    cursor: default;\n    pointer-events: none;\n}\n\n.color-info {\n    display: flex;\n    padding: 10px;\n    /* padding-top: 10px; */\n    width: 100%;\n    position: relative;\n}\n\n.info-split {\n    display: flex;\n    width: 100%;\n    gap: 20px;\n}\n\n.color-picked {\n    display: flex;\n    flex: 1 1 50%;\n    min-height: 100%;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 1);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 1) inset;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    box-shadow: 0 0 3px 0px black;\n}\n\n.color-values {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex: 50%;\n    gap: 12px;\n}\n\n.hex-value {\n    display: flex;\n    justify-content: center;\n    background: var(--bg-input-focus);\n    padding: 2px;\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    width: 100%;\n}\n\n.rgb-values {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n}\n\n.rgb-value {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 6px;\n}\n\n.value {\n    display: flex;\n    justify-content: center;\n    background: var(--bg-input-focus);\n    padding: 2px;\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    width: 30px;\n}\n\n\n.color-picked.empty {\n    background: var(--bg-input-focus)!important;\n    border-color: var(--border-input)!important;\n    box-shadow: none!important;\n    background: linear-gradient(to top left,\n             rgba(0,0,0,0) 0%,\n             rgba(0,0,0,0) calc(50% - 1px),\n             var(--color-danger) 50%,\n             rgba(0,0,0,0) calc(50% + 1px),\n             rgba(0,0,0,0) 100%),\n         linear-gradient(to top right,\n             rgba(0,0,0,0) 0%,\n             rgba(0,0,0,0) calc(50% - 1px),\n             var(--color-danger) 50%,\n             rgba(0,0,0,0) calc(50% + 1px),\n             rgba(0,0,0,0) 100%) var(--bg-input-focus)!important;\n    /* opacity: 0; */\n}\n\n/* .empty .hex-value, */\n/* .empty .value {\n    color: transparent;\n} */\n</style>\n```\n\n\n```svelte ghostty-config/src/lib/components/settings/Palette.svelte\n<script lang=\"ts\">\n    import type {HexColor} from \"$lib/utils/colors\";\n    import Color from \"./Color.svelte\";\n\n\n    const {value = $bindable([]), defaultValue}: {value: HexColor[], defaultValue: HexColor[]} = $props();\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as _, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={value[i]} size={40} label={(i + 1).toString()} />\n        {/each}\n    </div>\n</div>\n\n<style>\n.grid-container {\n    display: flex;\n    align-items: center;\n    flex: 1;\n}\n.color-grid {\n    display: grid;\n    /* width: 100%; */\n    flex: 1;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(32, 1fr);\n    /* grid-column-gap: 30px; */\n    justify-content: space-around;\n    justify-items: center;\n\n    /* align-items: center; */\n    /* align-content: space-evenly; */\n    grid-row-gap: 14px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\n\n```svelte ghostty-config/src/lib/components/settings/Dropdown.svelte\n<script lang=\"ts\">\n    type Props = {\n        value: string;\n        options: (string | {name: string, value: string})[]\n    };\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), options}: Props = $props();\n</script>\n\n<select bind:value>\n    {#each options as option, i (i)}\n        {#if typeof(option) === \"string\"}\n            <option value={option}>{option}</option>\n        {:else}\n            <option value={option.value}>{option.name}</option>\n        {/if}\n    {/each}\n</select>\n\n<style>\nselect {\n    background: var(--bg-level-2);\n    border: 0px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    outline: none;\n    color: inherit;\n    text-align: right;\n    max-width: 175px;\n}\n\nselect:focus {\n    background: var(--bg-input-focus);\n    outline: var(--border-input-focus);\n}\n</style>\n```\n\n\n```svelte ghostty-config/src/lib/components/settings/Color.svelte\n<script lang=\"ts\">\n    import {fade, fly} from \"svelte/transition\";\n    import {luminosity, isDark, type HexColor} from \"$lib/utils/colors\";\n    import ColorPicker from \"$lib/components/ColorPicker.svelte\";\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), size = 20, label = \"\", defaultValue}: {value: HexColor, size?: number, label?: string, defaultValue?: HexColor} = $props();\n    const borderColor = $derived(`rgba(255, 255, 255, ${luminosity(value) * 0.0027451 + 0.3})`);\n    const labelColor = $derived(isDark(value) ? `var(--font-color)` : \"black\");\n    let popoutOpen = $state(false);\n\n    function click(event: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n        popoutOpen = !popoutOpen;\n    }\n\n    function reset(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (defaultValue !== undefined) value = defaultValue;\n    }\n\n    function keydown(event: KeyboardEvent) {\n        if (!popoutOpen) return;\n        if (event.key === \"Escape\") click(event);\n    }\n</script>\n\n\n<svelte:document onkeydown={keydown} />\n\n<div class=\"color-wrap\" style:width=\"{size}px\" style:height=\"{size}px\" style:background-color={value} style:border-color={borderColor}>\n    {#if label}<span class=\"label\" style:color={labelColor}>{label}</span>{/if}\n    <input type=\"color\" bind:value style:width=\"{size}px\" style:height=\"{size}px\" onclick={click} oncontextmenu={reset} />\n</div>\n\n{#if popoutOpen}\n<div class=\"shadow\" onclick={click} transition:fade={{duration: 200}} role=\"none\"></div>\n<div class=\"picker-container\" transition:fly={{y: 32, duration: 200}}>\n    <ColorPicker bind:value />\n    <button class=\"close\" onclick={click} type=\"button\" title=\"Close\"><span>×</span></button>\n</div>\n{/if}\n\n\n<style>\n/* .color-wrap-container {\n    position: relative;\n} */\n.shadow {\n    background: rgba(0, 0, 0, 0.3);\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    z-index: 1;\n}\n\n.picker-container {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n}\n.picker-container .close {\n    background: var(--color-danger);\n    color: white;\n    position: absolute;\n    top: -4px;\n    right: -4px;\n    border-radius: 50%;\n    height: 16px;\n    width: 16px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.1rem;\n    padding: 0;\n    cursor: pointer;\n    border: 0;\n    outline: 0;\n}\n\n.picker-container .close span {\n    margin-top: -1.5px;\n}\n\n.color-wrap {\n    position: relative;\n    display: flex;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    outline: none;\n    overflow: hidden;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    /* box-shadow: 0 0 1px 0px rgba(255, 255, 255, 0.5) inset; */\n    box-shadow: 0 0 3px 0px black;\n    justify-content: center;\n    align-items: center;\n}\n\ninput {\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    width: 20px;\n    height: 20px;\n    border: 0;\n    padding: 0;\n    outline: none;\n    box-shadow: none;\n    opacity: 0;\n}\n\ninput:focus {\n    outline: var(--border-input-focus);\n}\n\n.label {\n    /* text-shadow: 0 0 5px black; */\n    font-weight: 600;\n}\n</style>\n```\n\n\n```ts ghostty-config/src/lib/data/settings.ts\nimport config from \"$lib/stores/config.svelte\";\nimport type {HexColor} from \"$lib/utils/colors\";\n\ninterface BaseSettingType {\n    id: string;\n    name: string;\n    note?: string;\n}\n\ninterface Panel extends BaseSettingType {\n    groups: Group[];\n}\n\ninterface Group extends BaseSettingType {\n    settings: (Switch | Text | Number | Dropdown | Color | Palette | Keybinds)[];\n    // type: \"group\";\n}\n\ntype SettingType = \"switch\" | \"number\" | \"dropdown\" | \"text\" | \"color\" | \"palette\" | \"keybinds\";\n\ninterface BaseSettingItem extends BaseSettingType {\n    type: SettingType;\n    value: unknown;\n}\n\ninterface Switch extends BaseSettingItem {\n    type: \"switch\";\n    value: boolean;\n}\n\ninterface Text extends BaseSettingItem {\n    type: \"text\";\n    value: string;\n}\n\ninterface Number extends BaseSettingItem {\n    type: \"number\";\n    value: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    size?: number;\n    range?: boolean;\n}\n\ninterface DropdownOption {\n    name: string;\n    value: string;\n}\n\ninterface Dropdown extends BaseSettingItem {\n    type: \"dropdown\";\n    value: \"string\";\n    options: (DropdownOption | string)[];\n}\n\ninterface Color extends BaseSettingItem {\n    value: HexColor;\n    type: \"color\";\n}\n\ninterface Palette extends BaseSettingItem {\n    value: HexColor[];\n    type: \"palette\";\n}\n\nexport type KeybindString = `${string}=${string}`;\ninterface Keybinds extends BaseSettingItem {\n    value: KeybindString[];\n    type: \"keybinds\";\n}\n\ninterface ThemeResponse {\n  \"type\": string;\n  \"encoding\": string;\n  \"size\": number;\n  \"name\": string;\n  \"path\": string;\n  \"content\": string;\n  \"sha\": string;\n  \"url\": string;\n  \"git_url\": string;\n  \"html_url\": string;\n  \"download_url\": string;\n  \"_links\": {\n    \"git\": string;\n    \"self\": string;\n    \"html\": string;\n  }\n}\n\ninterface ColorScheme {\n  palette: { [key: string]: string };\n  background?: string;\n  foreground?: string;\n  cursorColor?: string;\n  selectionBackground?: string;\n  selectionForeground?: string;\n}\n\nconst fetchThemeFiles = async () => {\n    const apiUrl = \"https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty\";\n\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const themeFiles = await response.json();\n\n    return {themeFiles};\n};\n\n// Function to convert raw string data into a JSON object\nexport const parseColorScheme = (input: string): ColorScheme => {\n  const colorScheme: ColorScheme = {palette: {}};\n\n  // Split input by lines\n  const lines = input.split(\"\\n\");\n\n  lines.forEach((line) => {\n    if (line.startsWith(\"palette\")) {\n      const [, rest] = line.split(\"palette =\").map(part => part.trim());\n\n      if (rest) {\n        const [paletteIndex, color] = rest.split(\"=\");\n        if (paletteIndex && color) {\n          colorScheme.palette[paletteIndex.trim()] = color.trim();\n        }\n      }\n    }\n    else {\n      const [key, value] = line.split(\"=\").map(part => part.trim());\n\n      switch (key) {\n        case \"background\":\n          colorScheme.background = `#${value}`;\n          break;\n        case \"foreground\":\n          colorScheme.foreground = `#${value}`;\n          break;\n        case \"cursor-color\":\n          colorScheme.cursorColor = `#${value}`;\n          break;\n        case \"selection-background\":\n          colorScheme.selectionBackground = `#${value}`;\n          break;\n        case \"selection-foreground\":\n          colorScheme.selectionForeground = `#${value}`;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n\n  return colorScheme;\n};\n\nexport const fetchColorScheme = async (theme: string) => {\n    const apiUrl = `https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty${theme ? \"/\" + theme : \"\"}`;\n\n    const response = await fetch(apiUrl,{\n        headers: {\n            Accept: \"application/vnd.github.raw+json\"\n        }\n    });\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const colorSchemeResponse = await response.text();\n\n    return {colorSchemeResponse};\n};\n\nconst {themeFiles} = await fetchThemeFiles();\nconst themeFileNames = themeFiles && themeFiles.map((file: ThemeResponse) => file.name);\n\n// const {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\n// const colorScheme = parseColorScheme(colorSchemeResponse);\n\nexport default [\n    {\n        id: \"application\",\n        name: \"Application\",\n        note: \"\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                // type: \"group\",\n                settings: [\n                    {id: \"title\", name: \"Static title for all windows\", type: \"text\", value: \"\"},\n                    {id: \"desktopNotifications\", name: \"Allow desktop notifications\", type: \"switch\", value: true},\n                    {id: \"configFile\", name: \"Additional config file\", type: \"text\", value: \"\"},\n                    {id: \"configDefaultFiles\", name: \"Load default config file\", type: \"switch\", value: true},\n                    {id: \"linkUrl\", name: \"Automatically link URLs\", note: \"Matching occurs while holding the control (Linux) or command (macOS) key.\", type: \"switch\", value: true},\n                ]\n            },\n            {\n                id: \"startup\",\n                name: \"Startup\",\n                // type: \"group\",\n                settings: [\n                    {id: \"command\", name: \"Command to run on launch\", type: \"text\", value: \"\"},\n                    {id: \"fullscreen\", name: \"Launch in fullscreen mode\", type: \"switch\", value: false},\n                    {id: \"initialWindow\", name: \"Show a window on startup\", type: \"switch\", value: true},\n                    {id: \"workingDirectory\", name: \"Directory to use after startup\", note: \"Special values of `home` and `inherit` are also allowed here.\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shutdown\",\n                name: \"Shutdown\",\n                // type: \"group\",\n                settings: [\n                    {id: \"waitAfterCommand\", name: \"Wait for input after command\", type: \"switch\", value: false},\n                    {id: \"abnormalCommandExitRuntime\", name: \"Abnormal command exit runtime\", type: \"number\", value: 250, min: 0, size: 5},\n                    {id: \"confirmCloseSurface\", name: \"Confirm when closing a surface\", type: \"switch\", value: true},\n                    {id: \"quitAfterLastWindowClosed\", name: \"Quit after closing last window\", type: \"switch\", value: false},\n                    {id: \"quitAfterLastWindowClosedDelay\", name: \"Delay before auto quitting\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shell\",\n                name: \"Shell Integration\",\n                // type: \"group\",\n                settings: [\n                    {id: \"shellIntegration\", name: \"Shell integration style\", type: \"dropdown\", value: \"detect\", options: [\"none\", \"detect\", \"bash\", \"elvish\", \"fish\", \"zsh\"]},\n                    {id: \"shellIntegrationFeatures\", name: \"Shell integration features\", note: \"The current available features are cursor, sudo, and title. Including one force enables it, prefixing it with `no-` force disables it, omitting it falls back to default.\", type: \"text\", value: \"cursor,no-sudo,title\"},\n                    {id: \"term\", name: \"TERM environment variable\", type: \"text\", value: \"xterm-ghostty\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced\",\n                note: \"You should only touch these settings if you know what you're doing, otherwise you could cause major issues with Ghostty!\",\n                // type: \"group\",\n                settings: [\n                    {id: \"scrollbackLimit\", name: \"Scrollback buffer size (bytes)\", note: \"This buffer exists completely in memory but is allocated lazily.\", type: \"number\", value: 10000000, min: 0, size: 10},\n                    {id: \"customShader\", name: \"Custom shader\", note: \"This matches the API of Shadertoy.\", type: \"text\", value: \"\"},\n                    {id: \"customShaderAnimation\", name: \"Allow shaders to animate\", type: \"dropdown\", value: \"false\", options: [\"false\", \"true\", \"always\"]},\n                    {id: \"enquiryResponse\", name: \"Reponse to ENQ\", type: \"text\", value: \"\"},\n                    {id: \"oscColorReportFormat\", name: \"OSC color report format\", type: \"dropdown\", value: \"16-bit\", options: [\"none\", \"8-bit\", \"16-bit\"]},\n                    {id: \"vtKamAllowed\", name: \"VT kam mode allowed\", note: \"If you don't know what this is, don't touch it!\", type: \"switch\", value: false},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"clipboard\",\n        name: \"Clipboard\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"clipboardRead\", name: \"Allow terminal to read clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"clipboardWrite\", name: \"Allow terminal to write clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"copyOnSelect\", name: \"Copy on select\", type: \"switch\", value: true},\n                    {id: \"clipboardTrimTrailingSpaces\", name: \"Trim trailing space on copy\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteProtection\", name: \"Confirm when pasting unsafely\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteBracketedSafe\", name: \"Mark bracketed paste as safe\", type: \"switch\", value: true},\n                    {id: \"imageStorageLimit\", name: \"Image buffer limit (bytes)\", type: \"number\", value: 320000000, min: 0, max: 4294967295, size: 12},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"window\",\n        name: \"Window\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"windowVsync\", name: \"Enable vsync\", type: \"switch\", value: true},\n                    {id: \"windowInheritWorkingDirectory\", name: \"Inherit working directory\", type: \"switch\", value: true},\n                    {id: \"windowInheritFontSize\", name: \"Inherit font size\", type: \"switch\", value: true},\n                    {id: \"windowColorspace\", name: \"Window colorspace\", type: \"dropdown\", value: \"srgb\", options: [\"srgb\", \"display-p3\"]},\n                    {id: \"windowSaveState\", name: \"Save window state\", type: \"dropdown\", value: \"default\", options: [\"default\", \"never\", \"always\"]},\n                    // maybe move to application?\n                    {id: \"windowNewTabPosition\", name: \"New tab position\", type: \"dropdown\", value: \"current\", options: [\"current\", \"end\"]},\n                ]\n            },\n            {\n                id: \"appearance\",\n                name: \"Appearance\",\n                settings: [\n                    {id: \"windowTheme\", name: \"Window theme\", type: \"dropdown\", value: \"auto\", options: [\"auto\", \"system\", \"light\", \"dark\"]},\n                    {id: \"windowDecoration\", name: \"Enable native frames\", type: \"switch\", value: true},\n                    {id: \"windowPaddingX\", name: \"Horizontal window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingY\", name: \"Vertical window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingBalance\", name: \"Auto-balance window padding\", type: \"switch\", value: false},\n                    {id: \"windowPaddingColor\", name: \"Window padding color\", type: \"dropdown\", value: \"extend\", options: [\"background\", \"extend\", \"extend-always\"]},\n\n                    // maybe move to colors\n                    {id: \"backgroundOpacity\", name: \"Background opacity\", type: \"number\", range: true, value: 1, min: 0, max: 1, step: 0.01},\n                    {id: \"backgroundBlurRadius\", name: \"Background blur radius\", note: \"A value of 20 is reasonable for a good looking blur, going beyond that can cause rendering and performance issues.\", type: \"number\", range: true, value: 0, min: 0, max: 50, step: 1},\n                    {id: \"unfocusedSplitOpacity\", name: \"Unfocused split opacity\", type: \"number\", range: true, value: 0.7, min: 0.15, max: 1, step: 0.01},\n                    {id: \"unfocusedSplitFill\", name: \"Unfocused split fill color\", type: \"color\", value: \"\"},\n                ]\n            },\n            {\n                id: \"resize\",\n                name: \"Sizing & Resizing\",\n                settings: [\n                    {id: \"windowHeight\", name: \"Initial window height\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 4, step: 1, size: 4},\n                    {id: \"windowWidth\", name: \"Initial window width\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 10, step: 1, size: 4},\n                    {id: \"windowStepResize\", name: \"Resize in grid cell increments\", type: \"switch\", value: false},\n                    {id: \"resizeOverlay\", name: \"Show resize overlays\", type: \"dropdown\", value: \"after-first\", options: [\"always\", \"never\", \"after-first\"]},\n                    {id: \"resizeOverlayPosition\", name: \"Resize overlay position\", type: \"dropdown\", value: \"center\", options: [\"center\", \"top-left\", \"top-center\", \"top-right\", \"bottom-left\", \"bottom-center\", \"bottom-right\"]},\n                    {id: \"resizeOverlayDuration\", name: \"Show resize overlay time\", type: \"text\", value: \"750ms\"},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"colors\",\n        name: \"Colors\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                settings: [\n                    {\n                        id: \"theme\",\n                        name: \"Color theme\",\n                        note: \"Any colors selected after setting this will overwrite the theme's colors.\",\n                        type: \"dropdown\",\n                        value: \"\",\n                        options: [\"\", ...themeFileNames]\n                    },\n                    {id: \"boldIsBright\", name: \"Bold text uses bright colors\", type: \"switch\", value: false},\n                    {id: \"minimumContrast\", name: \"Minimum contrast\", type: \"number\", value: 1, range: true, min: 1, max: 21, step: 0.1},\n                ]\n            },\n            {\n                id: \"base\",\n                name: \"Base Colors\",\n                note: \"The preview here shows selected text in the second line of the command output.\",\n                settings: [\n                    {id: \"background\", name: \"Background color\", type: \"color\", value: \"#282c34\"},\n                    {id: \"foreground\", name: \"Foreground color\", type: \"color\", value: \"#ffffff\"},\n                    {id: \"selectionBackground\", name: \"Selection background color\", type: \"color\", value: \"\"},\n                    {id: \"selectionForeground\", name: \"Selection foreground color\", type: \"color\", value: \"\"},\n                    {id: \"selectionInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause selections to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                ]\n            },\n            {\n                id: \"cursor\",\n                name: \"Cursor\",\n                note: \"The cursor in this preview blinks on and off at 1 second intervals for emphasis, it may not match what you see in Ghostty!\",\n                settings: [\n                    {id: \"cursorColor\", name: \"Cursor color\", type: \"color\", value: \"\"},\n                    {id: \"cursorText\", name: \"Text color under cursor\", type: \"color\", value: \"\"},\n                    {id: \"cursorInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause cells under the cursor to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                    {id: \"cursorOpacity\", name: \"Cursor opacity\", type: \"number\", value: 1, range: true, min: 0, max: 1, step: 0.05},\n                    {id: \"cursorStyle\", name: \"Cursor style\", type: \"dropdown\", value: \"block\", options: [\"block\", \"bar\", \"underline\", {value: \"block_hollow\", name: \"hollow block\"}]},\n                    {id: \"cursorStyleBlink\", name: \"Cursor blink style\", note: \"The `default` option defers to DEC mode 12 to determine blinking state.\", type: \"dropdown\", value: \"\", options: [\"true\", \"false\", {value: \"\", name: \"default\"}]},\n                ]\n            },\n            {\n                id: \"palette\",\n                name: \"Color Palette\",\n                note: \"The first 16 colors are the most commonly displayed colors in the terminal.\\n\\nColors 1-8 are typically black, red, green, yellow, blue, magenta, cyan, and white.\\nColors 9-16 are typically \\\"brighter\\\" variants of these colors.\",\n                settings: [\n                    {id: \"palette\", name: \"\", type: \"palette\", value: [\"#1d1f21\",\"#cc6666\",\"#b5bd68\",\"#f0c674\",\"#81a2be\",\"#b294bb\",\"#8abeb7\",\"#c5c8c6\",\"#666666\",\"#d54e53\",\"#b9ca4a\",\"#e7c547\",\"#7aa6da\",\"#c397d8\",\"#70c0b1\",\"#eaeaea\",\"#000000\",\"#00005f\",\"#000087\",\"#0000af\",\"#0000d7\",\"#0000ff\",\"#005f00\",\"#005f5f\",\"#005f87\",\"#005faf\",\"#005fd7\",\"#005fff\",\"#008700\",\"#00875f\",\"#008787\",\"#0087af\",\"#0087d7\",\"#0087ff\",\"#00af00\",\"#00af5f\",\"#00af87\",\"#00afaf\",\"#00afd7\",\"#00afff\",\"#00d700\",\"#00d75f\",\"#00d787\",\"#00d7af\",\"#00d7d7\",\"#00d7ff\",\"#00ff00\",\"#00ff5f\",\"#00ff87\",\"#00ffaf\",\"#00ffd7\",\"#00ffff\",\"#5f0000\",\"#5f005f\",\"#5f0087\",\"#5f00af\",\"#5f00d7\",\"#5f00ff\",\"#5f5f00\",\"#5f5f5f\",\"#5f5f87\",\"#5f5faf\",\"#5f5fd7\",\"#5f5fff\",\"#5f8700\",\"#5f875f\",\"#5f8787\",\"#5f87af\",\"#5f87d7\",\"#5f87ff\",\"#5faf00\",\"#5faf5f\",\"#5faf87\",\"#5fafaf\",\"#5fafd7\",\"#5fafff\",\"#5fd700\",\"#5fd75f\",\"#5fd787\",\"#5fd7af\",\"#5fd7d7\",\"#5fd7ff\",\"#5fff00\",\"#5fff5f\",\"#5fff87\",\"#5fffaf\",\"#5fffd7\",\"#5fffff\",\"#870000\",\"#87005f\",\"#870087\",\"#8700af\",\"#8700d7\",\"#8700ff\",\"#875f00\",\"#875f5f\",\"#875f87\",\"#875faf\",\"#875fd7\",\"#875fff\",\"#878700\",\"#87875f\",\"#878787\",\"#8787af\",\"#8787d7\",\"#8787ff\",\"#87af00\",\"#87af5f\",\"#87af87\",\"#87afaf\",\"#87afd7\",\"#87afff\",\"#87d700\",\"#87d75f\",\"#87d787\",\"#87d7af\",\"#87d7d7\",\"#87d7ff\",\"#87ff00\",\"#87ff5f\",\"#87ff87\",\"#87ffaf\",\"#87ffd7\",\"#87ffff\",\"#af0000\",\"#af005f\",\"#af0087\",\"#af00af\",\"#af00d7\",\"#af00ff\",\"#af5f00\",\"#af5f5f\",\"#af5f87\",\"#af5faf\",\"#af5fd7\",\"#af5fff\",\"#af8700\",\"#af875f\",\"#af8787\",\"#af87af\",\"#af87d7\",\"#af87ff\",\"#afaf00\",\"#afaf5f\",\"#afaf87\",\"#afafaf\",\"#afafd7\",\"#afafff\",\"#afd700\",\"#afd75f\",\"#afd787\",\"#afd7af\",\"#afd7d7\",\"#afd7ff\",\"#afff00\",\"#afff5f\",\"#afff87\",\"#afffaf\",\"#afffd7\",\"#afffff\",\"#d70000\",\"#d7005f\",\"#d70087\",\"#d700af\",\"#d700d7\",\"#d700ff\",\"#d75f00\",\"#d75f5f\",\"#d75f87\",\"#d75faf\",\"#d75fd7\",\"#d75fff\",\"#d78700\",\"#d7875f\",\"#d78787\",\"#d787af\",\"#d787d7\",\"#d787ff\",\"#d7af00\",\"#d7af5f\",\"#d7af87\",\"#d7afaf\",\"#d7afd7\",\"#d7afff\",\"#d7d700\",\"#d7d75f\",\"#d7d787\",\"#d7d7af\",\"#d7d7d7\",\"#d7d7ff\",\"#d7ff00\",\"#d7ff5f\",\"#d7ff87\",\"#d7ffaf\",\"#d7ffd7\",\"#d7ffff\",\"#ff0000\",\"#ff005f\",\"#ff0087\",\"#ff00af\",\"#ff00d7\",\"#ff00ff\",\"#ff5f00\",\"#ff5f5f\",\"#ff5f87\",\"#ff5faf\",\"#ff5fd7\",\"#ff5fff\",\"#ff8700\",\"#ff875f\",\"#ff8787\",\"#ff87af\",\"#ff87d7\",\"#ff87ff\",\"#ffaf00\",\"#ffaf5f\",\"#ffaf87\",\"#ffafaf\",\"#ffafd7\",\"#ffafff\",\"#ffd700\",\"#ffd75f\",\"#ffd787\",\"#ffd7af\",\"#ffd7d7\",\"#ffd7ff\",\"#ffff00\",\"#ffff5f\",\"#ffff87\",\"#ffffaf\",\"#ffffd7\",\"#ffffff\",\"#080808\",\"#121212\",\"#1c1c1c\",\"#262626\",\"#303030\",\"#3a3a3a\",\"#444444\",\"#4e4e4e\",\"#585858\",\"#626262\",\"#6c6c6c\",\"#767676\",\"#808080\",\"#8a8a8a\",\"#949494\",\"#9e9e9e\",\"#a8a8a8\",\"#b2b2b2\",\"#bcbcbc\",\"#c6c6c6\",\"#d0d0d0\",\"#dadada\",\"#e4e4e4\",\"#eeeeee\"]},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"fonts\",\n        name: \"Fonts\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"General Font Settings\",\n                settings: [\n                    {id: \"fontSize\", name: \"Base font size\", type: \"number\", value: 13, min: 4, max: 60, step: 0.5, range: true},\n                    {id: \"fontThicken\", name: \"Thicken fonts\", type: \"switch\", note: \"This currently only affects macOS.\", value: false},\n                    {id: \"fontFeature\", name: \"Font ligature settings\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"family\",\n                name: \"Font Families\",\n                settings: [\n                    {id: \"fontFamily\", name: \"Main font family\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBold\", name: \"Font family for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyItalic\", name: \"Font family for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBoldItalic\", name: \"Font family for bold italic text\", type: \"text\", value: \"\"},\n                    {id: \"windowTitleFontFamily\", name: \"Window title font family\", note: \"This is currently only supported on macOS\", type: \"text\", value: \"\"},\n                    {id: \"fontCodepointMap\", name: \"Unicode-specifc font mapping\", note: \"\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"styles\",\n                name: \"Font Styles\",\n                note: \"Named font styles for the fields above. For example for `Ioveska Heavy` you would use a style of `Heavy`. Alternately you can set the style to `false` to completely disable the style and revert to default style.\",\n                settings: [\n                    {id: \"fontStyle\", name: \"Main font style\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBold\", name: \"Font style for bold text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleItalic\", name: \"Font style for italic text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBoldItalic\", name: \"Font style for bold italic text\", type: \"text\", value: \"default\"},\n                ]\n            },\n            {\n                id: \"variations\",\n                name: \"Font Variations\",\n                note: \"Variable font specific settings, please only touch this if you know what you're doing!\",\n                settings: [\n                    {id: \"fontVariation\", name: \"Main font variant\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBold\", name: \"Font variant for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationItalic\", name: \"Font variant for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBoldItalic\", name: \"Font variant for bold italic text\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced Font & Cell Settings\",\n                note: \"The settings below have very little validation in Ghostty and can cause your terminal to become unusable. Be careful messing with any of these.\",\n                settings: [\n                    {id: \"adjustCellWidth\", name: \"Cell width adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCellHeight\", name: \"Cell height adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustFontBaseline\", name: \"Font baseline adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlinePosition\", name: \"Underline position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlineThickness\", name: \"Underline thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughPosition\", name: \"Strikethrough position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughThickness\", name: \"Strikethrough thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCursorThickness\", name: \"Cursor thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"graphemeWidthMethod\", name: \"Grapheme width calculation method\", type: \"dropdown\", value: \"unicode\", options: [\"unicode\", \"legacy\"]},\n                ]\n            },\n\n        ]\n    },\n    {\n        id: \"keybinds\",\n        name: \"Keybinds\",\n        groups: [\n            {\n                id: \"keybinds\",\n                name: \"\",\n                settings: [\n                    {id: \"keybind\", name: \"\", type: \"keybinds\", value: [\"super+page_up=scroll_page_up\", \"super+physical:four=goto_tab:4\", \"super+shift+down=jump_to_prompt:1\", \"super+shift+w=close_window\", \"super+shift+left_bracket=previous_tab\", \"super+alt+i=inspector:toggle\", \"super+w=close_surface\", \"super+physical:eight=goto_tab:8\", \"super+alt+right=goto_split:right\", \"shift+up=adjust_selection:up\", \"super+enter=toggle_fullscreen\", \"super+t=new_tab\", \"super+c=copy_to_clipboard\", \"super+shift+right_bracket=next_tab\", \"super+physical:one=goto_tab:1\", \"shift+left=adjust_selection:left\", \"super+equal=increase_font_size:1\", \"shift+page_up=adjust_selection:page_up\", \"super+physical:three=goto_tab:3\", \"super+d=new_split:right\", \"super+ctrl+down=resize_split:down,10\", \"shift+end=adjust_selection:end\", \"super+plus=increase_font_size:1\", \"super+q=quit\", \"super+home=scroll_to_top\", \"super+ctrl+left=resize_split:left,10\", \"super+ctrl+up=resize_split:up,10\", \"super+shift+up=jump_to_prompt:-1\", \"shift+right=adjust_selection:right\", \"super+comma=open_config\", \"super+shift+comma=reload_config\", \"super+minus=decrease_font_size:1\", \"shift+page_down=adjust_selection:page_down\", \"super+a=select_all\", \"alt+shift+equal=equalize_splits\", \"super+shift+enter=toggle_split_zoom\", \"super+alt+down=goto_split:bottom\", \"super+ctrl+f=toggle_fullscreen\", \"super+ctrl+right=resize_split:right,10\", \"super+alt+shift+j=write_scrollback_file:open\", \"shift+down=adjust_selection:down\", \"super+n=new_window\", \"super+alt+left=goto_split:left\", \"super+page_down=scroll_page_down\", \"super+alt+shift+w=close_all_windows\", \"super+alt+up=goto_split:top\", \"super+left_bracket=goto_split:previous\", \"super+physical:nine=goto_tab:9\", \"super+right_bracket=goto_split:next\", \"super+end=scroll_to_bottom\", \"super+shift+j=write_scrollback_file:paste\", \"super+shift+d=new_split:down\", \"super+zero=reset_font_size\", \"super+physical:five=goto_tab:5\", \"shift+home=adjust_selection:home\", \"super+physical:seven=goto_tab:7\", \"super+k=clear_screen\", \"super+physical:two=goto_tab:2\", \"super+physical:six=goto_tab:6\", \"super+v=paste_from_clipboard\"]}\n                ]\n            }\n        ]\n    },\n    {\n        id: \"mouse\",\n        name: \"Mouse\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"cursorClickToMove\", name: \"Enable click to move cursor\", type: \"switch\", value: true},\n                    {id: \"mouseHideWhileTyping\", name: \"Hide mouse while typing\", type: \"switch\", value: false},\n                    {id: \"mouseShiftCapture\", name: \"Allow shift with mouse click\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"always\", \"never\"]},\n                    // Technically the values should be min: 0.01, max: 10000, step: 0.01 but those are insane so instead I'll use sane defaults\n                    {id: \"mouseScrollMultiplier\", name: \"Mouse scroll multiplier\", type: \"number\", range: true, value: 1, min: 0.1, max: 10, step: 0.1},\n                    {id: \"focusFollowsMouse\", name: \"Focus splits on mouse move\", type: \"switch\", value: false},\n                    {id: \"clickRepeatInterval\", name: \"Milliseconds between multi-click\", note: \"A value of 0 means to use the operating system's default timing.\", type: \"number\", value: 0, min: 0, size: 4},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"gtk\",\n        name: \"GTK\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"class\", name: \"WM_CLASS class field\", note: \"This defaults to `com.mitchellh.ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"x11InstanceName\", name: \"WM_CLASS instance name\", note: \"This defaults to `ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"gtkSingleInstance\", name: \"Single-instance mode\", type: \"dropdown\", value: \"desktop\", options: [{name: \"detect\", value: \"desktop\"}, \"true\", \"false\"]},\n                    {id: \"gtkTitlebar\", name: \"Show titlebar\", type: \"switch\", value: true},\n                    {id: \"gtkTabsLocation\", name: \"Tab location\", type: \"dropdown\", value: \"top\", options: [\"top\", \"right\", \"bottom\", \"left\"]},\n                    {id: \"gtkWideTabs\", name: \"Use wide tabs\", type: \"switch\", value: true},\n                    {id: \"gtkAdwaita\", name: \"Enable adwaita theme support\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"linux\",\n        name: \"Linux\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"linuxCgroup\", name: \"Use dedicated cgroups\", type: \"dropdown\", value: \"single-instance\", options: [\"single-instance\", \"always\", \"never\"]},\n                    {id: \"linuxCgroupMemoryLimit\", name: \"Memory limit (bytes)\", type: \"number\", min: 0, max: 4294967295, size: 12},\n                    {id: \"linuxCgroupProcessLimit\", name: \"Max number of processes\", type: \"number\", min: 0, size: 5},\n                    {id: \"linuxCgroupHardFail\", name: \"Hard fail on startup\", type: \"switch\", value: false},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"macos\",\n        name: \"macOS\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"macosNonNativeFullscreen\", name: \"Use non-native fullscreen\", note: \"Tabs currently do not work with non-native fullscreen windows\", type: \"dropdown\", value: \"false\", options: [\"visible-menu\", \"true\", \"false\"]},\n                    {id: \"macosTitlebarStyle\", name: \"Titlebar style\", type: \"dropdown\", value: \"transparent\", options: [\"transparent\", \"native\", \"tabs\"]},\n                    {id: \"macosOptionAsAlt\", name: \"Use option key as alt key\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"left\", \"right\"]},\n                    {id: \"macosWindowShadow\", name: \"Show the window shadow\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n] as Panel[];\n```\n```typescript\nimport config from \"$lib/stores/config.svelte\";\n// error: 'config' is defined but never used. Allowed unused vars must match /^_/u.\nimport type {HexColor} from \"$lib/utils/colors\";\n\n```\n\n\n```svelte ghostty-config/src/routes/app/import-export/+page.svelte\n<script lang=\"ts\">\n    import Page from \"$lib/views/Page.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n    import {diff, load} from \"$lib/stores/config.svelte\";\n    import parse from \"$lib/utils/parse\";\n\n    let pasteConfigText = $state(\"Clipboard\");\n    let copyConfigText = $state(\"Clipboard\");\n\n\n    // TODO: move alert() to real modals\n    function loadConfig(candidate: string) {\n        let parsed;\n        try {\n            parsed = parse(candidate);\n        }\n        catch (parseError) {\n            // eslint-disable-next-line no-console\n            console.error(parseError);\n            alert(\"Something went wrong trying to parse your config. Please open an issue on GitHub!\");\n            return;\n        }\n\n        try {\n            load(parsed);\n        }\n        catch (loadError) {\n            // eslint-disable-next-line no-console\n            console.error(loadError);\n            alert(\"Something went wrong trying to load your parsed config. Please open an issue on GitHub!\");\n            return;\n        }\n    }\n\n    function pasteConfig() {\n        if (pasteConfigText === \"Pasted!\") return;\n        window.navigator.clipboard.readText().then(text => {\n            pasteConfigText = \"Pasted!\";\n            setTimeout(() => (pasteConfigText = \"Clipboard\"), 3000);\n            loadConfig(text);\n        });\n    }\n\n    let filePicker: HTMLInputElement;\n    function openFilePicker() {\n        filePicker.click();\n    }\n\n    function selectFile() {\n        const file = filePicker.files![0];\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", (event) => {\n            const loadedText = event.target?.result?.toString();\n            if (loadedText) loadConfig(loadedText);\n        });\n        reader.readAsText(file);\n    }\n\n    // Move to module\n    function stringifyConfig() {\n        const config = diff();\n        const lines = [\"# Config generated by Ghostty Config\\n\"];\n        for (const key in config) {\n            if (!Array.isArray(config[key])) {\n                lines.push(`${key} = ${config[key]}`);\n            }\n            else {\n                for (let i = 0; i < config[key].length; i++) {\n                    lines.push(`${key} = ${config[key][i]}`);\n                }\n            }\n        }\n\n        return lines.join(\"\\n\");\n    }\n\n    function copyConfig() {\n        if (copyConfigText === \"Copied!\") return;\n        const config = stringifyConfig();\n        window.navigator.clipboard.writeText(config).then(() => {\n            copyConfigText = \"Copied!\";\n            setTimeout(() => (copyConfigText = \"Clipboard\"), 3000);\n        });\n    }\n\n    function downloadConfig() {\n        const file = new File([stringifyConfig()], \"config\", {type: \"text/plain\"});\n        const link = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        link.href = url;\n        link.download = file.name;\n        link.style.display = \"none\";\n        document.body.append(link);\n        link.click();\n        link.remove();\n        URL.revokeObjectURL(url);\n    }\n</script>\n\n<Page title=\"Import & Export\">\n    <Group flex={1}>\n        <div class=\"preview\">\n            <div class=\"row p2\"># You can preview the config here</div>\n            <div class=\"row\">&nbsp;</div>\n\n            {#each Object.entries(diff()) as [key, value], i (i)}\n                {#if Array.isArray(value)}\n                    {#each value as val, v (v)}\n                    <div class=\"row\"><span class=\"p4\">{key}</span> = <span class=\"p5\">{val}</span></div>\n                    {/each}\n                {:else}\n                    <div class=\"row\"><span class=\"p4\">{key}</span> = <span class=\"p5\">{value}</span></div>\n                {/if}\n            {/each}\n        </div>\n        <Separator />\n        <Item name=\"Import\">\n            <div class=\"button-group\">\n                <button type=\"button\" onclick={pasteConfig} title=\"Paste\">{pasteConfigText}</button>\n                <input id=\"config-input\" type=\"file\" onchange={selectFile} bind:this={filePicker} />\n                <button type=\"button\" onclick={openFilePicker} title=\"Upload\">File...</button>\n            </div>\n        </Item>\n        <Separator />\n        <Item name=\"Export\">\n            <div class=\"button-group\">\n                <button type=\"button\" onclick={copyConfig} title=\"Copy\">{copyConfigText}</button>\n                <button type=\"button\" onclick={downloadConfig} title=\"Download\">File...</button>\n            </div>\n        </Item>\n    </Group>\n</Page>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    min-height: 200px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n    flex: 1;\n    user-select: text;\n}\n\n.preview .row {\n    display: flex;\n    white-space: pre;\n    flex: 1;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n\n/* .bold {font-weight: 700;} */\n\n/* .fg {color: var(--config-fg);} */\n\n/* .p0 {color: var(--config-palette-0);} */\n/* .p1 {color: var(--config-palette-1);} */\n.p2 {color: var(--config-palette-2);}\n/* .p3 {color: var(--config-palette-3);} */\n.p4 {color: var(--config-palette-4);}\n.p5 {color: var(--config-palette-5);}\n/* .p6 {color: var(--config-palette-6);}\n.p7 {color: var(--config-palette-7);}\n.p8 {color: var(--config-palette-8);}\n.p9 {color: var(--config-palette-9);}\n.p10 {color: var(--config-palette-10);}\n.p11 {color: var(--config-palette-11);}\n.p12 {color: var(--config-palette-12);} */\n/* .p13 {color: var(--config-palette-13);}\n.p14 {color: var(--config-palette-14);}\n.p15 {color: var(--config-palette-15);} */\n\n\n#config-input {\n    display: none;\n}\n\n.button-group {\n    display: flex;\n    gap: 12px;\n}\n\n/* TODO: extract to a separate component for usage elsewhere */\nbutton {\n    background: var(--bg-basic-button);\n    border-radius: var(--radius-level-4);\n    border: 0;\n    color: inherit;\n    padding: 2px 10px;\n    font-size: 1.1rem;\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0.5);\n}\n\nbutton:active {\n    filter: brightness(115%);\n}\n</style>\n```\n\n\n```svelte ghostty-config/src/routes/+layout.svelte\n<script lang=\"ts\">\n    import Gap from \"$lib/components/Gap.svelte\";\n    import Tab from \"$lib/components/Tab.svelte\";\n    import User from \"$lib/components/User.svelte\";\n    import \"../app.css\";\n\n    import application from \"$lib/images/tabs/application.webp\";\n    import clipboard from \"$lib/images/tabs/clipboard.webp\";\n    import window from \"$lib/images/tabs/window.webp\";\n\n    import colors from \"$lib/images/tabs/colors.webp\";\n    import fonts from \"$lib/images/tabs/fonts.webp\";\n\n    import keybinds from \"$lib/images/tabs/keybinds.webp\";\n    import mouse from \"$lib/images/tabs/mouse.webp\";\n\n    import gtk from \"$lib/images/tabs/gtk.svg\";\n    import linux from \"$lib/images/tabs/linux.webp\";\n    import macos from \"$lib/images/tabs/macos.webp\";\n\n    import github from \"$lib/images/tabs/github.svg\";\n    import ghostty from \"$lib/images/tabs/ghostty.webp\";\n\n    import config from \"$lib/stores/config.svelte\";\n    import app from \"$lib/stores/state.svelte\";\n\n    const cssConfigVars = $derived.by(() => {\n        let str = \"\";\n\n        const add = (key: string, val: string) => str += `--config-${key}: ${val};`;\n\n        // Add the base colors\n        add(\"bg\", config.background);\n        add(\"fg\", config.foreground);\n        add(\"selection-bg\", config.selectionInvertFgBg ? config.foreground : config.selectionBackground || config.foreground);\n        add(\"selection-fg\", config.selectionInvertFgBg ? config.background : config.selectionForeground || config.background);\n\n        // Add the palette colors\n        const paletteSize = 16; // config.palette.length;\n        for (let c = 0; c < paletteSize; c++) add(`palette-${c}`, config.palette[c]);\n\n        // TODO: consider honoring separate fonts for bold/italic and such in previews\n        // Add font settings\n        add(\"font-family\", config.fontFamily || \"monospace\");\n        add(\"font-size\", `${config.fontSize}px`);\n\n        return str;\n    });\n\n    const {children} = $props();\n\n\n\n\n    const htmlTitle = $derived.by(() => {\n        const name = app.title === \"Ghostty Config\" ? \"\" : app.title;\n        let title = \"Ghostty Config\";\n        if (name) title = `${title} - ${name}`;\n        return title;\n    });\n</script>\n\n<svelte:head>\n    <title>{htmlTitle}</title>\n</svelte:head>\n\n<!-- eslint-disable-next-line svelte/require-optimized-style-attribute -->\n<div class=\"app-window\" style={cssConfigVars}>\n    <div id=\"sidebar\">\n        <div class=\"sidebar-header\">\n            <div class=\"window-actions-container\">\n                <div class=\"window-actions\">\n                    <div class=\"window-dot\"><span>×</span></div>\n                    <div class=\"window-dot\"><span>-</span></div>\n                    <div class=\"window-dot\"><span>+</span></div>\n                </div>\n            </div>\n        </div>\n        <nav id=\"categories\">\n            <User route=\"/\" />\n            <Gap />\n            <Tab route=\"/settings/application\">\n                {#snippet icon()}<img src={application} alt=\"Application Settings\" />{/snippet}\n                Application\n            </Tab>\n            <Tab route=\"/settings/clipboard\">\n                {#snippet icon()}<img src={clipboard} alt=\"Clipboard Settings\" />{/snippet}\n                Clipboard\n            </Tab>\n            <Tab route=\"/settings/window\">\n                {#snippet icon()}<img src={window} alt=\"Window Settings\" />{/snippet}\n                Window\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/colors\">\n                {#snippet icon()}<img src={colors} alt=\"Color Settings\" />{/snippet}\n                Colors\n            </Tab>\n            <Tab route=\"/settings/fonts\">\n                {#snippet icon()}<img src={fonts} alt=\"Font Settings\" />{/snippet}\n                Fonts\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/keybinds\">\n                {#snippet icon()}<img src={keybinds} alt=\"Keybind Settings\" />{/snippet}\n                Keybinds\n            </Tab>\n            <Tab route=\"/settings/mouse\">\n                {#snippet icon()}<img src={mouse} alt=\"Mouse Settings\" />{/snippet}\n                Mouse\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/gtk\">\n                {#snippet icon()}<div class=\"icon-wrapper\"><img src={gtk} alt=\"GTK Settings\" /></div>{/snippet}\n                GTK\n            </Tab>\n            <Tab route=\"/settings/linux\">\n                {#snippet icon()}<img src={linux} alt=\"Linux Settings\" />{/snippet}\n                Linux\n            </Tab>\n            <Tab route=\"/settings/macos\">\n                {#snippet icon()}<img src={macos} alt=\"MacOS Settings\" />{/snippet}\n                macOS\n            </Tab>\n            <Gap expand={true} />\n            <Tab route=\"https://github.com/zerebos/ghostty-config\">\n                {#snippet icon()}<div class=\"icon-wrapper github\"><img src={github} alt=\"Ghostty Config GitHub\" /></div>{/snippet}\n                GitHub\n            </Tab>\n            <Tab route=\"https://github.com/ghostty-org\">\n                {#snippet icon()}<img src={ghostty} alt=\"Ghostty GitHub\" />{/snippet}\n                Ghostty\n            </Tab>\n        </nav>\n    </div>\n    <div id=\"content-view\">\n        {@render children()}\n    </div>\n\n</div>\n\n<!-- <svelte:window onmouseup={onMouseUp} onmousemove={onMouseMove} /> -->\n\n<style>\n.app-window {\n    user-select: none;\n    /* cursor: move; */\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    height: 100%;\n    /* margin: 20px auto; */\n    width: 90%;\n    max-width: var(--app-width);\n    height: var(--app-height);\n    border: 1px solid var(--border-level-1);\n    /* box-shadow: 0 0 1px white inset; */\n    box-shadow: 0 0 20px -1px rgba(0,0,0,0.7);\n    border-radius: var(--radius-level-1);\n    overflow: hidden;\n}\n\n/* .app-window .draggable {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 50px;\n    cursor: move;\n    z-index: 10;\n} */\n\n/* TODO: try this without pseudoelement using outline */\n.app-window::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    box-shadow: 0 0 1px white inset;\n    border-radius: inherit;\n    z-index: 2;\n    pointer-events: none;\n}\n\n#sidebar {\n    width: var(--sidebar-width);\n    /* black: #272329; white: #544F57; */\n    background: rgba(50, 46, 52, 0.7);\n    backdrop-filter: blur(10px);\n    padding: 5px;\n    border-right: 2px solid var(--border-level-1);\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebar-header {\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebar-header .window-actions-container {\n    display: flex;\n    padding: 15px 0 0 15px;\n    margin-bottom: 20px;\n}\n\n.sidebar-header .window-actions {\n    display: flex;\n    gap: 8px;\n}\n\n.app-window .window-dot {\n    border-radius: 50%;\n    /* display: inline-block; */\n    height: 12px;\n    /* margin-right: 6px; */\n    /* margin-top: 4px; */\n    width: 12px;\n    border: 0;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    color: rgba(0, 0, 0, 0);\n}\n\n.window-dot span {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: -3px;\n    margin-right: -1px;\n}\n\n.app-window .window-actions:hover .window-dot {\n    /* background: white!important; */\n    /* cursor: pointer; */\n    color: rgba(0, 0, 0, 0.5);\n}\n\n.window-dot {\n    background-color: var(--color-warning);\n}\n\n.window-dot:first-of-type {\n    background-color: var(--color-danger);\n}\n\n.window-dot:last-of-type {\n    background-color: var(--color-success);\n}\n\n#content-view {\n    background: var(--bg-level-1);\n    flex: 1;\n    display: flex;\n    min-width: 0;\n}\n\n\n\n#categories {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    padding: 10px;\n}\n\n#categories img {\n    width: 100%;\n}\n\n#categories .icon-wrapper {\n    background: linear-gradient(#D3E3E9, #908F8C);\n    width: 20px;\n    height: 20px;\n    border-radius: var(--radius-level-4);\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#categories .icon-wrapper img {\n    height: 14px;\n    width: 14px;\n}\n\n#categories .icon-wrapper.github {\n    background: linear-gradient(#9C45A9, #3B1E68);\n}\n\n#categories .icon-wrapper.github img {\n    filter: invert(100%);\n    height: 18px;\n    width: 18px;\n}\n</style>\n```\n\n\nThank you for providing the additional code. It seems that the theme selection is implemented in the `+page.svelte` file for the settings route. Let's modify the `themeHandler` function in `themeHandler.ts` to ensure it's updating the config correctly and triggering a re-render:\n\n1. Update the `themeHandler.ts` file:\n\n```typescript\nimport type { HexColor } from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport { fetchColorScheme, parseColorScheme } from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    try {\n        console.log(\"Applying theme:\", themeName);\n        const { colorSchemeResponse } = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        console.log(\"Parsed color scheme:\", colorScheme);\n\n        const colorProperties = [\n            \"background\",\n            \"foreground\",\n            \"selectionBackground\",\n            \"selectionForeground\",\n            \"cursorColor\"\n        ] as const;\n\n        colorProperties.forEach((prop) => {\n            if (colorScheme[prop]) {\n                config[prop] = colorScheme[prop] as HexColor;\n                console.log(`Updated ${prop}:`, config[prop]);\n            }\n        });\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill(\"#000000\") as HexColor[];\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[+index] = color as HexColor;\n            }\n            config.palette = [...newPalette]; // Create a new array reference to trigger reactivity\n            console.log(\"Updated palette:\", config.palette);\n        }\n\n        // Force a re-render by updating the theme property\n        config.theme = themeName;\n        console.log(\"Theme application complete\");\n\n        // Dispatch a custom event to notify that the theme has been applied\n        window.dispatchEvent(new CustomEvent('themeApplied', { detail: { theme: themeName } }));\n    } catch (error) {\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n\n2. In the `+page.svelte` file for the settings route, add an event listener for the `themeApplied` event:\n\n```svelte\n<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    // ... other imports ...\n\n    onMount(() => {\n        const handleThemeApplied = () => {\n            console.log(\"Theme applied, updating UI\");\n            // Force a re-render of the component\n            config = { ...config };\n        };\n\n        window.addEventListener('themeApplied', handleThemeApplied);\n\n        return () => {\n            window.removeEventListener('themeApplied', handleThemeApplied);\n        };\n    });\n\n    // ... rest of the component code ...\n</script>\n```\n\n3. Make sure that the `Palette.svelte` component is using the `$` store syntax to access the reactive values:\n\n```svelte\n<script lang=\"ts\">\n    import type {HexColor} from \"$lib/utils/colors\";\n    import Color from \"./Color.svelte\";\n    import { config } from \"$lib/stores/config.svelte\";\n\n    $: value = $config.palette;\n    $: defaultValue = $config.palette;\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={color} size={40} label={(i + 1).toString()} />\n        {/each}\n    }\n</div>\n```\n\nThese changes should ensure that when a new theme is selected:\n1. The `themeHandler` function is called and updates the `config` store.\n2. A custom event is dispatched to notify that the theme has been applied.\n3. The settings page listens for this event and forces a re-render.\n4. The `Palette` component reactively updates based on the new `config.palette` values.\n\nIf you're still experiencing issues after making these changes, please let me know, and I'll be happy to help further.\neslint: 'config' is read-only\n\nI apologize for the confusion. You're right, and I made a mistake in my suggestion. In Svelte's `$state` stores, we can't reassign the entire store. Instead, we need to update its properties individually. Let's modify the approach:\n\n1. Update the `themeHandler.ts` file:\n\n```typescript\nimport type { HexColor } from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport { fetchColorScheme, parseColorScheme } from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    try {\n        console.log(\"Applying theme:\", themeName);\n        const { colorSchemeResponse } = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        console.log(\"Parsed color scheme:\", colorScheme);\n\n        const colorProperties = [\n            \"background\",\n            \"foreground\",\n            \"selectionBackground\",\n            \"selectionForeground\",\n            \"cursorColor\"\n        ] as const;\n\n        colorProperties.forEach((prop) => {\n            if (colorScheme[prop]) {\n                config[prop] = colorScheme[prop] as HexColor;\n                console.log(`Updated ${prop}:`, config[prop]);\n            }\n        });\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill(\"#000000\") as HexColor[];\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[+index] = color as HexColor;\n            }\n            config.palette = newPalette;\n            console.log(\"Updated palette:\", config.palette);\n        }\n\n        // Update the theme property\n        config.theme = themeName;\n        console.log(\"Theme application complete\");\n\n        // Dispatch a custom event to notify that the theme has been applied\n        window.dispatchEvent(new CustomEvent('themeApplied', { detail: { theme: themeName } }));\n    } catch (error) {\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n\n2. In the `+page.svelte` file for the settings route, we don't need to force a re-render because Svelte will automatically update the UI when the store changes. However, we can add a log to confirm the theme has been applied:\n\n```svelte\n<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    // ... other imports ...   \n    \n\n    // ... rest of the component code ...\n</script>\n```\n\n3. Update the `Palette.svelte` component to use the `$` store syntax:\n\n```svelte\n<script lang=\"ts\">\n    import type {HexColor} from \"$lib/utils/colors\";\n    import Color from \"./Color.svelte\";\n    import config from \"$lib/stores/config.svelte\";\n\n    $: value = $config.palette;\n    $: defaultValue = $config.palette;\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={$config.palette[i]} size={40} label={(i + 1).toString()} />\n        {/each}\n    </div>\n</div>\n```\n\nThese changes should ensure that when a new theme is selected:\n1. The `themeHandler` function updates the `config` store directly.\n2. A custom event is dispatched to notify that the theme has been applied (which we can use for logging or additional actions if needed).\n3. The `Palette` component reactively updates based on the new `$config.palette` values.\n\nThis approach should work with Svelte's reactivity system and avoid the \"read-only\" error you encountered. If you're still experiencing issues, please let me know, and I'll be happy to help further.\n\n```svelte ghostty-config/src/routes/settings/[category]/+page.svelte\n<script lang=\"ts\">\n    import {onMount} from \"svelte\";\n\n    import Page from \"$lib/views/Page.svelte\";\n\n    import {page} from \"$app/stores\";\n    import Switch from \"$lib/components/settings/Switch.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n\n    import settings from \"$lib/data/settings\";\n    import config from \"$lib/stores/config.svelte\";\n    import Text from \"$lib/components/settings/Text.svelte\";\n    import Number from \"$lib/components/settings/Number.svelte\";\n    import Dropdown from \"$lib/components/settings/Dropdown.svelte\";\n    import Color from \"$lib/components/settings/Color.svelte\";\n    import Palette from \"$lib/components/settings/Palette.svelte\";\n    import FontPreview from \"$lib/views/FontPreview.svelte\";\n    import BaseColorPreview from \"$lib/views/BaseColorPreview.svelte\";\n    import CursorPreview from \"$lib/views/CursorPreview.svelte\";\n    import PalettePreview from \"$lib/views/PalettePreview.svelte\";\n    import Admonition from \"$lib/components/Admonition.svelte\";\n\n\n    const category = $derived(settings.find(c => c.id === $page.params.category));\n    const title = $derived(category?.name ?? $page.params.category);\n\n    onMount(() => {\n        const handleThemeApplied = (event: CustomEvent) => {\n            console.log(\"Theme applied:\", event.detail.theme);\n        };\n\n        window.addEventListener(\"themeApplied\", handleThemeApplied);\n\n        return () => {\n            window.removeEventListener(\"themeApplied\", handleThemeApplied);\n        };\n    });\n</script>\n\n\n<Page {title}>\n    {#if category}\n        {#if category.id === \"fonts\"}\n            <FontPreview />\n        {:else if category.id === \"colors\"}\n            <Admonition size=\"1.5rem\">You can reset a color to its default value by right clicking!</Admonition>\n        {/if}\n        {#each category.groups as group (group.id)}\n            <Group title={group.name} note={group.note}>\n                {#if category.id === \"colors\" && group.id === \"base\"}\n                    <BaseColorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"cursor\"}\n                    <CursorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"palette\"}\n                    <PalettePreview />\n                    <Separator />\n                {/if}\n                {#each group.settings as setting, i (setting.id)}\n                    {#if i !== 0}<Separator />{/if}\n                    <Item name={setting.name} note={setting.note}>\n                        {#if setting.type === \"switch\"}\n                            <Switch bind:checked={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"text\"}\n                            <Text bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"number\"}\n                            <Number bind:value={config[setting.id as keyof typeof config]} range={setting.range} min={setting.min} max={setting.max} step={setting.step} size={setting.size} />\n                        {:else if setting.type === \"dropdown\"}\n                            <Dropdown bind:value={config[setting.id as keyof typeof config]} options={setting.options} />\n                        {:else if setting.type === \"color\"}\n                            <Color defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"palette\"}\n                            <Palette defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {/if}\n                    </Item>\n                {/each}\n            </Group>\n        {/each}\n    {:else}\n        <h1>What Happened?</h1>\n        <p>You shouldn't be here! If you followed a link, please report the bug on GitHub. Otherwise, go ahead and start browsing on the left.</p>\n    {/if}\n</Page>\n```\n```svelte\n    onMount(() => {\n        const handleThemeApplied = (event: CustomEvent) => {\n            console.log(\"Theme applied:\", event.detail.theme);\n// error: Unexpected console statement.\n        };\n\n```\n```svelte\n        };\n\n        window.addEventListener(\"themeApplied\", handleThemeApplied);\n// error: No overload matches this call.\n//          Overload 1 of 2, '(type: keyof WindowEventMap, listener: (this: Window, ev: Event | UIEvent | DeviceMotionEvent | DeviceOrientationEvent | ... 25 more ... | StorageEvent) => any, options?: boolean | ... 1 more ... | undefined): void', gave the following error.\n//            Argument of type '\"themeApplied\"' is not assignable to parameter of type 'keyof WindowEventMap'.\n//          Overload 2 of 2, '(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void', gave the following error.\n//            Argument of type '(event: CustomEvent) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.\n//              Type '(event: CustomEvent) => void' is not assignable to type 'EventListener'.\n//                Types of parameters 'event' and 'evt' are incompatible.\n//                  Type 'Event' is missing the following properties from type 'CustomEvent<any>': detail, initCustomEvent\n\n        return () => {\n```\n```svelte\n\n        return () => {\n            window.removeEventListener(\"themeApplied\", handleThemeApplied);\n// error: No overload matches this call.\n//          Overload 1 of 2, '(type: keyof WindowEventMap, listener: (this: Window, ev: Event | UIEvent | DeviceMotionEvent | DeviceOrientationEvent | ... 25 more ... | StorageEvent) => any, options?: boolean | ... 1 more ... | undefined): void', gave the following error.\n//            Argument of type '\"themeApplied\"' is not assignable to parameter of type 'keyof WindowEventMap'.\n//          Overload 2 of 2, '(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void', gave the following error.\n//            Argument of type '(event: CustomEvent) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.\n//              Type '(event: CustomEvent) => void' is not assignable to type 'EventListener'.\n//                Types of parameters 'event' and 'evt' are incompatible.\n//                  Type 'Event' is missing the following properties from type 'CustomEvent<any>': detail, initCustomEvent\n        };\n    });\n```\n\n\nI apologize for the oversight. The errors you're encountering are due to TypeScript's strict type checking. Let's address these issues:\n\n1. For the console.log statement, you can either disable the ESLint rule for this specific line or remove the logging if it's not needed in production.\n\n2. For the CustomEvent type mismatch, we need to properly type the event and its detail. Here's the corrected version of the code:\n\n```svelte\n<script lang=\"ts\">\n    import { onMount } from \"svelte\";\n    // ... other imports ...\n\n    interface ThemeAppliedEvent extends CustomEvent {\n        detail: { theme: string };\n    }\n\n    onMount(() => {\n        const handleThemeApplied = (event: ThemeAppliedEvent) => {\n            // eslint-disable-next-line no-console\n            console.log(\"Theme applied:\", event.detail.theme);\n        };\n\n        window.addEventListener(\"themeApplied\", handleThemeApplied as EventListener);\n\n        return () => {\n            window.removeEventListener(\"themeApplied\", handleThemeApplied as EventListener);\n        };\n    });\n\n    // ... rest of the component code ...\n</script>\n```\n\nThese changes should resolve the TypeScript errors:\n\n1. We've defined a `ThemeAppliedEvent` interface that extends `CustomEvent` and specifies the shape of the `detail` property.\n2. We've typed the `handleThemeApplied` function parameter as `ThemeAppliedEvent`.\n3. We've cast `handleThemeApplied` to `EventListener` when adding and removing the event listener.\n4. We've added an ESLint disable comment for the console.log statement. If you want to keep this logging in production, you might want to consider using a proper logging library or a custom logging function that can be conditionally disabled in production builds.\n\nThese modifications should resolve the TypeScript errors while maintaining the functionality of listening for the custom `themeApplied` event. The Palette component should now update correctly when a new theme is selected.\n\n\n```svelte ghostty-config/src/routes/settings/[category]/+page.svelte\n<script lang=\"ts\">\n    import {onMount} from \"svelte\";\n\n    import Page from \"$lib/views/Page.svelte\";\n\n    import {page} from \"$app/stores\";\n    import Switch from \"$lib/components/settings/Switch.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n\n    import settings from \"$lib/data/settings\";\n    import config from \"$lib/stores/config.svelte\";\n    import Text from \"$lib/components/settings/Text.svelte\";\n    import Number from \"$lib/components/settings/Number.svelte\";\n    import Dropdown from \"$lib/components/settings/Dropdown.svelte\";\n    import Color from \"$lib/components/settings/Color.svelte\";\n    import Palette from \"$lib/components/settings/Palette.svelte\";\n    import FontPreview from \"$lib/views/FontPreview.svelte\";\n    import BaseColorPreview from \"$lib/views/BaseColorPreview.svelte\";\n    import CursorPreview from \"$lib/views/CursorPreview.svelte\";\n    import PalettePreview from \"$lib/views/PalettePreview.svelte\";\n    import Admonition from \"$lib/components/Admonition.svelte\";\n\n\n    const category = $derived(settings.find(c => c.id === $page.params.category));\n    const title = $derived(category?.name ?? $page.params.category);\n\n    interface ThemeAppliedEvent extends CustomEvent {\n            detail: { theme: string };\n        }\n\n        onMount(() => {\n            const handleThemeApplied = (event: ThemeAppliedEvent) => {\n                // eslint-disable-next-line no-console\n                console.log(\"Theme applied:\", event.detail.theme);\n            };\n\n            window.addEventListener(\"themeApplied\", handleThemeApplied as EventListener);\n\n            return () => {\n                window.removeEventListener(\"themeApplied\", handleThemeApplied as EventListener);\n            };\n        });\n</script>\n\n\n<Page {title}>\n    {#if category}\n        {#if category.id === \"fonts\"}\n            <FontPreview />\n        {:else if category.id === \"colors\"}\n            <Admonition size=\"1.5rem\">You can reset a color to its default value by right clicking!</Admonition>\n        {/if}\n        {#each category.groups as group (group.id)}\n            <Group title={group.name} note={group.note}>\n                {#if category.id === \"colors\" && group.id === \"base\"}\n                    <BaseColorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"cursor\"}\n                    <CursorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"palette\"}\n                    <PalettePreview />\n                    <Separator />\n                {/if}\n                {#each group.settings as setting, i (setting.id)}\n                    {#if i !== 0}<Separator />{/if}\n                    <Item name={setting.name} note={setting.note}>\n                        {#if setting.type === \"switch\"}\n                            <Switch bind:checked={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"text\"}\n                            <Text bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"number\"}\n                            <Number bind:value={config[setting.id as keyof typeof config]} range={setting.range} min={setting.min} max={setting.max} step={setting.step} size={setting.size} />\n                        {:else if setting.type === \"dropdown\"}\n                            <Dropdown bind:value={config[setting.id as keyof typeof config]} options={setting.options} />\n                        {:else if setting.type === \"color\"}\n                            <Color defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"palette\"}\n                            <Palette defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {/if}\n                    </Item>\n                {/each}\n            </Group>\n        {/each}\n    {:else}\n        <h1>What Happened?</h1>\n        <p>You shouldn't be here! If you followed a link, please report the bug on GitHub. Otherwise, go ahead and start browsing on the left.</p>\n    {/if}\n</Page>\n```\n```svelte\n            };\n\n            window.addEventListener(\"themeApplied\", handleThemeApplied as EventListener);\n// error: 'EventListener' is not defined.\n\n            return () => {\n```\n```svelte\n\n            return () => {\n                window.removeEventListener(\"themeApplied\", handleThemeApplied as EventListener);\n// error: 'EventListener' is not defined.\n            };\n        });\n```\n\n\nI apologize for the oversight. The error is occurring because `EventListener` is not imported or defined. To fix this, we need to either import it from the DOM types or use a more specific type. Let's use a more specific type that doesn't require additional imports:\n\n```svelte\n<script lang=\"ts\">\n    import {onMount} from \"svelte\";\n    // ... other imports ...\n\n    interface ThemeAppliedEvent extends CustomEvent {\n        detail: { theme: string };\n    }\n\n    onMount(() => {\n        const handleThemeApplied = (event: ThemeAppliedEvent) => {\n            // eslint-disable-next-line no-console\n            console.log(\"Theme applied:\", event.detail.theme);\n        };\n\n        window.addEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n\n        return () => {\n            window.removeEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n        };\n    });\n\n    // ... rest of the component code ...\n</script>\n```\n\nIn this updated version:\n\n1. We've replaced `EventListener` with `(event: Event) => void`, which is a more explicit type that describes a function that takes an `Event` parameter and returns nothing.\n\n2. This change avoids the need to import `EventListener` and should resolve the \"is not defined\" errors.\n\n3. The functionality remains the same: we're still casting our `handleThemeApplied` function to a type that the event listener methods expect.\n\nThis modification should resolve the TypeScript errors while maintaining the functionality of listening for the custom `themeApplied` event. The Palette component should now update correctly when a new theme is selected.\n\n```svelte ghostty-config/src/lib/components/settings/Palette.svelte\n<script lang=\"ts\">\n  import type {HexColor} from \"$lib/utils/colors\";\n      import Color from \"./Color.svelte\";\n      import config from \"$lib/stores/config.svelte\";\n\n      $: value = $config.palette;\n      $: defaultValue = $config.palette;\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={$config.palette[i]} size={40} label={(i + 1).toString()} />\n        {/each}\n    </div>\n</div>\n\n<style>\n.grid-container {\n    display: flex;\n    align-items: center;\n    flex: 1;\n}\n.color-grid {\n    display: grid;\n    /* width: 100%; */\n    flex: 1;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(32, 1fr);\n    /* grid-column-gap: 30px; */\n    justify-content: space-around;\n    justify-items: center;\n\n    /* align-items: center; */\n    /* align-content: space-evenly; */\n    grid-row-gap: 14px;\n    margin-bottom: 12px;\n}\n</style>\n```\n```svelte\n<script lang=\"ts\">\n  import type {HexColor} from \"$lib/utils/colors\";\n// error: 'HexColor' is defined but never used. Allowed unused vars must match /^_/u.\n      import Color from \"./Color.svelte\";\n      import config from \"$lib/stores/config.svelte\";\n```\n```svelte\n      import config from \"$lib/stores/config.svelte\";\n\n      $: value = $config.palette;\n// error: `$:` is not allowed in runes mode, use `$derived` or `$effect` instead\n      $: defaultValue = $config.palette;\n</script>\n```\n```svelte\n      import config from \"$lib/stores/config.svelte\";\n\n      $: value = $config.palette;\n// error: Cannot use 'config' as a store. 'config' needs to be an object with a subscribe method on it.\n//        \n//        No overload matches this call.\n//          Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.\n//            Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n//              Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.\n//          Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.\n//            Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n//              Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.\n      $: defaultValue = $config.palette;\n</script>\n```\n```svelte\n\n      $: value = $config.palette;\n      $: defaultValue = $config.palette;\n// error: Cannot use 'config' as a store. 'config' needs to be an object with a subscribe method on it.\n//        \n//        No overload matches this call.\n//          Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.\n//            Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n//              Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.\n//          Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.\n//            Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n//              Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.\n</script>\n\n```\n```svelte\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n// error: 'color' is defined but never used. Allowed unused args must match /^_/u.\n            <Color defaultValue={defaultValue[i]} bind:value={$config.palette[i]} size={40} label={(i + 1).toString()} />\n        {/each}\n```\n```svelte\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={$config.palette[i]} size={40} label={(i + 1).toString()} />\n// error: Destructure palette from $config for better change tracking & fewer redraws\n        {/each}\n    </div>\n```\n```svelte\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={$config.palette[i]} size={40} label={(i + 1).toString()} />\n// error: Cannot use 'config' as a store. 'config' needs to be an object with a subscribe method on it.\n//        \n//        No overload matches this call.\n//          Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.\n//            Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n//              Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.\n//          Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.\n//            Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n//              Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.\n        {/each}\n    </div>\n```\n\n\nI apologize for the confusion. It seems that the `config` import is not a Svelte store as expected. Let's modify the component to work with the current setup and address the errors:\n\n```svelte\n<script lang=\"ts\">\n  import type {HexColor} from \"$lib/utils/colors\";\n  import Color from \"./Color.svelte\";\n  import config from \"$lib/stores/config.svelte\";\n\n  const value = $derived(config.palette);\n  const defaultValue = $derived(config.palette);\n\n  $effect(() => {\n    console.log(\"Palette updated:\", value);\n  });\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as _, i (i)}\n            <Color \n              defaultValue={defaultValue[i]} \n              bind:value={config.palette[i]} \n              size={40} \n              label={(i + 1).toString()} \n            />\n        {/each}\n    </div>\n</div>\n\n<style>\n.grid-container {\n    display: flex;\n    align-items: center;\n    flex: 1;\n}\n.color-grid {\n    display: grid;\n    flex: 1;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(32, 1fr);\n    justify-content: space-around;\n    justify-items: center;\n    grid-row-gap: 14px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\nChanges made:\n\n1. Removed the unused `HexColor` import to resolve the unused import warning.\n2. Changed `$:` reactive statements to `$derived` as per the new Svelte syntax.\n3. Used `$effect` to log when the palette is updated, which can be useful for debugging.\n4. In the `#each` loop, changed `color` to `_` to indicate it's not used, resolving the unused variable warning.\n5. Removed the `$` prefix from `config` as it's not a Svelte store.\n6. Bound directly to `config.palette[i]` instead of using the store syntax.\n\nThese changes should resolve the errors you were seeing. The component should now correctly display and update the palette colors.\n\nIf you're still experiencing issues, it might be helpful to see how `config` is defined in `$lib/stores/config.svelte.ts`. It's possible that file needs to be adjusted to export a proper Svelte store if that's the intended behavior.\n\nUncaught (in promise) Svelte error: bind_not_bindable\nA component is attempting to bind to a non-bindable property `value` belonging to src/lib/components/settings/Palette.svelte (i.e. `<wrapper bind:value={...}>`). To mark a property as bindable: `let { value = $bindable() } = $props()`\nI apologize for the oversight. The error indicates that we need to explicitly mark the `value` prop as bindable in the Palette component. Let's modify the Palette component to address this issue:\n\n```svelte\n<script lang=\"ts\">\n  import type {HexColor} from \"$lib/utils/colors\";\n  import Color from \"./Color.svelte\";\n  import config from \"$lib/stores/config.svelte\";\n\n  const {value = $bindable()} = $props<{value: HexColor[]}>();\n  \n  $effect(() => {\n    console.log(\"Palette updated:\", value);\n  });\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n            <Color \n              defaultValue={color} \n              bind:value={value[i]} \n              size={40} \n              label={(i + 1).toString()} \n            />\n        {/each}\n    </div>\n</div>\n\n<style>\n.grid-container {\n    display: flex;\n    align-items: center;\n    flex: 1;\n}\n.color-grid {\n    display: grid;\n    flex: 1;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(32, 1fr);\n    justify-content: space-around;\n    justify-items: center;\n    grid-row-gap: 14px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\nChanges made:\n\n1. Added `const {value = $bindable()} = $props<{value: HexColor[]}>();` to explicitly mark the `value` prop as bindable.\n2. Removed the `defaultValue` derived value, as we can use the `value` prop directly.\n3. Updated the `#each` loop to use `value` directly.\n4. Changed the `bind:value` in the Color component to bind directly to the array element.\n\nNow, in the parent component where you're using the Palette component, you should bind to the palette like this:\n\n```svelte\n<Palette bind:value={config.palette} />\n```\n\nThis change should resolve the \"bind_not_bindable\" error and allow the Palette component to correctly update the config store when colors are changed.\n\nRemember to also update any other components that might be using the Palette component to use this new binding syntax.\nwhat about the config import?\nYou're right, I apologize for overlooking that. The `config` import is causing issues because it's not a Svelte store as we initially thought. Let's modify the Palette component to work without directly importing the config:\n\n```svelte\n<script lang=\"ts\">\n  import type {HexColor} from \"$lib/utils/colors\";\n  import Color from \"./Color.svelte\";\n\n  const {value = $bindable(), defaultValue = $bindable()} = $props<{\n    value: HexColor[],\n    defaultValue: HexColor[]\n  }>();\n  \n  $effect(() => {\n    console.log(\"Palette updated:\", value);\n  });\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n            <Color \n              defaultValue={defaultValue[i]} \n              bind:value={value[i]} \n              size={40} \n              label={(i + 1).toString()} \n            />\n        {/each}\n    </div>\n</div>\n\n<style>\n.grid-container {\n    display: flex;\n    align-items: center;\n    flex: 1;\n}\n.color-grid {\n    display: grid;\n    flex: 1;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(32, 1fr);\n    justify-content: space-around;\n    justify-items: center;\n    grid-row-gap: 14px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\nChanges made:\n\n1. Removed the `config` import.\n2. Added `defaultValue` as a bindable prop alongside `value`.\n3. Updated the type definition for the props.\n4. Used `defaultValue` in the Color component.\n\nNow, in the parent component where you're using the Palette component, you should pass both the `value` and `defaultValue`:\n\n```svelte\n<script>\n  import config from \"$lib/stores/config.svelte\";\n  import Palette from \"./Palette.svelte\";\n</script>\n\n<Palette bind:value={config.palette} defaultValue={config.palette} />\n```\n\nThis approach separates the concerns better:\n- The Palette component doesn't need to know about the config store.\n- The parent component is responsible for passing the correct values and handling the binding.\n\nThis should resolve the issues with the `config` import and the \"bind_not_bindable\" error, while still allowing the Palette component to correctly update the colors when changed.\n\nI would prefer to use the loadConfig function to load in the values associated with the chosen theme\nCertainly! Let's modify the approach to use the `loadConfig` function for applying theme changes. We'll update the Palette component and its parent to work with this method.\n\nFirst, let's update the Palette component:\n\n```svelte\n<script lang=\"ts\">\n  import type {HexColor} from \"$lib/utils/colors\";\n  import Color from \"./Color.svelte\";\n\n  const {value = $bindable(), onChange = $bindable()} = $props<{\n    value: HexColor[],\n    onChange: (newValue: HexColor[], index: number) => void\n  }>();\n  \n  function handleColorChange(newColor: HexColor, index: number) {\n    const newPalette = [...value];\n    newPalette[index] = newColor;\n    onChange(newPalette, index);\n  }\n\n  $effect(() => {\n    console.log(\"Palette updated:\", value);\n  });\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n            <Color \n              value={color}\n              on:change={(e) => handleColorChange(e.detail, i)}\n              size={40} \n              label={(i + 1).toString()} \n            />\n        {/each}\n    </div>\n</div>\n\n<style>\n.grid-container {\n    display: flex;\n    align-items: center;\n    flex: 1;\n}\n.color-grid {\n    display: grid;\n    flex: 1;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(32, 1fr);\n    justify-content: space-around;\n    justify-items: center;\n    grid-row-gap: 14px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\nNow, let's update the parent component (assuming it's the settings page where the theme is selected):\n\n```svelte\n<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n  import Palette from \"./Palette.svelte\";\n  import config from \"$lib/stores/config.svelte\";\n  import { loadConfig } from \"$lib/stores/config.svelte\";\n  import themeHandler from \"$lib/utils/themeHandler\";\n\n  let currentPalette = $state(config.palette);\n\n  function handleThemeChange(newTheme: string) {\n    themeHandler(newTheme).then(() => {\n      currentPalette = config.palette;\n    });\n  }\n\n  function handlePaletteChange(newPalette: HexColor[], index: number) {\n    loadConfig({ palette: newPalette });\n    currentPalette = newPalette;\n  }\n\n  onMount(() => {\n    const handleThemeApplied = (event: CustomEvent<{ theme: string }>) => {\n      console.log(\"Theme applied:\", event.detail.theme);\n      currentPalette = config.palette;\n    };\n\n    window.addEventListener(\"themeApplied\", handleThemeApplied as EventListener);\n\n    return () => {\n      window.removeEventListener(\"themeApplied\", handleThemeApplied as EventListener);\n    };\n  });\n</script>\n\n<div>\n  <select on:change={(e) => handleThemeChange(e.currentTarget.value)}>\n    <!-- Add theme options here -->\n  </select>\n\n  <Palette value={currentPalette} onChange={handlePaletteChange} />\n</div>\n```\n\nIn this setup:\n\n1. The Palette component now accepts an `onChange` function prop instead of using two-way binding.\n2. When a color changes in the Palette, it calls the `onChange` function with the new palette and the index of the changed color.\n3. In the parent component, we use a `currentPalette` state to hold the current palette values.\n4. The `handleThemeChange` function calls `themeHandler` and updates `currentPalette` when the theme is applied.\n5. The `handlePaletteChange` function uses `loadConfig` to update the config store and also updates `currentPalette`.\n6. We listen for the `themeApplied` event to update `currentPalette` when a theme is applied.\n\nThis approach allows you to use the `loadConfig` function to apply theme changes, while still keeping the Palette component reactive to those changes. The parent component acts as the coordinator between the theme selection, the config store, and the Palette component.\n\n\n\n```svelte ghostty-config/src/routes/app/import-export/+page.svelte\n<script lang=\"ts\">\n    import Page from \"$lib/views/Page.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n    import {diff, load} from \"$lib/stores/config.svelte\";\n    import parse from \"$lib/utils/parse\";\n\n    let pasteConfigText = $state(\"Clipboard\");\n    let copyConfigText = $state(\"Clipboard\");\n\n\n    // TODO: move alert() to real modals\n    function loadConfig(candidate: string) {\n        let parsed;\n        try {\n            parsed = parse(candidate);\n        }\n        catch (parseError) {\n            // eslint-disable-next-line no-console\n            console.error(parseError);\n            alert(\"Something went wrong trying to parse your config. Please open an issue on GitHub!\");\n            return;\n        }\n\n        try {\n            load(parsed);\n        }\n        catch (loadError) {\n            // eslint-disable-next-line no-console\n            console.error(loadError);\n            alert(\"Something went wrong trying to load your parsed config. Please open an issue on GitHub!\");\n            return;\n        }\n    }\n\n    function pasteConfig() {\n        if (pasteConfigText === \"Pasted!\") return;\n        window.navigator.clipboard.readText().then(text => {\n            pasteConfigText = \"Pasted!\";\n            setTimeout(() => (pasteConfigText = \"Clipboard\"), 3000);\n            loadConfig(text);\n        });\n    }\n\n    let filePicker: HTMLInputElement;\n    function openFilePicker() {\n        filePicker.click();\n    }\n\n    function selectFile() {\n        const file = filePicker.files![0];\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", (event) => {\n            const loadedText = event.target?.result?.toString();\n            if (loadedText) loadConfig(loadedText);\n        });\n        reader.readAsText(file);\n    }\n\n    // Move to module\n    function stringifyConfig() {\n        const config = diff();\n        const lines = [\"# Config generated by Ghostty Config\\n\"];\n        for (const key in config) {\n            if (!Array.isArray(config[key])) {\n                lines.push(`${key} = ${config[key]}`);\n            }\n            else {\n                for (let i = 0; i < config[key].length; i++) {\n                    lines.push(`${key} = ${config[key][i]}`);\n                }\n            }\n        }\n\n        return lines.join(\"\\n\");\n    }\n\n    function copyConfig() {\n        if (copyConfigText === \"Copied!\") return;\n        const config = stringifyConfig();\n        window.navigator.clipboard.writeText(config).then(() => {\n            copyConfigText = \"Copied!\";\n            setTimeout(() => (copyConfigText = \"Clipboard\"), 3000);\n        });\n    }\n\n    function downloadConfig() {\n        const file = new File([stringifyConfig()], \"config\", {type: \"text/plain\"});\n        const link = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        link.href = url;\n        link.download = file.name;\n        link.style.display = \"none\";\n        document.body.append(link);\n        link.click();\n        link.remove();\n        URL.revokeObjectURL(url);\n    }\n</script>\n\n<Page title=\"Import & Export\">\n    <Group flex={1}>\n        <div class=\"preview\">\n            <div class=\"row p2\"># You can preview the config here</div>\n            <div class=\"row\">&nbsp;</div>\n\n            {#each Object.entries(diff()) as [key, value], i (i)}\n                {#if Array.isArray(value)}\n                    {#each value as val, v (v)}\n                    <div class=\"row\"><span class=\"p4\">{key}</span> = <span class=\"p5\">{val}</span></div>\n                    {/each}\n                {:else}\n                    <div class=\"row\"><span class=\"p4\">{key}</span> = <span class=\"p5\">{value}</span></div>\n                {/if}\n            {/each}\n        </div>\n        <Separator />\n        <Item name=\"Import\">\n            <div class=\"button-group\">\n                <button type=\"button\" onclick={pasteConfig} title=\"Paste\">{pasteConfigText}</button>\n                <input id=\"config-input\" type=\"file\" onchange={selectFile} bind:this={filePicker} />\n                <button type=\"button\" onclick={openFilePicker} title=\"Upload\">File...</button>\n            </div>\n        </Item>\n        <Separator />\n        <Item name=\"Export\">\n            <div class=\"button-group\">\n                <button type=\"button\" onclick={copyConfig} title=\"Copy\">{copyConfigText}</button>\n                <button type=\"button\" onclick={downloadConfig} title=\"Download\">File...</button>\n            </div>\n        </Item>\n    </Group>\n</Page>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    min-height: 200px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n    flex: 1;\n    user-select: text;\n}\n\n.preview .row {\n    display: flex;\n    white-space: pre;\n    flex: 1;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n\n/* .bold {font-weight: 700;} */\n\n/* .fg {color: var(--config-fg);} */\n\n/* .p0 {color: var(--config-palette-0);} */\n/* .p1 {color: var(--config-palette-1);} */\n.p2 {color: var(--config-palette-2);}\n/* .p3 {color: var(--config-palette-3);} */\n.p4 {color: var(--config-palette-4);}\n.p5 {color: var(--config-palette-5);}\n/* .p6 {color: var(--config-palette-6);}\n.p7 {color: var(--config-palette-7);}\n.p8 {color: var(--config-palette-8);}\n.p9 {color: var(--config-palette-9);}\n.p10 {color: var(--config-palette-10);}\n.p11 {color: var(--config-palette-11);}\n.p12 {color: var(--config-palette-12);} */\n/* .p13 {color: var(--config-palette-13);}\n.p14 {color: var(--config-palette-14);}\n.p15 {color: var(--config-palette-15);} */\n\n\n#config-input {\n    display: none;\n}\n\n.button-group {\n    display: flex;\n    gap: 12px;\n}\n\n/* TODO: extract to a separate component for usage elsewhere */\nbutton {\n    background: var(--bg-basic-button);\n    border-radius: var(--radius-level-4);\n    border: 0;\n    color: inherit;\n    padding: 2px 10px;\n    font-size: 1.1rem;\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0.5);\n}\n\nbutton:active {\n    filter: brightness(115%);\n}\n</style>\n```\n\nThis loadConfig function\nYou're right, I apologize for the confusion. The `loadConfig` function in this file is indeed the one we should use for applying theme changes. Let's modify our approach to use this function for both theme changes and individual color updates in the Palette component.\n\nHere's how we can update the Palette component and its parent to work with this `loadConfig` function:\n\n1. Update the Palette component (`Palette.svelte`):\n\n```svelte\n<script lang=\"ts\">\n  import type {HexColor} from \"$lib/utils/colors\";\n  import Color from \"./Color.svelte\";\n\n  const {value = $bindable(), onChange = $bindable()} = $props<{\n    value: HexColor[],\n    onChange: (newValue: HexColor[], index: number) => void\n  }>();\n  \n  function handleColorChange(newColor: HexColor, index: number) {\n    const newPalette = [...value];\n    newPalette[index] = newColor;\n    onChange(newPalette, index);\n  }\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n            <Color \n              value={color}\n              on:change={(e) => handleColorChange(e.detail, i)}\n              size={40} \n              label={(i + 1).toString()} \n            />\n        {/each}\n    </div>\n</div>\n\n<style>\n  /* ... (keep the existing styles) ... */\n</style>\n```\n\n2. Update the parent component (e.g., `colors.svelte` or wherever you're using the Palette):\n\n```svelte\n<script lang=\"ts\">\n  import Palette from \"./Palette.svelte\";\n  import config from \"$lib/stores/config.svelte\";\n  import { loadConfig } from \"$lib/stores/config.svelte\";\n  import themeHandler from \"$lib/utils/themeHandler\";\n\n  let currentPalette = $state(config.palette);\n\n  function handleThemeChange(newTheme: string) {\n    themeHandler(newTheme).then(() => {\n      currentPalette = config.palette;\n    });\n  }\n\n  function handlePaletteChange(newPalette: HexColor[], index: number) {\n    loadConfig({ palette: newPalette });\n    currentPalette = newPalette;\n  }\n\n  $effect(() => {\n    console.log(\"Current palette updated:\", currentPalette);\n  });\n</script>\n\n<div>\n  <select on:change={(e) => handleThemeChange(e.currentTarget.value)}>\n    <!-- Add theme options here -->\n  </select>\n\n  <Palette value={currentPalette} onChange={handlePaletteChange} />\n</div>\n```\n\nIn this setup:\n\n1. The Palette component remains mostly the same, but it now calls an `onChange` function prop when a color changes.\n2. In the parent component:\n   - We use a `currentPalette` state to hold the current palette values.\n   - `handleThemeChange` calls `themeHandler` (which should internally use `loadConfig`) and updates `currentPalette` when the theme is applied.\n   - `handlePaletteChange` uses the `loadConfig` function directly to update the config when individual colors change.\n   - We use `$effect` to log changes to the palette (you can remove this if not needed).\n\nThis approach ensures that both theme changes and individual color updates use the `loadConfig` function to update the configuration. The Palette component remains reactive to these changes, and the parent component acts as the coordinator between theme selection, config updates, and the Palette component.\nNote that the theme is being updated in this file\n```svelte ghostty-config/src/routes/settings/[category]/+page.svelte\n<script lang=\"ts\">\n    import {onMount} from \"svelte\";\n\n    import Page from \"$lib/views/Page.svelte\";\n\n    import {page} from \"$app/stores\";\n    import Switch from \"$lib/components/settings/Switch.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n\n    import settings from \"$lib/data/settings\";\n    import config from \"$lib/stores/config.svelte\";\n    import Text from \"$lib/components/settings/Text.svelte\";\n    import Number from \"$lib/components/settings/Number.svelte\";\n    import Dropdown from \"$lib/components/settings/Dropdown.svelte\";\n    import Color from \"$lib/components/settings/Color.svelte\";\n    import Palette from \"$lib/components/settings/Palette.svelte\";\n    import FontPreview from \"$lib/views/FontPreview.svelte\";\n    import BaseColorPreview from \"$lib/views/BaseColorPreview.svelte\";\n    import CursorPreview from \"$lib/views/CursorPreview.svelte\";\n    import PalettePreview from \"$lib/views/PalettePreview.svelte\";\n    import Admonition from \"$lib/components/Admonition.svelte\";\n\n\n    const category = $derived(settings.find(c => c.id === $page.params.category));\n    const title = $derived(category?.name ?? $page.params.category);\n\n    interface ThemeAppliedEvent extends CustomEvent {\n        detail: { theme: string };\n    }\n\n    onMount(() => {\n        const handleThemeApplied = (event: ThemeAppliedEvent) => {\n            // eslint-disable-next-line no-console\n            console.log(\"Theme applied:\", event.detail.theme);\n        };\n\n        window.addEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n\n        return () => {\n            window.removeEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n        };\n    });\n</script>\n\n\n<Page {title}>\n    {#if category}\n        {#if category.id === \"fonts\"}\n            <FontPreview />\n        {:else if category.id === \"colors\"}\n            <Admonition size=\"1.5rem\">You can reset a color to its default value by right clicking!</Admonition>\n        {/if}\n        {#each category.groups as group (group.id)}\n            <Group title={group.name} note={group.note}>\n                {#if category.id === \"colors\" && group.id === \"base\"}\n                    <BaseColorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"cursor\"}\n                    <CursorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"palette\"}\n                    <PalettePreview />\n                    <Separator />\n                {/if}\n                {#each group.settings as setting, i (setting.id)}\n                    {#if i !== 0}<Separator />{/if}\n                    <Item name={setting.name} note={setting.note}>\n                        {#if setting.type === \"switch\"}\n                            <Switch bind:checked={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"text\"}\n                            <Text bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"number\"}\n                            <Number bind:value={config[setting.id as keyof typeof config]} range={setting.range} min={setting.min} max={setting.max} step={setting.step} size={setting.size} />\n                        {:else if setting.type === \"dropdown\"}\n                            <Dropdown bind:value={config[setting.id as keyof typeof config]} options={setting.options} />\n                        {:else if setting.type === \"color\"}\n                            <Color defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"palette\"}\n                            <Palette defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {/if}\n                    </Item>\n                {/each}\n            </Group>\n        {/each}\n    {:else}\n        <h1>What Happened?</h1>\n        <p>You shouldn't be here! If you followed a link, please report the bug on GitHub. Otherwise, go ahead and start browsing on the left.</p>\n    {/if}\n</Page>\n```\n\n\nThank you for the clarification. You're right, the theme is being updated in this file. Given this context, let's modify our approach to work within this file structure. We'll update the Palette component and adjust how it's used in this settings page.\n\n1. First, update the Palette component (`Palette.svelte`):\n\n```svelte\n<script lang=\"ts\">\n  import type {HexColor} from \"$lib/utils/colors\";\n  import Color from \"./Color.svelte\";\n\n  const {value = $bindable(), defaultValue = $bindable()} = $props<{\n    value: HexColor[],\n    defaultValue: HexColor[]\n  }>();\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as color, i (i)}\n            <Color \n              defaultValue={defaultValue[i]}\n              bind:value={value[i]}\n              size={40} \n              label={(i + 1).toString()} \n            />\n        {/each}\n    </div>\n</div>\n\n<style>\n  /* ... (keep the existing styles) ... */\n</style>\n```\n\n2. Now, let's modify the settings page (`[category]/+page.svelte`) to handle theme changes and palette updates:\n\n```svelte\n<script lang=\"ts\">\n    import {onMount} from \"svelte\";\n    import Page from \"$lib/views/Page.svelte\";\n    import {page} from \"$app/stores\";\n    // ... (keep other imports)\n    import config from \"$lib/stores/config.svelte\";\n    import {load} from \"$lib/stores/config.svelte\";\n    import themeHandler from \"$lib/utils/themeHandler\";\n\n    // ... (keep other code)\n\n    interface ThemeAppliedEvent extends CustomEvent {\n        detail: { theme: string };\n    }\n\n    onMount(() => {\n        const handleThemeApplied = (event: ThemeAppliedEvent) => {\n            console.log(\"Theme applied:\", event.detail.theme);\n            // Force a re-render of the component\n            config = { ...config };\n        };\n\n        window.addEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n\n        return () => {\n            window.removeEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n        };\n    });\n\n    function handleThemeChange(newTheme: string) {\n        themeHandler(newTheme);\n    }\n\n    function handlePaletteChange(newPalette: HexColor[]) {\n        load({ palette: newPalette });\n    }\n</script>\n\n<Page {title}>\n    {#if category}\n        <!-- ... (keep existing code) ... -->\n        {#each category.groups as group (group.id)}\n            <Group title={group.name} note={group.note}>\n                <!-- ... (keep existing code) ... -->\n                {#each group.settings as setting, i (setting.id)}\n                    {#if i !== 0}<Separator />{/if}\n                    <Item name={setting.name} note={setting.note}>\n                        {#if setting.type === \"switch\"}\n                            <Switch bind:checked={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"text\"}\n                            <Text bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"number\"}\n                            <Number bind:value={config[setting.id as keyof typeof config]} range={setting.range} min={setting.min} max={setting.max} step={setting.step} size={setting.size} />\n                        {:else if setting.type === \"dropdown\"}\n                            {#if setting.id === \"theme\"}\n                                <Dropdown bind:value={config[setting.id as keyof typeof config]} options={setting.options} on:change={(e) => handleThemeChange(e.detail)} />\n                            {:else}\n                                <Dropdown bind:value={config[setting.id as keyof typeof config]} options={setting.options} />\n                            {/if}\n                        {:else if setting.type === \"color\"}\n                            <Color defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"palette\"}\n                            <Palette defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} on:change={(e) => handlePaletteChange(e.detail)} />\n                        {/if}\n                    </Item>\n                {/each}\n            </Group>\n        {/each}\n    {:else}\n        <!-- ... (keep existing code) ... -->\n    {/if}\n</Page>\n```\n\nThese changes accomplish the following:\n\n1. The Palette component now accepts `value` and `defaultValue` as bindable props.\n2. In the settings page, we've added `handleThemeChange` and `handlePaletteChange` functions.\n3. For the theme dropdown, we've added an `on:change` event handler to call `handleThemeChange`.\n4. For the palette, we've added an `on:change` event handler to call `handlePaletteChange`.\n5. The `onMount` function now updates the `config` object when a theme is applied, which should trigger a re-render of the components.\n\nThis setup should allow the theme to be updated correctly and the palette to be modified individually, all while using the `load` function to update the configuration. The `themeHandler` function (which should internally use `load`) is called when the theme changes, and `load` is called directly for individual palette changes.\n\nRemember to ensure that your `Color` component emits a `change` event when its value changes, and that your `Dropdown` component emits a `change` event with the new value as the event detail.\n\n\n\n\nghostty-config/\n.github/workflows\n```yml ghostty-config/.github/workflows/deploy.yml\nname: Deploy to GitHub Pages\n\non:\n  push:\n    branches: \"main\"\n\njobs:\n  build_site:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Install Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20\n          cache: npm\n\n      - name: Install dependencies\n        run: npm install\n\n      - name: build\n        env:\n          BASE_PATH: \"/${{ github.event.repository.name }}\"\n        run: |\n          npm run build\n\n      - name: Upload Artifacts\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: \"build/\"\n\n  deploy:\n    needs: build_site\n    runs-on: ubuntu-latest\n\n    permissions:\n      pages: write\n      id-token: write\n\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n\n    steps:\n      - name: Deploy\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\n```ghostty-config/.gitignore\nnode_modules\ncustom\nconfig\nsverdle\n\n# Output\n.output\n.vercel\n/.svelte-kit\n/build\n\n# OS\n.DS_Store\nThumbs.db\n\n# Env\n.env\n.env.*\n!.env.example\n!.env.test\n\n# Vite\nvite.config.js.timestamp-*\nvite.config.ts.timestamp-*\n```\n\n```ghostty-config/.prettierignore\n# Package Managers\npackage-lock.json\npnpm-lock.yaml\nyarn.lock\n```\n\n```ghostty-config/.prettierrc\n{\n    \"useTabs\": false,\n    \"tabWidth\": 4,\n    \"singleQuote\": false,\n    \"semi\": true,\n    \"quoteProps\": \"consistent\",\n    \"trailingComma\": \"none\",\n    \"bracketSpacing\": false,\n    \"printWidth\": 100,\n    \"plugins\": [\"prettier-plugin-svelte\"],\n    \"overrides\": [{\"files\": \"*.svelte\", \"options\": {\"parser\": \"svelte\"}}]\n}\n```\n\n```ghostty-config/LICENSE\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2024 Zerebos\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n```md ghostty-config/README.md\n<p align=\"center\">\n  <a href=\"https://zerebos.github.io/ghostty-config\"><img src=\"./src/lib/images/ghost.png\" height=\"128\" alt=\"Ghostty Config\"></a>\n  <h1 align=\"center\">Ghostty Config</h1>\n</p>\n\n\n> [!NOTE]\n> This tool is still early in development and the list of features and future improvements is not complete--even the name is up for debate! Please give your feedback, ideas, and report bugs via the [github issue tracker](https://github.com/zerebos/ghostty-config/issues).\n\nGhostty config is a beautiful configuration generator for [Ghostty Terminal](https://github.com/ghostty-org). Features include easily modifiable settings, a font playground, and tons of previews and demos for cursors, selections, and even the color palette. More features are soon to come including keybind validation.\n\n<p align=\"center\">\n  <img src=\"https://github.com/user-attachments/assets/aa49f2bb-a6d3-4248-833b-488d27b57815\" alt=\"GUI Preview\">\n</p>\n```\n\n```js ghostty-config/eslint.config.js\nimport js from \"@eslint/js\";\nimport ts from \"typescript-eslint\";\nimport svelte from \"eslint-plugin-svelte\";\nimport prettier from \"eslint-config-prettier\";\nimport globals from \"globals\";\n\n/** @type {import('eslint').Linter.Config[]} */\nexport default [\n    js.configs.recommended,\n    ...ts.configs.recommended,\n    ...svelte.configs[\"flat/recommended\"],\n    prettier,\n    ...svelte.configs[\"flat/prettier\"],\n    {\n        languageOptions: {\n            globals: {\n                ...globals.browser,\n                ...globals.node\n            }\n        }\n    },\n    {\n        files: [\"**/*.svelte\"],\n        languageOptions: {\n            parserOptions: {\n                parser: ts.parser\n            }\n        }\n    },\n    {\n        ignores: [\"build/\", \".svelte-kit/\", \"dist/\", \"custom/\", \"config/\", \"sverdle/\"]\n    },\n    {\n        rules: {\n            \"accessor-pairs\": \"error\",\n            \"block-spacing\": [\"error\", \"never\"],\n            \"brace-style\": [\"error\", \"stroustrup\", {allowSingleLine: true}],\n            \"curly\": [\"error\", \"multi-line\", \"consistent\"],\n            \"dot-location\": [\"error\", \"property\"],\n            \"dot-notation\": \"error\",\n            \"func-call-spacing\": \"error\",\n            \"handle-callback-err\": \"error\",\n            \"key-spacing\": \"error\",\n            \"keyword-spacing\": \"error\",\n            \"new-cap\": [\"error\", {newIsCap: true}],\n            \"no-array-constructor\": \"error\",\n            \"no-caller\": \"error\",\n            \"no-console\": \"error\",\n            \"no-duplicate-imports\": \"error\",\n            \"no-else-return\": \"error\",\n            \"no-eval\": \"error\",\n            \"no-floating-decimal\": \"error\",\n            \"no-implied-eval\": \"error\",\n            \"no-iterator\": \"error\",\n            \"no-label-var\": \"error\",\n            \"no-labels\": \"error\",\n            \"no-lone-blocks\": \"error\",\n            \"no-mixed-spaces-and-tabs\": \"error\",\n            \"no-multi-spaces\": \"error\",\n            \"no-multi-str\": \"error\",\n            \"no-new\": \"error\",\n            \"no-new-func\": \"error\",\n            \"no-new-object\": \"error\",\n            \"no-new-wrappers\": \"error\",\n            \"no-octal-escape\": \"error\",\n            \"no-path-concat\": \"error\",\n            \"no-proto\": \"error\",\n            \"no-prototype-builtins\": \"off\",\n            \"no-redeclare\": [\"error\", {builtinGlobals: true}],\n            \"no-self-compare\": \"error\",\n            \"no-sequences\": \"error\",\n            \"no-shadow\": [\"warn\", {builtinGlobals: false, hoist: \"functions\"}],\n            \"no-tabs\": \"error\",\n            \"no-template-curly-in-string\": \"error\",\n            \"no-throw-literal\": \"error\",\n            \"no-undef\": \"error\",\n            \"no-undef-init\": \"error\",\n            \"no-unmodified-loop-condition\": \"error\",\n            \"no-unneeded-ternary\": \"error\",\n            \"no-useless-call\": \"error\",\n            \"no-useless-computed-key\": \"error\",\n            \"no-useless-constructor\": \"error\",\n            \"no-useless-rename\": \"error\",\n            \"no-var\": \"error\",\n            \"no-whitespace-before-property\": \"error\",\n            \"object-curly-spacing\": [\"error\", \"never\", {objectsInObjects: false}],\n            \"object-property-newline\": [\"error\", {allowAllPropertiesOnSameLine: true}],\n            \"operator-linebreak\": [\n                \"error\",\n                \"none\",\n                {overrides: {\"?\": \"before\", \":\": \"before\", \"&&\": \"before\"}}\n            ],\n            \"prefer-const\": \"error\",\n            \"quote-props\": [\"error\", \"consistent-as-needed\", {keywords: true}],\n            \"quotes\": [\"error\", \"double\", {allowTemplateLiterals: true}],\n            \"rest-spread-spacing\": \"error\",\n            \"semi\": \"error\",\n            \"semi-spacing\": \"error\",\n            \"space-before-blocks\": \"error\",\n            \"space-in-parens\": \"error\",\n            \"space-infix-ops\": \"error\",\n            \"space-unary-ops\": [\n                \"error\",\n                {words: true, nonwords: false, overrides: {\"typeof\": false}}\n            ],\n            \"spaced-comment\": [\"error\", \"always\", {exceptions: [\"-\", \"*\"]}],\n            \"template-curly-spacing\": \"error\",\n            \"wrap-iife\": [\"error\", \"inside\"],\n            \"yield-star-spacing\": \"error\",\n            \"yoda\": \"error\"\n        },\n    },\n    {\n        rules: {\n            \"@typescript-eslint/no-unused-vars\": [\"error\", {argsIgnorePattern: \"^_\", varsIgnorePattern: \"^_\"}]\n        }\n    },\n    {\n        rules: {\n            // Errors\n            \"svelte/infinite-reactive-loop\": \"error\",\n            \"svelte/no-dom-manipulating\": \"off\",\n            \"svelte/no-dupe-else-if-blocks\": \"error\",\n            \"svelte/no-dupe-on-directives\": \"error\",\n            \"svelte/no-dupe-style-properties\": \"error\",\n            \"svelte/no-dupe-use-directives\": \"error\",\n            \"svelte/no-dynamic-slot-name\": \"error\",\n            \"svelte/no-export-load-in-svelte-module-in-kit-pages\": \"error\",\n            \"svelte/no-not-function-handler\": \"error\",\n            \"svelte/no-object-in-text-mustaches\": \"error\",\n            \"svelte/no-reactive-reassign\": \"error\",\n            \"svelte/no-shorthand-style-property-overrides\": \"error\",\n            \"svelte/no-store-async\": \"error\",\n            \"svelte/no-unknown-style-directive-property\": \"error\",\n            \"svelte/require-store-callbacks-use-set-param\": \"error\",\n            \"svelte/require-store-reactive-access\": \"error\",\n            \"svelte/valid-compile\": \"error\",\n            \"svelte/valid-prop-names-in-kit-pages\": \"error\",\n\n            // Security\n            \"svelte/no-at-html-tags\": \"error\",\n            \"svelte/no-target-blank\": \"error\",\n\n            // Best Practices\n            \"svelte/block-lang\": [\"error\", {script: \"ts\"}],\n            \"svelte/button-has-type\": \"error\",\n            \"svelte/no-at-debug-tags\": \"error\",\n            \"svelte/no-ignored-unsubscribe\": \"error\",\n            \"svelte/no-immutable-reactive-statements\": \"error\",\n            \"svelte/no-inline-styles\": \"off\",\n            \"svelte/no-reactive-functions\": \"error\",\n            \"svelte/no-reactive-literals\": \"error\",\n            \"svelte/no-svelte-internal\": \"error\",\n            \"svelte/no-unused-class-name\": \"error\",\n            \"svelte/no-unused-svelte-ignore\": \"error\",\n            \"svelte/no-useless-mustaches\": \"error\",\n            \"svelte/prefer-destructured-store-props\": \"error\",\n            \"svelte/require-each-key\": \"error\",\n            \"svelte/require-event-dispatcher-types\": \"error\",\n            \"svelte/require-optimized-style-attribute\": \"error\",\n            \"svelte/require-stores-init\": \"error\",\n            \"svelte/valid-each-key\": \"error\",\n\n            // Stylistic Issues\n            \"svelte/derived-has-same-inputs-outputs\": \"error\",\n            \"svelte/first-attribute-linebreak\": [\"error\", {multiline: \"below\", singleline: \"beside\"}],\n            \"svelte/html-closing-bracket-spacing\": \"error\",\n            \"svelte/html-quotes\": [\"error\", {prefer: \"double\"}],\n            \"svelte/html-self-closing\": [\"error\", {\"void\": \"always\", \"component\": \"always\", \"svelte\": \"always\", \"normal\": \"ignore\"}],\n            \"svelte/indent\": \"off\",\n            \"svelte/max-attributes-per-line\": \"off\",\n            \"svelte/mustache-spacing\": \"error\",\n            \"svelte/no-extra-reactive-curlies\": \"error\",\n            // \"svelte/no-restricted-html-elements\": \"error\",\n            \"svelte/no-spaces-around-equal-signs-in-attribute\": \"error\",\n            \"svelte/prefer-class-directive\": [\"error\", {prefer: \"always\"}],\n            \"svelte/prefer-style-directive\": \"error\",\n            \"svelte/shorthand-attribute\": \"error\",\n            \"svelte/shorthand-directive\": \"error\",\n            \"svelte/sort-attributes\": \"off\",\n            \"svelte/spaced-html-comment\": \"error\",\n\n            // Extension Rules\n            \"svelte/no-inner-declarations\": \"error\",\n            \"svelte/no-trailing-spaces\": \"error\",\n\n            // SvelteKit\n            \"svelte/no-goto-without-base\": \"error\",\n\n            // System\n            \"svelte/comment-directive\": [\"error\", {reportUnusedDisableDirectives: true}],\n            \"svelte/system\": \"error\",\n        },\n        languageOptions: {\n            globals: {\n                $state: false\n            }\n        }\n    }\n];\n```\n\n```json ghostty-config/package-lock.json\n{\n    \"name\": \"ghostty-config\",\n    \"version\": \"0.0.1\",\n    \"lockfileVersion\": 3,\n    \"requires\": true,\n    \"packages\": {\n        \"\": {\n            \"name\": \"ghostty-config\",\n            \"version\": \"0.0.1\",\n            \"license\": \"Apache-2.0\",\n            \"dependencies\": {\n                \"@fontsource-variable/inter\": \"^5.0.20\"\n            },\n            \"devDependencies\": {\n                \"@neoconfetti/svelte\": \"^2.2.1\",\n                \"@sveltejs/adapter-auto\": \"^3.2.4\",\n                \"@sveltejs/adapter-static\": \"^3.0.4\",\n                \"@sveltejs/kit\": \"^2.5.24\",\n                \"@sveltejs/vite-plugin-svelte\": \"^4.0.0-next.6\",\n                \"@types/eslint\": \"^9.6.0\",\n                \"eslint\": \"^9.9.0\",\n                \"eslint-config-prettier\": \"^9.1.0\",\n                \"eslint-plugin-svelte\": \"^2.43.0\",\n                \"globals\": \"^15.9.0\",\n                \"prettier\": \"^3.3.3\",\n                \"prettier-plugin-svelte\": \"^3.2.6\",\n                \"svelte\": \"^5.0.0-next.1\",\n                \"svelte-check\": \"^3.8.6\",\n                \"typescript\": \"^5.5.4\",\n                \"typescript-eslint\": \"^8.2.0\",\n                \"vite\": \"^5.4.2\",\n                \"vitest\": \"^2.0.5\"\n            }\n        },\n        \"node_modules/@ampproject/remapping\": {\n            \"version\": \"2.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz\",\n            \"integrity\": \"sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"dependencies\": {\n                \"@jridgewell/gen-mapping\": \"^0.3.5\",\n                \"@jridgewell/trace-mapping\": \"^0.3.24\"\n            },\n            \"engines\": {\n                \"node\": \">=6.0.0\"\n            }\n        },\n        \"node_modules/@esbuild/aix-ppc64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz\",\n            \"integrity\": \"sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==\",\n            \"cpu\": [\n                \"ppc64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"aix\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/android-arm\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz\",\n            \"integrity\": \"sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==\",\n            \"cpu\": [\n                \"arm\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"android\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/android-arm64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz\",\n            \"integrity\": \"sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"android\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/android-x64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz\",\n            \"integrity\": \"sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"android\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/darwin-arm64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz\",\n            \"integrity\": \"sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"darwin\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/darwin-x64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz\",\n            \"integrity\": \"sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"darwin\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/freebsd-arm64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz\",\n            \"integrity\": \"sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"freebsd\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/freebsd-x64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz\",\n            \"integrity\": \"sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"freebsd\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/linux-arm\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz\",\n            \"integrity\": \"sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==\",\n            \"cpu\": [\n                \"arm\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/linux-arm64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz\",\n            \"integrity\": \"sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/linux-ia32\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz\",\n            \"integrity\": \"sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==\",\n            \"cpu\": [\n                \"ia32\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/linux-loong64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz\",\n            \"integrity\": \"sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==\",\n            \"cpu\": [\n                \"loong64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/linux-mips64el\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz\",\n            \"integrity\": \"sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==\",\n            \"cpu\": [\n                \"mips64el\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/linux-ppc64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz\",\n            \"integrity\": \"sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==\",\n            \"cpu\": [\n                \"ppc64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/linux-riscv64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz\",\n            \"integrity\": \"sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==\",\n            \"cpu\": [\n                \"riscv64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/linux-s390x\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz\",\n            \"integrity\": \"sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==\",\n            \"cpu\": [\n                \"s390x\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/linux-x64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz\",\n            \"integrity\": \"sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/netbsd-x64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz\",\n            \"integrity\": \"sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"netbsd\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/openbsd-x64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz\",\n            \"integrity\": \"sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"openbsd\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/sunos-x64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz\",\n            \"integrity\": \"sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"sunos\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/win32-arm64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz\",\n            \"integrity\": \"sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"win32\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/win32-ia32\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz\",\n            \"integrity\": \"sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==\",\n            \"cpu\": [\n                \"ia32\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"win32\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@esbuild/win32-x64\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz\",\n            \"integrity\": \"sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"win32\"\n            ],\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/@eslint-community/eslint-utils\": {\n            \"version\": \"4.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz\",\n            \"integrity\": \"sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"eslint-visitor-keys\": \"^3.3.0\"\n            },\n            \"engines\": {\n                \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n            },\n            \"peerDependencies\": {\n                \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\"\n            }\n        },\n        \"node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys\": {\n            \"version\": \"3.4.3\",\n            \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n            \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"engines\": {\n                \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/eslint\"\n            }\n        },\n        \"node_modules/@eslint-community/regexpp\": {\n            \"version\": \"4.11.0\",\n            \"resolved\": \"https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.11.0.tgz\",\n            \"integrity\": \"sha512-G/M/tIiMrTAxEWRfLfQJMmGNX28IxBg4PBz8XqQhqUHLFI6TL2htpIB1iQCj144V5ee/JaKyT9/WZ0MGZWfA7A==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \"^12.0.0 || ^14.0.0 || >=16.0.0\"\n            }\n        },\n        \"node_modules/@eslint/config-array\": {\n            \"version\": \"0.17.1\",\n            \"resolved\": \"https://registry.npmjs.org/@eslint/config-array/-/config-array-0.17.1.tgz\",\n            \"integrity\": \"sha512-BlYOpej8AQ8Ev9xVqroV7a02JK3SkBAaN9GfMMH9W6Ch8FlQlkjGw4Ir7+FgYwfirivAf4t+GtzuAxqfukmISA==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"dependencies\": {\n                \"@eslint/object-schema\": \"^2.1.4\",\n                \"debug\": \"^4.3.1\",\n                \"minimatch\": \"^3.1.2\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            }\n        },\n        \"node_modules/@eslint/eslintrc\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.1.0.tgz\",\n            \"integrity\": \"sha512-4Bfj15dVJdoy3RfZmmo86RK1Fwzn6SstsvK9JS+BaVKqC6QQQQyXekNaC+g+LKNgkQ+2VhGAzm6hO40AhMR3zQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"ajv\": \"^6.12.4\",\n                \"debug\": \"^4.3.2\",\n                \"espree\": \"^10.0.1\",\n                \"globals\": \"^14.0.0\",\n                \"ignore\": \"^5.2.0\",\n                \"import-fresh\": \"^3.2.1\",\n                \"js-yaml\": \"^4.1.0\",\n                \"minimatch\": \"^3.1.2\",\n                \"strip-json-comments\": \"^3.1.1\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/eslint\"\n            }\n        },\n        \"node_modules/@eslint/eslintrc/node_modules/globals\": {\n            \"version\": \"14.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/globals/-/globals-14.0.0.tgz\",\n            \"integrity\": \"sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=18\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/@eslint/js\": {\n            \"version\": \"9.9.0\",\n            \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-9.9.0.tgz\",\n            \"integrity\": \"sha512-hhetes6ZHP3BlXLxmd8K2SNgkhNSi+UcecbnwWKwpP7kyi/uC75DJ1lOOBO3xrC4jyojtGE3YxKZPHfk4yrgug==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            }\n        },\n        \"node_modules/@eslint/object-schema\": {\n            \"version\": \"2.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.4.tgz\",\n            \"integrity\": \"sha512-BsWiH1yFGjXXS2yvrf5LyuoSIIbPrGUWob917o+BTKuZ7qJdxX8aJLRxs1fS9n6r7vESrq1OUqb68dANcFXuQQ==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            }\n        },\n        \"node_modules/@fontsource-variable/inter\": {\n            \"version\": \"5.0.20\",\n            \"resolved\": \"https://registry.npmjs.org/@fontsource-variable/inter/-/inter-5.0.20.tgz\",\n            \"integrity\": \"sha512-dhzG4Zls/tIrf8h0FhTNi8jT/uFwNhdTY2vKe6DYqoXDYOfEcTVZDyh1hKml1rlLT44Y7OoKoGz8w7czDW7twQ==\",\n            \"license\": \"OFL-1.1\"\n        },\n        \"node_modules/@humanwhocodes/module-importer\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n            \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"engines\": {\n                \"node\": \">=12.22\"\n            },\n            \"funding\": {\n                \"type\": \"github\",\n                \"url\": \"https://github.com/sponsors/nzakas\"\n            }\n        },\n        \"node_modules/@humanwhocodes/retry\": {\n            \"version\": \"0.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.0.tgz\",\n            \"integrity\": \"sha512-d2CGZR2o7fS6sWB7DG/3a95bGKQyHMACZ5aW8qGkkqQpUoZV6C0X7Pc7l4ZNMZkfNBf4VWNe9E1jRsf0G146Ew==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"engines\": {\n                \"node\": \">=18.18\"\n            },\n            \"funding\": {\n                \"type\": \"github\",\n                \"url\": \"https://github.com/sponsors/nzakas\"\n            }\n        },\n        \"node_modules/@jridgewell/gen-mapping\": {\n            \"version\": \"0.3.5\",\n            \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.5.tgz\",\n            \"integrity\": \"sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@jridgewell/set-array\": \"^1.2.1\",\n                \"@jridgewell/sourcemap-codec\": \"^1.4.10\",\n                \"@jridgewell/trace-mapping\": \"^0.3.24\"\n            },\n            \"engines\": {\n                \"node\": \">=6.0.0\"\n            }\n        },\n        \"node_modules/@jridgewell/resolve-uri\": {\n            \"version\": \"3.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz\",\n            \"integrity\": \"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=6.0.0\"\n            }\n        },\n        \"node_modules/@jridgewell/set-array\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz\",\n            \"integrity\": \"sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=6.0.0\"\n            }\n        },\n        \"node_modules/@jridgewell/sourcemap-codec\": {\n            \"version\": \"1.5.0\",\n            \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz\",\n            \"integrity\": \"sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/@jridgewell/trace-mapping\": {\n            \"version\": \"0.3.25\",\n            \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz\",\n            \"integrity\": \"sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@jridgewell/resolve-uri\": \"^3.1.0\",\n                \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n            }\n        },\n        \"node_modules/@neoconfetti/svelte\": {\n            \"version\": \"2.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/@neoconfetti/svelte/-/svelte-2.2.1.tgz\",\n            \"integrity\": \"sha512-2Ts0Rxaf6clW2qG+AKhTwpl01AAyZEAe03XeuQ7Vp+qYIaM3ycuI94j546fmEkUxwACwGI3Zl2cZ/pncTuNcJg==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/@nodelib/fs.scandir\": {\n            \"version\": \"2.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n            \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@nodelib/fs.stat\": \"2.0.5\",\n                \"run-parallel\": \"^1.1.9\"\n            },\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/@nodelib/fs.stat\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n            \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/@nodelib/fs.walk\": {\n            \"version\": \"1.2.8\",\n            \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n            \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@nodelib/fs.scandir\": \"2.1.5\",\n                \"fastq\": \"^1.6.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/@polka/url\": {\n            \"version\": \"1.0.0-next.25\",\n            \"resolved\": \"https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.25.tgz\",\n            \"integrity\": \"sha512-j7P6Rgr3mmtdkeDGTe0E/aYyWEWVtc5yFXtHCRHs28/jptDEWfaVOc5T7cblqy1XKPPfCxJc/8DwQ5YgLOZOVQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/@rollup/rollup-android-arm-eabi\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.21.0.tgz\",\n            \"integrity\": \"sha512-WTWD8PfoSAJ+qL87lE7votj3syLavxunWhzCnx3XFxFiI/BA/r3X7MUM8dVrH8rb2r4AiO8jJsr3ZjdaftmnfA==\",\n            \"cpu\": [\n                \"arm\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"android\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-android-arm64\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.21.0.tgz\",\n            \"integrity\": \"sha512-a1sR2zSK1B4eYkiZu17ZUZhmUQcKjk2/j9Me2IDjk1GHW7LB5Z35LEzj9iJch6gtUfsnvZs1ZNyDW2oZSThrkA==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"android\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-darwin-arm64\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.21.0.tgz\",\n            \"integrity\": \"sha512-zOnKWLgDld/svhKO5PD9ozmL6roy5OQ5T4ThvdYZLpiOhEGY+dp2NwUmxK0Ld91LrbjrvtNAE0ERBwjqhZTRAA==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"darwin\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-darwin-x64\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.21.0.tgz\",\n            \"integrity\": \"sha512-7doS8br0xAkg48SKE2QNtMSFPFUlRdw9+votl27MvT46vo44ATBmdZdGysOevNELmZlfd+NEa0UYOA8f01WSrg==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"darwin\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-arm-gnueabihf\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.21.0.tgz\",\n            \"integrity\": \"sha512-pWJsfQjNWNGsoCq53KjMtwdJDmh/6NubwQcz52aEwLEuvx08bzcy6tOUuawAOncPnxz/3siRtd8hiQ32G1y8VA==\",\n            \"cpu\": [\n                \"arm\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-arm-musleabihf\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.21.0.tgz\",\n            \"integrity\": \"sha512-efRIANsz3UHZrnZXuEvxS9LoCOWMGD1rweciD6uJQIx2myN3a8Im1FafZBzh7zk1RJ6oKcR16dU3UPldaKd83w==\",\n            \"cpu\": [\n                \"arm\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-arm64-gnu\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.21.0.tgz\",\n            \"integrity\": \"sha512-ZrPhydkTVhyeGTW94WJ8pnl1uroqVHM3j3hjdquwAcWnmivjAwOYjTEAuEDeJvGX7xv3Z9GAvrBkEzCgHq9U1w==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-arm64-musl\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.21.0.tgz\",\n            \"integrity\": \"sha512-cfaupqd+UEFeURmqNP2eEvXqgbSox/LHOyN9/d2pSdV8xTrjdg3NgOFJCtc1vQ/jEke1qD0IejbBfxleBPHnPw==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-powerpc64le-gnu\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.21.0.tgz\",\n            \"integrity\": \"sha512-ZKPan1/RvAhrUylwBXC9t7B2hXdpb/ufeu22pG2psV7RN8roOfGurEghw1ySmX/CmDDHNTDDjY3lo9hRlgtaHg==\",\n            \"cpu\": [\n                \"ppc64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-riscv64-gnu\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.21.0.tgz\",\n            \"integrity\": \"sha512-H1eRaCwd5E8eS8leiS+o/NqMdljkcb1d6r2h4fKSsCXQilLKArq6WS7XBLDu80Yz+nMqHVFDquwcVrQmGr28rg==\",\n            \"cpu\": [\n                \"riscv64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-s390x-gnu\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.21.0.tgz\",\n            \"integrity\": \"sha512-zJ4hA+3b5tu8u7L58CCSI0A9N1vkfwPhWd/puGXwtZlsB5bTkwDNW/+JCU84+3QYmKpLi+XvHdmrlwUwDA6kqw==\",\n            \"cpu\": [\n                \"s390x\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-x64-gnu\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.21.0.tgz\",\n            \"integrity\": \"sha512-e2hrvElFIh6kW/UNBQK/kzqMNY5mO+67YtEh9OA65RM5IJXYTWiXjX6fjIiPaqOkBthYF1EqgiZ6OXKcQsM0hg==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-x64-musl\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.21.0.tgz\",\n            \"integrity\": \"sha512-1vvmgDdUSebVGXWX2lIcgRebqfQSff0hMEkLJyakQ9JQUbLDkEaMsPTLOmyccyC6IJ/l3FZuJbmrBw/u0A0uCQ==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-win32-arm64-msvc\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.21.0.tgz\",\n            \"integrity\": \"sha512-s5oFkZ/hFcrlAyBTONFY1TWndfyre1wOMwU+6KCpm/iatybvrRgmZVM+vCFwxmC5ZhdlgfE0N4XorsDpi7/4XQ==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"win32\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-win32-ia32-msvc\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.21.0.tgz\",\n            \"integrity\": \"sha512-G9+TEqRnAA6nbpqyUqgTiopmnfgnMkR3kMukFBDsiyy23LZvUCpiUwjTRx6ezYCjJODXrh52rBR9oXvm+Fp5wg==\",\n            \"cpu\": [\n                \"ia32\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"win32\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-win32-x64-msvc\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.21.0.tgz\",\n            \"integrity\": \"sha512-2jsCDZwtQvRhejHLfZ1JY6w6kEuEtfF9nzYsZxzSlNVKDX+DpsDJ+Rbjkm74nvg2rdx0gwBS+IMdvwJuq3S9pQ==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"win32\"\n            ]\n        },\n        \"node_modules/@sveltejs/adapter-auto\": {\n            \"version\": \"3.2.4\",\n            \"resolved\": \"https://registry.npmjs.org/@sveltejs/adapter-auto/-/adapter-auto-3.2.4.tgz\",\n            \"integrity\": \"sha512-a64AKYbfTUrVwU0xslzv1Jf3M8bj0IwhptaXmhgIkjXspBXhD0od9JiItQHchijpLMGdEDcYBlvqySkEawv6mQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"import-meta-resolve\": \"^4.1.0\"\n            },\n            \"peerDependencies\": {\n                \"@sveltejs/kit\": \"^2.0.0\"\n            }\n        },\n        \"node_modules/@sveltejs/adapter-static\": {\n            \"version\": \"3.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/@sveltejs/adapter-static/-/adapter-static-3.0.4.tgz\",\n            \"integrity\": \"sha512-Qm4GAHCnRXwfWG9/AtnQ7mqjyjTs7i0Opyb8H2KH9rMR7fLxqiPx/tXeoE6HHo66+72CjyOb4nFH3lrejY4vzA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"peerDependencies\": {\n                \"@sveltejs/kit\": \"^2.0.0\"\n            }\n        },\n        \"node_modules/@sveltejs/kit\": {\n            \"version\": \"2.5.24\",\n            \"resolved\": \"https://registry.npmjs.org/@sveltejs/kit/-/kit-2.5.24.tgz\",\n            \"integrity\": \"sha512-Nr2oxsCsDfEkdS/zzQQQbsPYTbu692Qs3/iE3L7VHzCVjG2+WujF9oMUozWI7GuX98KxYSoPMlAsfmDLSg44hQ==\",\n            \"dev\": true,\n            \"hasInstallScript\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@types/cookie\": \"^0.6.0\",\n                \"cookie\": \"^0.6.0\",\n                \"devalue\": \"^5.0.0\",\n                \"esm-env\": \"^1.0.0\",\n                \"import-meta-resolve\": \"^4.1.0\",\n                \"kleur\": \"^4.1.5\",\n                \"magic-string\": \"^0.30.5\",\n                \"mrmime\": \"^2.0.0\",\n                \"sade\": \"^1.8.1\",\n                \"set-cookie-parser\": \"^2.6.0\",\n                \"sirv\": \"^2.0.4\",\n                \"tiny-glob\": \"^0.2.9\"\n            },\n            \"bin\": {\n                \"svelte-kit\": \"svelte-kit.js\"\n            },\n            \"engines\": {\n                \"node\": \">=18.13\"\n            },\n            \"peerDependencies\": {\n                \"@sveltejs/vite-plugin-svelte\": \"^3.0.0 || ^4.0.0-next.1\",\n                \"svelte\": \"^4.0.0 || ^5.0.0-next.0\",\n                \"vite\": \"^5.0.3\"\n            }\n        },\n        \"node_modules/@sveltejs/vite-plugin-svelte\": {\n            \"version\": \"4.0.0-next.6\",\n            \"resolved\": \"https://registry.npmjs.org/@sveltejs/vite-plugin-svelte/-/vite-plugin-svelte-4.0.0-next.6.tgz\",\n            \"integrity\": \"sha512-7+bEFN5F9pthG6nOEHNz9yioHxNXK6yl+0GnTy9WOfxN/SvPykkH/Hs6MqTGjo47a9G2q3QXQnzuxG5WXNX4Tg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@sveltejs/vite-plugin-svelte-inspector\": \"^3.0.0-next.0||^3.0.0\",\n                \"debug\": \"^4.3.6\",\n                \"deepmerge\": \"^4.3.1\",\n                \"kleur\": \"^4.1.5\",\n                \"magic-string\": \"^0.30.11\",\n                \"vitefu\": \"^0.2.5\"\n            },\n            \"engines\": {\n                \"node\": \"^18.0.0 || ^20.0.0 || >=22\"\n            },\n            \"peerDependencies\": {\n                \"svelte\": \"^5.0.0-next.96 || ^5.0.0\",\n                \"vite\": \"^5.0.0\"\n            }\n        },\n        \"node_modules/@sveltejs/vite-plugin-svelte-inspector\": {\n            \"version\": \"3.0.0-next.3\",\n            \"resolved\": \"https://registry.npmjs.org/@sveltejs/vite-plugin-svelte-inspector/-/vite-plugin-svelte-inspector-3.0.0-next.3.tgz\",\n            \"integrity\": \"sha512-kuGJ2CZ5lAw3gKF8Kw0AfKtUJWbwdlDHY14K413B0MCyrzvQvsKTorwmwZcky0+QqY6RnVIZ/5FttB9bQmkLXg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"debug\": \"^4.3.5\"\n            },\n            \"engines\": {\n                \"node\": \"^18.0.0 || ^20.0.0 || >=22\"\n            },\n            \"peerDependencies\": {\n                \"@sveltejs/vite-plugin-svelte\": \"^4.0.0-next.0||^4.0.0\",\n                \"svelte\": \"^5.0.0-next.96 || ^5.0.0\",\n                \"vite\": \"^5.0.0\"\n            }\n        },\n        \"node_modules/@types/cookie\": {\n            \"version\": \"0.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/@types/cookie/-/cookie-0.6.0.tgz\",\n            \"integrity\": \"sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/@types/eslint\": {\n            \"version\": \"9.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/@types/eslint/-/eslint-9.6.0.tgz\",\n            \"integrity\": \"sha512-gi6WQJ7cHRgZxtkQEoyHMppPjq9Kxo5Tjn2prSKDSmZrCz8TZ3jSRCeTJm+WoM+oB0WG37bRqLzaaU3q7JypGg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@types/estree\": \"*\",\n                \"@types/json-schema\": \"*\"\n            }\n        },\n        \"node_modules/@types/estree\": {\n            \"version\": \"1.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.5.tgz\",\n            \"integrity\": \"sha512-/kYRxGDLWzHOB7q+wtSUQlFrtcdUccpfy+X+9iMBpHK8QLLhx2wIPYuS5DYtR9Wa/YlZAbIovy7qVdB1Aq6Lyw==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/@types/json-schema\": {\n            \"version\": \"7.0.15\",\n            \"resolved\": \"https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz\",\n            \"integrity\": \"sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/@types/pug\": {\n            \"version\": \"2.0.10\",\n            \"resolved\": \"https://registry.npmjs.org/@types/pug/-/pug-2.0.10.tgz\",\n            \"integrity\": \"sha512-Sk/uYFOBAB7mb74XcpizmH0KOR2Pv3D2Hmrh1Dmy5BmK3MpdSa5kqZcg6EKBdklU0bFXX9gCfzvpnyUehrPIuA==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/@typescript-eslint/eslint-plugin\": {\n            \"version\": \"8.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.2.0.tgz\",\n            \"integrity\": \"sha512-02tJIs655em7fvt9gps/+4k4OsKULYGtLBPJfOsmOq1+3cdClYiF0+d6mHu6qDnTcg88wJBkcPLpQhq7FyDz0A==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@eslint-community/regexpp\": \"^4.10.0\",\n                \"@typescript-eslint/scope-manager\": \"8.2.0\",\n                \"@typescript-eslint/type-utils\": \"8.2.0\",\n                \"@typescript-eslint/utils\": \"8.2.0\",\n                \"@typescript-eslint/visitor-keys\": \"8.2.0\",\n                \"graphemer\": \"^1.4.0\",\n                \"ignore\": \"^5.3.1\",\n                \"natural-compare\": \"^1.4.0\",\n                \"ts-api-utils\": \"^1.3.0\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/typescript-eslint\"\n            },\n            \"peerDependencies\": {\n                \"@typescript-eslint/parser\": \"^8.0.0 || ^8.0.0-alpha.0\",\n                \"eslint\": \"^8.57.0 || ^9.0.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"typescript\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/@typescript-eslint/parser\": {\n            \"version\": \"8.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.2.0.tgz\",\n            \"integrity\": \"sha512-j3Di+o0lHgPrb7FxL3fdEy6LJ/j2NE8u+AP/5cQ9SKb+JLH6V6UHDqJ+e0hXBkHP1wn1YDFjYCS9LBQsZDlDEg==\",\n            \"dev\": true,\n            \"license\": \"BSD-2-Clause\",\n            \"dependencies\": {\n                \"@typescript-eslint/scope-manager\": \"8.2.0\",\n                \"@typescript-eslint/types\": \"8.2.0\",\n                \"@typescript-eslint/typescript-estree\": \"8.2.0\",\n                \"@typescript-eslint/visitor-keys\": \"8.2.0\",\n                \"debug\": \"^4.3.4\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/typescript-eslint\"\n            },\n            \"peerDependencies\": {\n                \"eslint\": \"^8.57.0 || ^9.0.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"typescript\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/@typescript-eslint/scope-manager\": {\n            \"version\": \"8.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.2.0.tgz\",\n            \"integrity\": \"sha512-OFn80B38yD6WwpoHU2Tz/fTz7CgFqInllBoC3WP+/jLbTb4gGPTy9HBSTsbDWkMdN55XlVU0mMDYAtgvlUspGw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@typescript-eslint/types\": \"8.2.0\",\n                \"@typescript-eslint/visitor-keys\": \"8.2.0\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/typescript-eslint\"\n            }\n        },\n        \"node_modules/@typescript-eslint/type-utils\": {\n            \"version\": \"8.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.2.0.tgz\",\n            \"integrity\": \"sha512-g1CfXGFMQdT5S+0PSO0fvGXUaiSkl73U1n9LTK5aRAFnPlJ8dLKkXr4AaLFvPedW8lVDoMgLLE3JN98ZZfsj0w==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@typescript-eslint/typescript-estree\": \"8.2.0\",\n                \"@typescript-eslint/utils\": \"8.2.0\",\n                \"debug\": \"^4.3.4\",\n                \"ts-api-utils\": \"^1.3.0\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/typescript-eslint\"\n            },\n            \"peerDependenciesMeta\": {\n                \"typescript\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/@typescript-eslint/types\": {\n            \"version\": \"8.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/types/-/types-8.2.0.tgz\",\n            \"integrity\": \"sha512-6a9QSK396YqmiBKPkJtxsgZZZVjYQ6wQ/TlI0C65z7vInaETuC6HAHD98AGLC8DyIPqHytvNuS8bBVvNLKyqvQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/typescript-eslint\"\n            }\n        },\n        \"node_modules/@typescript-eslint/typescript-estree\": {\n            \"version\": \"8.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.2.0.tgz\",\n            \"integrity\": \"sha512-kiG4EDUT4dImplOsbh47B1QnNmXSoUqOjWDvCJw/o8LgfD0yr7k2uy54D5Wm0j4t71Ge1NkynGhpWdS0dEIAUA==\",\n            \"dev\": true,\n            \"license\": \"BSD-2-Clause\",\n            \"dependencies\": {\n                \"@typescript-eslint/types\": \"8.2.0\",\n                \"@typescript-eslint/visitor-keys\": \"8.2.0\",\n                \"debug\": \"^4.3.4\",\n                \"globby\": \"^11.1.0\",\n                \"is-glob\": \"^4.0.3\",\n                \"minimatch\": \"^9.0.4\",\n                \"semver\": \"^7.6.0\",\n                \"ts-api-utils\": \"^1.3.0\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/typescript-eslint\"\n            },\n            \"peerDependenciesMeta\": {\n                \"typescript\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n            \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"balanced-match\": \"^1.0.0\"\n            }\n        },\n        \"node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch\": {\n            \"version\": \"9.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n            \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"brace-expansion\": \"^2.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=16 || 14 >=14.17\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/isaacs\"\n            }\n        },\n        \"node_modules/@typescript-eslint/utils\": {\n            \"version\": \"8.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.2.0.tgz\",\n            \"integrity\": \"sha512-O46eaYKDlV3TvAVDNcoDzd5N550ckSe8G4phko++OCSC1dYIb9LTc3HDGYdWqWIAT5qDUKphO6sd9RrpIJJPfg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@eslint-community/eslint-utils\": \"^4.4.0\",\n                \"@typescript-eslint/scope-manager\": \"8.2.0\",\n                \"@typescript-eslint/types\": \"8.2.0\",\n                \"@typescript-eslint/typescript-estree\": \"8.2.0\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/typescript-eslint\"\n            },\n            \"peerDependencies\": {\n                \"eslint\": \"^8.57.0 || ^9.0.0\"\n            }\n        },\n        \"node_modules/@typescript-eslint/visitor-keys\": {\n            \"version\": \"8.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.2.0.tgz\",\n            \"integrity\": \"sha512-sbgsPMW9yLvS7IhCi8IpuK1oBmtbWUNP+hBdwl/I9nzqVsszGnNGti5r9dUtF5RLivHUFFIdRvLiTsPhzSyJ3Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@typescript-eslint/types\": \"8.2.0\",\n                \"eslint-visitor-keys\": \"^3.4.3\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/typescript-eslint\"\n            }\n        },\n        \"node_modules/@typescript-eslint/visitor-keys/node_modules/eslint-visitor-keys\": {\n            \"version\": \"3.4.3\",\n            \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n            \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"engines\": {\n                \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/eslint\"\n            }\n        },\n        \"node_modules/@vitest/expect\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@vitest/expect/-/expect-2.0.5.tgz\",\n            \"integrity\": \"sha512-yHZtwuP7JZivj65Gxoi8upUN2OzHTi3zVfjwdpu2WrvCZPLwsJ2Ey5ILIPccoW23dd/zQBlJ4/dhi7DWNyXCpA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@vitest/spy\": \"2.0.5\",\n                \"@vitest/utils\": \"2.0.5\",\n                \"chai\": \"^5.1.1\",\n                \"tinyrainbow\": \"^1.2.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/vitest\"\n            }\n        },\n        \"node_modules/@vitest/pretty-format\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@vitest/pretty-format/-/pretty-format-2.0.5.tgz\",\n            \"integrity\": \"sha512-h8k+1oWHfwTkyTkb9egzwNMfJAEx4veaPSnMeKbVSjp4euqGSbQlm5+6VHwTr7u4FJslVVsUG5nopCaAYdOmSQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"tinyrainbow\": \"^1.2.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/vitest\"\n            }\n        },\n        \"node_modules/@vitest/runner\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@vitest/runner/-/runner-2.0.5.tgz\",\n            \"integrity\": \"sha512-TfRfZa6Bkk9ky4tW0z20WKXFEwwvWhRY+84CnSEtq4+3ZvDlJyY32oNTJtM7AW9ihW90tX/1Q78cb6FjoAs+ig==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@vitest/utils\": \"2.0.5\",\n                \"pathe\": \"^1.1.2\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/vitest\"\n            }\n        },\n        \"node_modules/@vitest/snapshot\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@vitest/snapshot/-/snapshot-2.0.5.tgz\",\n            \"integrity\": \"sha512-SgCPUeDFLaM0mIUHfaArq8fD2WbaXG/zVXjRupthYfYGzc8ztbFbu6dUNOblBG7XLMR1kEhS/DNnfCZ2IhdDew==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@vitest/pretty-format\": \"2.0.5\",\n                \"magic-string\": \"^0.30.10\",\n                \"pathe\": \"^1.1.2\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/vitest\"\n            }\n        },\n        \"node_modules/@vitest/spy\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@vitest/spy/-/spy-2.0.5.tgz\",\n            \"integrity\": \"sha512-c/jdthAhvJdpfVuaexSrnawxZz6pywlTPe84LUB2m/4t3rl2fTo9NFGBG4oWgaD+FTgDDV8hJ/nibT7IfH3JfA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"tinyspy\": \"^3.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/vitest\"\n            }\n        },\n        \"node_modules/@vitest/utils\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@vitest/utils/-/utils-2.0.5.tgz\",\n            \"integrity\": \"sha512-d8HKbqIcya+GR67mkZbrzhS5kKhtp8dQLcmRZLGTscGVg7yImT82cIrhtn2L8+VujWcy6KZweApgNmPsTAO/UQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@vitest/pretty-format\": \"2.0.5\",\n                \"estree-walker\": \"^3.0.3\",\n                \"loupe\": \"^3.1.1\",\n                \"tinyrainbow\": \"^1.2.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/vitest\"\n            }\n        },\n        \"node_modules/acorn\": {\n            \"version\": \"8.12.1\",\n            \"resolved\": \"https://registry.npmjs.org/acorn/-/acorn-8.12.1.tgz\",\n            \"integrity\": \"sha512-tcpGyI9zbizT9JbV6oYE477V6mTlXvvi0T0G3SNIYE2apm/G5huBa1+K89VGeovbg+jycCrfhl3ADxErOuO6Jg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"bin\": {\n                \"acorn\": \"bin/acorn\"\n            },\n            \"engines\": {\n                \"node\": \">=0.4.0\"\n            }\n        },\n        \"node_modules/acorn-jsx\": {\n            \"version\": \"5.3.2\",\n            \"resolved\": \"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz\",\n            \"integrity\": \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"peerDependencies\": {\n                \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\"\n            }\n        },\n        \"node_modules/acorn-typescript\": {\n            \"version\": \"1.4.13\",\n            \"resolved\": \"https://registry.npmjs.org/acorn-typescript/-/acorn-typescript-1.4.13.tgz\",\n            \"integrity\": \"sha512-xsc9Xv0xlVfwp2o7sQ+GCQ1PgbkdcpWdTzrwXxO3xDMTAywVS3oXVOcOHuRjAPkS4P9b+yc/qNF15460v+jp4Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"peerDependencies\": {\n                \"acorn\": \">=8.9.0\"\n            }\n        },\n        \"node_modules/ajv\": {\n            \"version\": \"6.12.6\",\n            \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz\",\n            \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"fast-deep-equal\": \"^3.1.1\",\n                \"fast-json-stable-stringify\": \"^2.0.0\",\n                \"json-schema-traverse\": \"^0.4.1\",\n                \"uri-js\": \"^4.2.2\"\n            },\n            \"funding\": {\n                \"type\": \"github\",\n                \"url\": \"https://github.com/sponsors/epoberezkin\"\n            }\n        },\n        \"node_modules/ansi-regex\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n            \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/ansi-styles\": {\n            \"version\": \"4.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n            \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"color-convert\": \"^2.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n            }\n        },\n        \"node_modules/anymatch\": {\n            \"version\": \"3.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n            \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"normalize-path\": \"^3.0.0\",\n                \"picomatch\": \"^2.0.4\"\n            },\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/argparse\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n            \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n            \"dev\": true,\n            \"license\": \"Python-2.0\"\n        },\n        \"node_modules/aria-query\": {\n            \"version\": \"5.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.3.0.tgz\",\n            \"integrity\": \"sha512-b0P0sZPKtyu8HkeRAfCq0IfURZK+SuwMjY1UXGBU27wpAiTwQAIlq56IbIO+ytk/JjS1fMR14ee5WBBfKi5J6A==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"dependencies\": {\n                \"dequal\": \"^2.0.3\"\n            }\n        },\n        \"node_modules/array-union\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz\",\n            \"integrity\": \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/assertion-error\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/assertion-error/-/assertion-error-2.0.1.tgz\",\n            \"integrity\": \"sha512-Izi8RQcffqCeNVgFigKli1ssklIbpHnCYc6AknXGYoB6grJqyeby7jv12JUQgmTAnIDnbck1uxksT4dzN3PWBA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/axobject-query\": {\n            \"version\": \"4.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz\",\n            \"integrity\": \"sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"engines\": {\n                \"node\": \">= 0.4\"\n            }\n        },\n        \"node_modules/balanced-match\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n            \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/binary-extensions\": {\n            \"version\": \"2.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\n            \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/brace-expansion\": {\n            \"version\": \"1.1.11\",\n            \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\n            \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"balanced-match\": \"^1.0.0\",\n                \"concat-map\": \"0.0.1\"\n            }\n        },\n        \"node_modules/braces\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n            \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"fill-range\": \"^7.1.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/buffer-crc32\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-1.0.0.tgz\",\n            \"integrity\": \"sha512-Db1SbgBS/fg/392AblrMJk97KggmvYhr4pB5ZIMTWtaivCPMWLkmb7m21cJvpvgK+J3nsU2CmmixNBZx4vFj/w==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8.0.0\"\n            }\n        },\n        \"node_modules/cac\": {\n            \"version\": \"6.7.14\",\n            \"resolved\": \"https://registry.npmjs.org/cac/-/cac-6.7.14.tgz\",\n            \"integrity\": \"sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/callsites\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n            \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/chai\": {\n            \"version\": \"5.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/chai/-/chai-5.1.1.tgz\",\n            \"integrity\": \"sha512-pT1ZgP8rPNqUgieVaEY+ryQr6Q4HXNg8Ei9UnLUrjN4IA7dvQC5JB+/kxVcPNDHyBcc/26CXPkbNzq3qwrOEKA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"assertion-error\": \"^2.0.1\",\n                \"check-error\": \"^2.1.1\",\n                \"deep-eql\": \"^5.0.1\",\n                \"loupe\": \"^3.1.0\",\n                \"pathval\": \"^2.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/chalk\": {\n            \"version\": \"4.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n            \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"ansi-styles\": \"^4.1.0\",\n                \"supports-color\": \"^7.1.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n            }\n        },\n        \"node_modules/check-error\": {\n            \"version\": \"2.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/check-error/-/check-error-2.1.1.tgz\",\n            \"integrity\": \"sha512-OAlb+T7V4Op9OwdkjmguYRqncdlx5JiofwOAUkmTF+jNdHwzTaTs4sRAGpzLF3oOz5xAyDGrPgeIDFQmDOTiJw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">= 16\"\n            }\n        },\n        \"node_modules/chokidar\": {\n            \"version\": \"3.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\n            \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"anymatch\": \"~3.1.2\",\n                \"braces\": \"~3.0.2\",\n                \"glob-parent\": \"~5.1.2\",\n                \"is-binary-path\": \"~2.1.0\",\n                \"is-glob\": \"~4.0.1\",\n                \"normalize-path\": \"~3.0.0\",\n                \"readdirp\": \"~3.6.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 8.10.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://paulmillr.com/funding/\"\n            },\n            \"optionalDependencies\": {\n                \"fsevents\": \"~2.3.2\"\n            }\n        },\n        \"node_modules/chokidar/node_modules/glob-parent\": {\n            \"version\": \"5.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n            \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"is-glob\": \"^4.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 6\"\n            }\n        },\n        \"node_modules/color-convert\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n            \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"color-name\": \"~1.1.4\"\n            },\n            \"engines\": {\n                \"node\": \">=7.0.0\"\n            }\n        },\n        \"node_modules/color-name\": {\n            \"version\": \"1.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n            \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/concat-map\": {\n            \"version\": \"0.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n            \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/cookie\": {\n            \"version\": \"0.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.6.0.tgz\",\n            \"integrity\": \"sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">= 0.6\"\n            }\n        },\n        \"node_modules/cross-spawn\": {\n            \"version\": \"7.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n            \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"path-key\": \"^3.1.0\",\n                \"shebang-command\": \"^2.0.0\",\n                \"which\": \"^2.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/cssesc\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz\",\n            \"integrity\": \"sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"bin\": {\n                \"cssesc\": \"bin/cssesc\"\n            },\n            \"engines\": {\n                \"node\": \">=4\"\n            }\n        },\n        \"node_modules/debug\": {\n            \"version\": \"4.3.6\",\n            \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.6.tgz\",\n            \"integrity\": \"sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"ms\": \"2.1.2\"\n            },\n            \"engines\": {\n                \"node\": \">=6.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"supports-color\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/deep-eql\": {\n            \"version\": \"5.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/deep-eql/-/deep-eql-5.0.2.tgz\",\n            \"integrity\": \"sha512-h5k/5U50IJJFpzfL6nO9jaaumfjO/f2NjK/oYB2Djzm4p9L+3T9qWpZqZ2hAbLPuuYq9wrU08WQyBTL5GbPk5Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/deep-is\": {\n            \"version\": \"0.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz\",\n            \"integrity\": \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/deepmerge\": {\n            \"version\": \"4.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n            \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/dequal\": {\n            \"version\": \"2.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz\",\n            \"integrity\": \"sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/detect-indent\": {\n            \"version\": \"6.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/detect-indent/-/detect-indent-6.1.0.tgz\",\n            \"integrity\": \"sha512-reYkTUJAZb9gUuZ2RvVCNhVHdg62RHnJ7WJl8ftMi4diZ6NWlciOzQN88pUhSELEwflJht4oQDv0F0BMlwaYtA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/devalue\": {\n            \"version\": \"5.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/devalue/-/devalue-5.0.0.tgz\",\n            \"integrity\": \"sha512-gO+/OMXF7488D+u3ue+G7Y4AA3ZmUnB3eHJXmBTgNHvr4ZNzl36A0ZtG+XCRNYCkYx/bFmw4qtkoFLa+wSrwAA==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/dir-glob\": {\n            \"version\": \"3.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz\",\n            \"integrity\": \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"path-type\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/es6-promise\": {\n            \"version\": \"3.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/es6-promise/-/es6-promise-3.3.1.tgz\",\n            \"integrity\": \"sha512-SOp9Phqvqn7jtEUxPWdWfWoLmyt2VaJ6MpvP9Comy1MceMXqE6bxvaTu4iaxpYYPzhny28Lc+M87/c2cPK6lDg==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/esbuild\": {\n            \"version\": \"0.21.5\",\n            \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz\",\n            \"integrity\": \"sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==\",\n            \"dev\": true,\n            \"hasInstallScript\": true,\n            \"license\": \"MIT\",\n            \"bin\": {\n                \"esbuild\": \"bin/esbuild\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"optionalDependencies\": {\n                \"@esbuild/aix-ppc64\": \"0.21.5\",\n                \"@esbuild/android-arm\": \"0.21.5\",\n                \"@esbuild/android-arm64\": \"0.21.5\",\n                \"@esbuild/android-x64\": \"0.21.5\",\n                \"@esbuild/darwin-arm64\": \"0.21.5\",\n                \"@esbuild/darwin-x64\": \"0.21.5\",\n                \"@esbuild/freebsd-arm64\": \"0.21.5\",\n                \"@esbuild/freebsd-x64\": \"0.21.5\",\n                \"@esbuild/linux-arm\": \"0.21.5\",\n                \"@esbuild/linux-arm64\": \"0.21.5\",\n                \"@esbuild/linux-ia32\": \"0.21.5\",\n                \"@esbuild/linux-loong64\": \"0.21.5\",\n                \"@esbuild/linux-mips64el\": \"0.21.5\",\n                \"@esbuild/linux-ppc64\": \"0.21.5\",\n                \"@esbuild/linux-riscv64\": \"0.21.5\",\n                \"@esbuild/linux-s390x\": \"0.21.5\",\n                \"@esbuild/linux-x64\": \"0.21.5\",\n                \"@esbuild/netbsd-x64\": \"0.21.5\",\n                \"@esbuild/openbsd-x64\": \"0.21.5\",\n                \"@esbuild/sunos-x64\": \"0.21.5\",\n                \"@esbuild/win32-arm64\": \"0.21.5\",\n                \"@esbuild/win32-ia32\": \"0.21.5\",\n                \"@esbuild/win32-x64\": \"0.21.5\"\n            }\n        },\n        \"node_modules/escape-string-regexp\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n            \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=10\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/eslint\": {\n            \"version\": \"9.9.0\",\n            \"resolved\": \"https://registry.npmjs.org/eslint/-/eslint-9.9.0.tgz\",\n            \"integrity\": \"sha512-JfiKJrbx0506OEerjK2Y1QlldtBxkAlLxT5OEcRF8uaQ86noDe2k31Vw9rnSWv+MXZHj7OOUV/dA0AhdLFcyvA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@eslint-community/eslint-utils\": \"^4.2.0\",\n                \"@eslint-community/regexpp\": \"^4.11.0\",\n                \"@eslint/config-array\": \"^0.17.1\",\n                \"@eslint/eslintrc\": \"^3.1.0\",\n                \"@eslint/js\": \"9.9.0\",\n                \"@humanwhocodes/module-importer\": \"^1.0.1\",\n                \"@humanwhocodes/retry\": \"^0.3.0\",\n                \"@nodelib/fs.walk\": \"^1.2.8\",\n                \"ajv\": \"^6.12.4\",\n                \"chalk\": \"^4.0.0\",\n                \"cross-spawn\": \"^7.0.2\",\n                \"debug\": \"^4.3.2\",\n                \"escape-string-regexp\": \"^4.0.0\",\n                \"eslint-scope\": \"^8.0.2\",\n                \"eslint-visitor-keys\": \"^4.0.0\",\n                \"espree\": \"^10.1.0\",\n                \"esquery\": \"^1.5.0\",\n                \"esutils\": \"^2.0.2\",\n                \"fast-deep-equal\": \"^3.1.3\",\n                \"file-entry-cache\": \"^8.0.0\",\n                \"find-up\": \"^5.0.0\",\n                \"glob-parent\": \"^6.0.2\",\n                \"ignore\": \"^5.2.0\",\n                \"imurmurhash\": \"^0.1.4\",\n                \"is-glob\": \"^4.0.0\",\n                \"is-path-inside\": \"^3.0.3\",\n                \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n                \"levn\": \"^0.4.1\",\n                \"lodash.merge\": \"^4.6.2\",\n                \"minimatch\": \"^3.1.2\",\n                \"natural-compare\": \"^1.4.0\",\n                \"optionator\": \"^0.9.3\",\n                \"strip-ansi\": \"^6.0.1\",\n                \"text-table\": \"^0.2.0\"\n            },\n            \"bin\": {\n                \"eslint\": \"bin/eslint.js\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://eslint.org/donate\"\n            },\n            \"peerDependencies\": {\n                \"jiti\": \"*\"\n            },\n            \"peerDependenciesMeta\": {\n                \"jiti\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/eslint-compat-utils\": {\n            \"version\": \"0.5.1\",\n            \"resolved\": \"https://registry.npmjs.org/eslint-compat-utils/-/eslint-compat-utils-0.5.1.tgz\",\n            \"integrity\": \"sha512-3z3vFexKIEnjHE3zCMRo6fn/e44U7T1khUjg+Hp0ZQMCigh28rALD0nPFBcGZuiLC5rLZa2ubQHDRln09JfU2Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"semver\": \"^7.5.4\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"peerDependencies\": {\n                \"eslint\": \">=6.0.0\"\n            }\n        },\n        \"node_modules/eslint-config-prettier\": {\n            \"version\": \"9.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz\",\n            \"integrity\": \"sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"bin\": {\n                \"eslint-config-prettier\": \"bin/cli.js\"\n            },\n            \"peerDependencies\": {\n                \"eslint\": \">=7.0.0\"\n            }\n        },\n        \"node_modules/eslint-plugin-svelte\": {\n            \"version\": \"2.43.0\",\n            \"resolved\": \"https://registry.npmjs.org/eslint-plugin-svelte/-/eslint-plugin-svelte-2.43.0.tgz\",\n            \"integrity\": \"sha512-REkxQWvg2pp7QVLxQNa+dJ97xUqRe7Y2JJbSWkHSuszu0VcblZtXkPBPckkivk99y5CdLw4slqfPylL2d/X4jQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@eslint-community/eslint-utils\": \"^4.4.0\",\n                \"@jridgewell/sourcemap-codec\": \"^1.4.15\",\n                \"eslint-compat-utils\": \"^0.5.1\",\n                \"esutils\": \"^2.0.3\",\n                \"known-css-properties\": \"^0.34.0\",\n                \"postcss\": \"^8.4.38\",\n                \"postcss-load-config\": \"^3.1.4\",\n                \"postcss-safe-parser\": \"^6.0.0\",\n                \"postcss-selector-parser\": \"^6.1.0\",\n                \"semver\": \"^7.6.2\",\n                \"svelte-eslint-parser\": \"^0.41.0\"\n            },\n            \"engines\": {\n                \"node\": \"^14.17.0 || >=16.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ota-meshi\"\n            },\n            \"peerDependencies\": {\n                \"eslint\": \"^7.0.0 || ^8.0.0-0 || ^9.0.0-0\",\n                \"svelte\": \"^3.37.0 || ^4.0.0 || ^5.0.0-next.191\"\n            },\n            \"peerDependenciesMeta\": {\n                \"svelte\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/eslint-scope\": {\n            \"version\": \"8.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.0.2.tgz\",\n            \"integrity\": \"sha512-6E4xmrTw5wtxnLA5wYL3WDfhZ/1bUBGOXV0zQvVRDOtrR8D0p6W7fs3JweNYhwRYeGvd/1CKX2se0/2s7Q/nJA==\",\n            \"dev\": true,\n            \"license\": \"BSD-2-Clause\",\n            \"dependencies\": {\n                \"esrecurse\": \"^4.3.0\",\n                \"estraverse\": \"^5.2.0\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/eslint\"\n            }\n        },\n        \"node_modules/eslint-visitor-keys\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.0.0.tgz\",\n            \"integrity\": \"sha512-OtIRv/2GyiF6o/d8K7MYKKbXrOUBIK6SfkIRM4Z0dY3w+LiQ0vy3F57m0Z71bjbyeiWFiHJ8brqnmE6H6/jEuw==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/eslint\"\n            }\n        },\n        \"node_modules/esm-env\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/esm-env/-/esm-env-1.0.0.tgz\",\n            \"integrity\": \"sha512-Cf6VksWPsTuW01vU9Mk/3vRue91Zevka5SjyNf3nEpokFRuqt/KjUQoGAwq9qMmhpLTHmXzSIrFRw8zxWzmFBA==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/espree\": {\n            \"version\": \"10.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/espree/-/espree-10.1.0.tgz\",\n            \"integrity\": \"sha512-M1M6CpiE6ffoigIOWYO9UDP8TMUw9kqb21tf+08IgDYjCsOvCuDt4jQcZmoYxx+w7zlKw9/N0KXfto+I8/FrXA==\",\n            \"dev\": true,\n            \"license\": \"BSD-2-Clause\",\n            \"dependencies\": {\n                \"acorn\": \"^8.12.0\",\n                \"acorn-jsx\": \"^5.3.2\",\n                \"eslint-visitor-keys\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/eslint\"\n            }\n        },\n        \"node_modules/esquery\": {\n            \"version\": \"1.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz\",\n            \"integrity\": \"sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==\",\n            \"dev\": true,\n            \"license\": \"BSD-3-Clause\",\n            \"dependencies\": {\n                \"estraverse\": \"^5.1.0\"\n            },\n            \"engines\": {\n                \"node\": \">=0.10\"\n            }\n        },\n        \"node_modules/esrap\": {\n            \"version\": \"1.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/esrap/-/esrap-1.2.2.tgz\",\n            \"integrity\": \"sha512-F2pSJklxx1BlQIQgooczXCPHmcWpn6EsP5oo73LQfonG9fIlIENQ8vMmfGXeojP9MrkzUNAfyU5vdFlR9shHAw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@jridgewell/sourcemap-codec\": \"^1.4.15\",\n                \"@types/estree\": \"^1.0.1\"\n            }\n        },\n        \"node_modules/esrecurse\": {\n            \"version\": \"4.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz\",\n            \"integrity\": \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\",\n            \"dev\": true,\n            \"license\": \"BSD-2-Clause\",\n            \"dependencies\": {\n                \"estraverse\": \"^5.2.0\"\n            },\n            \"engines\": {\n                \"node\": \">=4.0\"\n            }\n        },\n        \"node_modules/estraverse\": {\n            \"version\": \"5.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz\",\n            \"integrity\": \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\",\n            \"dev\": true,\n            \"license\": \"BSD-2-Clause\",\n            \"engines\": {\n                \"node\": \">=4.0\"\n            }\n        },\n        \"node_modules/estree-walker\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz\",\n            \"integrity\": \"sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@types/estree\": \"^1.0.0\"\n            }\n        },\n        \"node_modules/esutils\": {\n            \"version\": \"2.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n            \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n            \"dev\": true,\n            \"license\": \"BSD-2-Clause\",\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/execa\": {\n            \"version\": \"8.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/execa/-/execa-8.0.1.tgz\",\n            \"integrity\": \"sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"cross-spawn\": \"^7.0.3\",\n                \"get-stream\": \"^8.0.1\",\n                \"human-signals\": \"^5.0.0\",\n                \"is-stream\": \"^3.0.0\",\n                \"merge-stream\": \"^2.0.0\",\n                \"npm-run-path\": \"^5.1.0\",\n                \"onetime\": \"^6.0.0\",\n                \"signal-exit\": \"^4.1.0\",\n                \"strip-final-newline\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=16.17\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n            }\n        },\n        \"node_modules/fast-deep-equal\": {\n            \"version\": \"3.1.3\",\n            \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n            \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/fast-glob\": {\n            \"version\": \"3.3.2\",\n            \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz\",\n            \"integrity\": \"sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@nodelib/fs.stat\": \"^2.0.2\",\n                \"@nodelib/fs.walk\": \"^1.2.3\",\n                \"glob-parent\": \"^5.1.2\",\n                \"merge2\": \"^1.3.0\",\n                \"micromatch\": \"^4.0.4\"\n            },\n            \"engines\": {\n                \"node\": \">=8.6.0\"\n            }\n        },\n        \"node_modules/fast-glob/node_modules/glob-parent\": {\n            \"version\": \"5.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n            \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"is-glob\": \"^4.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 6\"\n            }\n        },\n        \"node_modules/fast-json-stable-stringify\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n            \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/fast-levenshtein\": {\n            \"version\": \"2.0.6\",\n            \"resolved\": \"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz\",\n            \"integrity\": \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/fastq\": {\n            \"version\": \"1.17.1\",\n            \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.17.1.tgz\",\n            \"integrity\": \"sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"reusify\": \"^1.0.4\"\n            }\n        },\n        \"node_modules/file-entry-cache\": {\n            \"version\": \"8.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz\",\n            \"integrity\": \"sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"flat-cache\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=16.0.0\"\n            }\n        },\n        \"node_modules/fill-range\": {\n            \"version\": \"7.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n            \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"to-regex-range\": \"^5.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/find-up\": {\n            \"version\": \"5.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n            \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"locate-path\": \"^6.0.0\",\n                \"path-exists\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/flat-cache\": {\n            \"version\": \"4.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz\",\n            \"integrity\": \"sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"flatted\": \"^3.2.9\",\n                \"keyv\": \"^4.5.4\"\n            },\n            \"engines\": {\n                \"node\": \">=16\"\n            }\n        },\n        \"node_modules/flatted\": {\n            \"version\": \"3.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/flatted/-/flatted-3.3.1.tgz\",\n            \"integrity\": \"sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==\",\n            \"dev\": true,\n            \"license\": \"ISC\"\n        },\n        \"node_modules/fs.realpath\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n            \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n            \"dev\": true,\n            \"license\": \"ISC\"\n        },\n        \"node_modules/fsevents\": {\n            \"version\": \"2.3.3\",\n            \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n            \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n            \"dev\": true,\n            \"hasInstallScript\": true,\n            \"license\": \"MIT\",\n            \"optional\": true,\n            \"os\": [\n                \"darwin\"\n            ],\n            \"engines\": {\n                \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n            }\n        },\n        \"node_modules/get-func-name\": {\n            \"version\": \"2.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/get-func-name/-/get-func-name-2.0.2.tgz\",\n            \"integrity\": \"sha512-8vXOvuE167CtIc3OyItco7N/dpRtBbYOsPsXCz7X/PMnlGjYjSGuZJgM1Y7mmew7BKf9BqvLX2tnOVy1BBUsxQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \"*\"\n            }\n        },\n        \"node_modules/get-stream\": {\n            \"version\": \"8.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-8.0.1.tgz\",\n            \"integrity\": \"sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=16\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/glob\": {\n            \"version\": \"7.2.3\",\n            \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n            \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n            \"deprecated\": \"Glob versions prior to v9 are no longer supported\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"fs.realpath\": \"^1.0.0\",\n                \"inflight\": \"^1.0.4\",\n                \"inherits\": \"2\",\n                \"minimatch\": \"^3.1.1\",\n                \"once\": \"^1.3.0\",\n                \"path-is-absolute\": \"^1.0.0\"\n            },\n            \"engines\": {\n                \"node\": \"*\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/isaacs\"\n            }\n        },\n        \"node_modules/glob-parent\": {\n            \"version\": \"6.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n            \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"is-glob\": \"^4.0.3\"\n            },\n            \"engines\": {\n                \"node\": \">=10.13.0\"\n            }\n        },\n        \"node_modules/globals\": {\n            \"version\": \"15.9.0\",\n            \"resolved\": \"https://registry.npmjs.org/globals/-/globals-15.9.0.tgz\",\n            \"integrity\": \"sha512-SmSKyLLKFbSr6rptvP8izbyxJL4ILwqO9Jg23UA0sDlGlu58V59D1//I3vlc0KJphVdUR7vMjHIplYnzBxorQA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=18\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/globalyzer\": {\n            \"version\": \"0.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/globalyzer/-/globalyzer-0.1.0.tgz\",\n            \"integrity\": \"sha512-40oNTM9UfG6aBmuKxk/giHn5nQ8RVz/SS4Ir6zgzOv9/qC3kKZ9v4etGTcJbEl/NyVQH7FGU7d+X1egr57Md2Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/globby\": {\n            \"version\": \"11.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/globby/-/globby-11.1.0.tgz\",\n            \"integrity\": \"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"array-union\": \"^2.1.0\",\n                \"dir-glob\": \"^3.0.1\",\n                \"fast-glob\": \"^3.2.9\",\n                \"ignore\": \"^5.2.0\",\n                \"merge2\": \"^1.4.1\",\n                \"slash\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/globrex\": {\n            \"version\": \"0.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/globrex/-/globrex-0.1.2.tgz\",\n            \"integrity\": \"sha512-uHJgbwAMwNFf5mLst7IWLNg14x1CkeqglJb/K3doi4dw6q2IvAAmM/Y81kevy83wP+Sst+nutFTYOGg3d1lsxg==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/graceful-fs\": {\n            \"version\": \"4.2.11\",\n            \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n            \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\",\n            \"dev\": true,\n            \"license\": \"ISC\"\n        },\n        \"node_modules/graphemer\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz\",\n            \"integrity\": \"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/has-flag\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n            \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/human-signals\": {\n            \"version\": \"5.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-5.0.0.tgz\",\n            \"integrity\": \"sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"engines\": {\n                \"node\": \">=16.17.0\"\n            }\n        },\n        \"node_modules/ignore\": {\n            \"version\": \"5.3.2\",\n            \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz\",\n            \"integrity\": \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">= 4\"\n            }\n        },\n        \"node_modules/import-fresh\": {\n            \"version\": \"3.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz\",\n            \"integrity\": \"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"parent-module\": \"^1.0.0\",\n                \"resolve-from\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=6\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/import-meta-resolve\": {\n            \"version\": \"4.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/import-meta-resolve/-/import-meta-resolve-4.1.0.tgz\",\n            \"integrity\": \"sha512-I6fiaX09Xivtk+THaMfAwnA3MVA5Big1WHF1Dfx9hFuvNIWpXnorlkzhcQf6ehrqQiiZECRt1poOAkPmer3ruw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"funding\": {\n                \"type\": \"github\",\n                \"url\": \"https://github.com/sponsors/wooorm\"\n            }\n        },\n        \"node_modules/imurmurhash\": {\n            \"version\": \"0.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n            \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=0.8.19\"\n            }\n        },\n        \"node_modules/inflight\": {\n            \"version\": \"1.0.6\",\n            \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n            \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n            \"deprecated\": \"This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"once\": \"^1.3.0\",\n                \"wrappy\": \"1\"\n            }\n        },\n        \"node_modules/inherits\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n            \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n            \"dev\": true,\n            \"license\": \"ISC\"\n        },\n        \"node_modules/is-binary-path\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n            \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"binary-extensions\": \"^2.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/is-extglob\": {\n            \"version\": \"2.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n            \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/is-glob\": {\n            \"version\": \"4.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n            \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"is-extglob\": \"^2.1.1\"\n            },\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/is-number\": {\n            \"version\": \"7.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n            \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=0.12.0\"\n            }\n        },\n        \"node_modules/is-path-inside\": {\n            \"version\": \"3.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\",\n            \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/is-reference\": {\n            \"version\": \"3.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/is-reference/-/is-reference-3.0.2.tgz\",\n            \"integrity\": \"sha512-v3rht/LgVcsdZa3O2Nqs+NMowLOxeOm7Ay9+/ARQ2F+qEoANRcqrjAZKGN0v8ymUetZGgkp26LTnGT7H0Qo9Pg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@types/estree\": \"*\"\n            }\n        },\n        \"node_modules/is-stream\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-3.0.0.tgz\",\n            \"integrity\": \"sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/isexe\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n            \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\",\n            \"dev\": true,\n            \"license\": \"ISC\"\n        },\n        \"node_modules/js-yaml\": {\n            \"version\": \"4.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n            \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"argparse\": \"^2.0.1\"\n            },\n            \"bin\": {\n                \"js-yaml\": \"bin/js-yaml.js\"\n            }\n        },\n        \"node_modules/json-buffer\": {\n            \"version\": \"3.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz\",\n            \"integrity\": \"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/json-schema-traverse\": {\n            \"version\": \"0.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz\",\n            \"integrity\": \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/json-stable-stringify-without-jsonify\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz\",\n            \"integrity\": \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/keyv\": {\n            \"version\": \"4.5.4\",\n            \"resolved\": \"https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz\",\n            \"integrity\": \"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"json-buffer\": \"3.0.1\"\n            }\n        },\n        \"node_modules/kleur\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/kleur/-/kleur-4.1.5.tgz\",\n            \"integrity\": \"sha512-o+NO+8WrRiQEE4/7nwRJhN1HWpVmJm511pBHUxPLtp0BUISzlBplORYSmTclCnJvQq2tKu/sgl3xVpkc7ZWuQQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/known-css-properties\": {\n            \"version\": \"0.34.0\",\n            \"resolved\": \"https://registry.npmjs.org/known-css-properties/-/known-css-properties-0.34.0.tgz\",\n            \"integrity\": \"sha512-tBECoUqNFbyAY4RrbqsBQqDFpGXAEbdD5QKr8kACx3+rnArmuuR22nKQWKazvp07N9yjTyDZaw/20UIH8tL9DQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/levn\": {\n            \"version\": \"0.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz\",\n            \"integrity\": \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"prelude-ls\": \"^1.2.1\",\n                \"type-check\": \"~0.4.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8.0\"\n            }\n        },\n        \"node_modules/lilconfig\": {\n            \"version\": \"2.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/lilconfig/-/lilconfig-2.1.0.tgz\",\n            \"integrity\": \"sha512-utWOt/GHzuUxnLKxB6dk81RoOeoNeHgbrXiuGk4yyF5qlRz+iIVWu56E2fqGHFrXz0QNUhLB/8nKqvRH66JKGQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/locate-character\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/locate-character/-/locate-character-3.0.0.tgz\",\n            \"integrity\": \"sha512-SW13ws7BjaeJ6p7Q6CO2nchbYEc3X3J6WrmTTDto7yMPqVSZTUyY5Tjbid+Ab8gLnATtygYtiDIJGQRRn2ZOiA==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/locate-path\": {\n            \"version\": \"6.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n            \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"p-locate\": \"^5.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/lodash.merge\": {\n            \"version\": \"4.6.2\",\n            \"resolved\": \"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz\",\n            \"integrity\": \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/loupe\": {\n            \"version\": \"3.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/loupe/-/loupe-3.1.1.tgz\",\n            \"integrity\": \"sha512-edNu/8D5MKVfGVFRhFf8aAxiTM6Wumfz5XsaatSxlD3w4R1d/WEKUTydCdPGbl9K7QG/Ca3GnDV2sIKIpXRQcw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"get-func-name\": \"^2.0.1\"\n            }\n        },\n        \"node_modules/magic-string\": {\n            \"version\": \"0.30.11\",\n            \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.11.tgz\",\n            \"integrity\": \"sha512-+Wri9p0QHMy+545hKww7YAu5NyzF8iomPL/RQazugQ9+Ez4Ic3mERMd8ZTX5rfK944j+560ZJi8iAwgak1Ac7A==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@jridgewell/sourcemap-codec\": \"^1.5.0\"\n            }\n        },\n        \"node_modules/merge-stream\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\",\n            \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/merge2\": {\n            \"version\": \"1.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\",\n            \"integrity\": \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/micromatch\": {\n            \"version\": \"4.0.8\",\n            \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n            \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"braces\": \"^3.0.3\",\n                \"picomatch\": \"^2.3.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8.6\"\n            }\n        },\n        \"node_modules/mimic-fn\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz\",\n            \"integrity\": \"sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/min-indent\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgz\",\n            \"integrity\": \"sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=4\"\n            }\n        },\n        \"node_modules/minimatch\": {\n            \"version\": \"3.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n            \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"brace-expansion\": \"^1.1.7\"\n            },\n            \"engines\": {\n                \"node\": \"*\"\n            }\n        },\n        \"node_modules/minimist\": {\n            \"version\": \"1.2.8\",\n            \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\",\n            \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/mkdirp\": {\n            \"version\": \"0.5.6\",\n            \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz\",\n            \"integrity\": \"sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"minimist\": \"^1.2.6\"\n            },\n            \"bin\": {\n                \"mkdirp\": \"bin/cmd.js\"\n            }\n        },\n        \"node_modules/mri\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/mri/-/mri-1.2.0.tgz\",\n            \"integrity\": \"sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=4\"\n            }\n        },\n        \"node_modules/mrmime\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/mrmime/-/mrmime-2.0.0.tgz\",\n            \"integrity\": \"sha512-eu38+hdgojoyq63s+yTpN4XMBdt5l8HhMhc4VKLO9KM5caLIBvUm4thi7fFaxyTmCKeNnXZ5pAlBwCUnhA09uw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/ms\": {\n            \"version\": \"2.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n            \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/nanoid\": {\n            \"version\": \"3.3.7\",\n            \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz\",\n            \"integrity\": \"sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==\",\n            \"dev\": true,\n            \"funding\": [\n                {\n                    \"type\": \"github\",\n                    \"url\": \"https://github.com/sponsors/ai\"\n                }\n            ],\n            \"license\": \"MIT\",\n            \"bin\": {\n                \"nanoid\": \"bin/nanoid.cjs\"\n            },\n            \"engines\": {\n                \"node\": \"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\"\n            }\n        },\n        \"node_modules/natural-compare\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\",\n            \"integrity\": \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/normalize-path\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n            \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/npm-run-path\": {\n            \"version\": \"5.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-5.3.0.tgz\",\n            \"integrity\": \"sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"path-key\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/npm-run-path/node_modules/path-key\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-4.0.0.tgz\",\n            \"integrity\": \"sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/once\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n            \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"wrappy\": \"1\"\n            }\n        },\n        \"node_modules/onetime\": {\n            \"version\": \"6.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-6.0.0.tgz\",\n            \"integrity\": \"sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"mimic-fn\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/optionator\": {\n            \"version\": \"0.9.4\",\n            \"resolved\": \"https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz\",\n            \"integrity\": \"sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"deep-is\": \"^0.1.3\",\n                \"fast-levenshtein\": \"^2.0.6\",\n                \"levn\": \"^0.4.1\",\n                \"prelude-ls\": \"^1.2.1\",\n                \"type-check\": \"^0.4.0\",\n                \"word-wrap\": \"^1.2.5\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8.0\"\n            }\n        },\n        \"node_modules/p-limit\": {\n            \"version\": \"3.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n            \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"yocto-queue\": \"^0.1.0\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/p-locate\": {\n            \"version\": \"5.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n            \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"p-limit\": \"^3.0.2\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/parent-module\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz\",\n            \"integrity\": \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"callsites\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/path-exists\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n            \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/path-is-absolute\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n            \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/path-key\": {\n            \"version\": \"3.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n            \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/path-type\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n            \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/pathe\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/pathe/-/pathe-1.1.2.tgz\",\n            \"integrity\": \"sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/pathval\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/pathval/-/pathval-2.0.0.tgz\",\n            \"integrity\": \"sha512-vE7JKRyES09KiunauX7nd2Q9/L7lhok4smP9RZTDeD4MVs72Dp2qNFVz39Nz5a0FVEW0BJR6C0DYrq6unoziZA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">= 14.16\"\n            }\n        },\n        \"node_modules/picocolors\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.0.1.tgz\",\n            \"integrity\": \"sha512-anP1Z8qwhkbmu7MFP5iTt+wQKXgwzf7zTyGlcdzabySa9vd0Xt392U0rVmz9poOaBj0uHJKyyo9/upk0HrEQew==\",\n            \"dev\": true,\n            \"license\": \"ISC\"\n        },\n        \"node_modules/picomatch\": {\n            \"version\": \"2.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n            \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8.6\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/jonschlinkert\"\n            }\n        },\n        \"node_modules/postcss\": {\n            \"version\": \"8.4.41\",\n            \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.4.41.tgz\",\n            \"integrity\": \"sha512-TesUflQ0WKZqAvg52PWL6kHgLKP6xB6heTOdoYM0Wt2UHyxNa4K25EZZMgKns3BH1RLVbZCREPpLY0rhnNoHVQ==\",\n            \"dev\": true,\n            \"funding\": [\n                {\n                    \"type\": \"opencollective\",\n                    \"url\": \"https://opencollective.com/postcss/\"\n                },\n                {\n                    \"type\": \"tidelift\",\n                    \"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n                },\n                {\n                    \"type\": \"github\",\n                    \"url\": \"https://github.com/sponsors/ai\"\n                }\n            ],\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"nanoid\": \"^3.3.7\",\n                \"picocolors\": \"^1.0.1\",\n                \"source-map-js\": \"^1.2.0\"\n            },\n            \"engines\": {\n                \"node\": \"^10 || ^12 || >=14\"\n            }\n        },\n        \"node_modules/postcss-load-config\": {\n            \"version\": \"3.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-3.1.4.tgz\",\n            \"integrity\": \"sha512-6DiM4E7v4coTE4uzA8U//WhtPwyhiim3eyjEMFCnUpzbrkK9wJHgKDT2mR+HbtSrd/NubVaYTOpSpjUl8NQeRg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"lilconfig\": \"^2.0.5\",\n                \"yaml\": \"^1.10.2\"\n            },\n            \"engines\": {\n                \"node\": \">= 10\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/postcss/\"\n            },\n            \"peerDependencies\": {\n                \"postcss\": \">=8.0.9\",\n                \"ts-node\": \">=9.0.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"postcss\": {\n                    \"optional\": true\n                },\n                \"ts-node\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/postcss-safe-parser\": {\n            \"version\": \"6.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-6.0.0.tgz\",\n            \"integrity\": \"sha512-FARHN8pwH+WiS2OPCxJI8FuRJpTVnn6ZNFiqAM2aeW2LwTHWWmWgIyKC6cUo0L8aeKiF/14MNvnpls6R2PBeMQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=12.0\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/postcss/\"\n            },\n            \"peerDependencies\": {\n                \"postcss\": \"^8.3.3\"\n            }\n        },\n        \"node_modules/postcss-scss\": {\n            \"version\": \"4.0.9\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-scss/-/postcss-scss-4.0.9.tgz\",\n            \"integrity\": \"sha512-AjKOeiwAitL/MXxQW2DliT28EKukvvbEWx3LBmJIRN8KfBGZbRTxNYW0kSqi1COiTZ57nZ9NW06S6ux//N1c9A==\",\n            \"dev\": true,\n            \"funding\": [\n                {\n                    \"type\": \"opencollective\",\n                    \"url\": \"https://opencollective.com/postcss/\"\n                },\n                {\n                    \"type\": \"tidelift\",\n                    \"url\": \"https://tidelift.com/funding/github/npm/postcss-scss\"\n                },\n                {\n                    \"type\": \"github\",\n                    \"url\": \"https://github.com/sponsors/ai\"\n                }\n            ],\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=12.0\"\n            },\n            \"peerDependencies\": {\n                \"postcss\": \"^8.4.29\"\n            }\n        },\n        \"node_modules/postcss-selector-parser\": {\n            \"version\": \"6.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz\",\n            \"integrity\": \"sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"cssesc\": \"^3.0.0\",\n                \"util-deprecate\": \"^1.0.2\"\n            },\n            \"engines\": {\n                \"node\": \">=4\"\n            }\n        },\n        \"node_modules/prelude-ls\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz\",\n            \"integrity\": \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">= 0.8.0\"\n            }\n        },\n        \"node_modules/prettier\": {\n            \"version\": \"3.3.3\",\n            \"resolved\": \"https://registry.npmjs.org/prettier/-/prettier-3.3.3.tgz\",\n            \"integrity\": \"sha512-i2tDNA0O5IrMO757lfrdQZCc2jPNDVntV0m/+4whiDfWaTKfMNgR7Qz0NAeGz/nRqF4m5/6CLzbP4/liHt12Ew==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"bin\": {\n                \"prettier\": \"bin/prettier.cjs\"\n            },\n            \"engines\": {\n                \"node\": \">=14\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/prettier/prettier?sponsor=1\"\n            }\n        },\n        \"node_modules/prettier-plugin-svelte\": {\n            \"version\": \"3.2.6\",\n            \"resolved\": \"https://registry.npmjs.org/prettier-plugin-svelte/-/prettier-plugin-svelte-3.2.6.tgz\",\n            \"integrity\": \"sha512-Y1XWLw7vXUQQZmgv1JAEiLcErqUniAF2wO7QJsw8BVMvpLET2dI5WpEIEJx1r11iHVdSMzQxivyfrH9On9t2IQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"peerDependencies\": {\n                \"prettier\": \"^3.0.0\",\n                \"svelte\": \"^3.2.0 || ^4.0.0-next.0 || ^5.0.0-next.0\"\n            }\n        },\n        \"node_modules/punycode\": {\n            \"version\": \"2.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n            \"integrity\": \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/queue-microtask\": {\n            \"version\": \"1.2.3\",\n            \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n            \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n            \"dev\": true,\n            \"funding\": [\n                {\n                    \"type\": \"github\",\n                    \"url\": \"https://github.com/sponsors/feross\"\n                },\n                {\n                    \"type\": \"patreon\",\n                    \"url\": \"https://www.patreon.com/feross\"\n                },\n                {\n                    \"type\": \"consulting\",\n                    \"url\": \"https://feross.org/support\"\n                }\n            ],\n            \"license\": \"MIT\"\n        },\n        \"node_modules/readdirp\": {\n            \"version\": \"3.6.0\",\n            \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n            \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"picomatch\": \"^2.2.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8.10.0\"\n            }\n        },\n        \"node_modules/resolve-from\": {\n            \"version\": \"4.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz\",\n            \"integrity\": \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=4\"\n            }\n        },\n        \"node_modules/reusify\": {\n            \"version\": \"1.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz\",\n            \"integrity\": \"sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"iojs\": \">=1.0.0\",\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/rimraf\": {\n            \"version\": \"2.7.1\",\n            \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz\",\n            \"integrity\": \"sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==\",\n            \"deprecated\": \"Rimraf versions prior to v4 are no longer supported\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"glob\": \"^7.1.3\"\n            },\n            \"bin\": {\n                \"rimraf\": \"bin.js\"\n            }\n        },\n        \"node_modules/rollup\": {\n            \"version\": \"4.21.0\",\n            \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-4.21.0.tgz\",\n            \"integrity\": \"sha512-vo+S/lfA2lMS7rZ2Qoubi6I5hwZwzXeUIctILZLbHI+laNtvhhOIon2S1JksA5UEDQ7l3vberd0fxK44lTYjbQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@types/estree\": \"1.0.5\"\n            },\n            \"bin\": {\n                \"rollup\": \"dist/bin/rollup\"\n            },\n            \"engines\": {\n                \"node\": \">=18.0.0\",\n                \"npm\": \">=8.0.0\"\n            },\n            \"optionalDependencies\": {\n                \"@rollup/rollup-android-arm-eabi\": \"4.21.0\",\n                \"@rollup/rollup-android-arm64\": \"4.21.0\",\n                \"@rollup/rollup-darwin-arm64\": \"4.21.0\",\n                \"@rollup/rollup-darwin-x64\": \"4.21.0\",\n                \"@rollup/rollup-linux-arm-gnueabihf\": \"4.21.0\",\n                \"@rollup/rollup-linux-arm-musleabihf\": \"4.21.0\",\n                \"@rollup/rollup-linux-arm64-gnu\": \"4.21.0\",\n                \"@rollup/rollup-linux-arm64-musl\": \"4.21.0\",\n                \"@rollup/rollup-linux-powerpc64le-gnu\": \"4.21.0\",\n                \"@rollup/rollup-linux-riscv64-gnu\": \"4.21.0\",\n                \"@rollup/rollup-linux-s390x-gnu\": \"4.21.0\",\n                \"@rollup/rollup-linux-x64-gnu\": \"4.21.0\",\n                \"@rollup/rollup-linux-x64-musl\": \"4.21.0\",\n                \"@rollup/rollup-win32-arm64-msvc\": \"4.21.0\",\n                \"@rollup/rollup-win32-ia32-msvc\": \"4.21.0\",\n                \"@rollup/rollup-win32-x64-msvc\": \"4.21.0\",\n                \"fsevents\": \"~2.3.2\"\n            }\n        },\n        \"node_modules/run-parallel\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n            \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n            \"dev\": true,\n            \"funding\": [\n                {\n                    \"type\": \"github\",\n                    \"url\": \"https://github.com/sponsors/feross\"\n                },\n                {\n                    \"type\": \"patreon\",\n                    \"url\": \"https://www.patreon.com/feross\"\n                },\n                {\n                    \"type\": \"consulting\",\n                    \"url\": \"https://feross.org/support\"\n                }\n            ],\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"queue-microtask\": \"^1.2.2\"\n            }\n        },\n        \"node_modules/sade\": {\n            \"version\": \"1.8.1\",\n            \"resolved\": \"https://registry.npmjs.org/sade/-/sade-1.8.1.tgz\",\n            \"integrity\": \"sha512-xal3CZX1Xlo/k4ApwCFrHVACi9fBqJ7V+mwhBsuf/1IOKbBy098Fex+Wa/5QMubw09pSZ/u8EY8PWgevJsXp1A==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"mri\": \"^1.1.0\"\n            },\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/sander\": {\n            \"version\": \"0.5.1\",\n            \"resolved\": \"https://registry.npmjs.org/sander/-/sander-0.5.1.tgz\",\n            \"integrity\": \"sha512-3lVqBir7WuKDHGrKRDn/1Ye3kwpXaDOMsiRP1wd6wpZW56gJhsbp5RqQpA6JG/P+pkXizygnr1dKR8vzWaVsfA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"es6-promise\": \"^3.1.2\",\n                \"graceful-fs\": \"^4.1.3\",\n                \"mkdirp\": \"^0.5.1\",\n                \"rimraf\": \"^2.5.2\"\n            }\n        },\n        \"node_modules/semver\": {\n            \"version\": \"7.6.3\",\n            \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.3.tgz\",\n            \"integrity\": \"sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"bin\": {\n                \"semver\": \"bin/semver.js\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/set-cookie-parser\": {\n            \"version\": \"2.7.0\",\n            \"resolved\": \"https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.0.tgz\",\n            \"integrity\": \"sha512-lXLOiqpkUumhRdFF3k1osNXCy9akgx/dyPZ5p8qAg9seJzXr5ZrlqZuWIMuY6ejOsVLE6flJ5/h3lsn57fQ/PQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/shebang-command\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n            \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"shebang-regex\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/shebang-regex\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n            \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/siginfo\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/siginfo/-/siginfo-2.0.0.tgz\",\n            \"integrity\": \"sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==\",\n            \"dev\": true,\n            \"license\": \"ISC\"\n        },\n        \"node_modules/signal-exit\": {\n            \"version\": \"4.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n            \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"engines\": {\n                \"node\": \">=14\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/isaacs\"\n            }\n        },\n        \"node_modules/sirv\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/sirv/-/sirv-2.0.4.tgz\",\n            \"integrity\": \"sha512-94Bdh3cC2PKrbgSOUqTiGPWVZeSiXfKOVZNJniWoqrWrRkB1CJzBU3NEbiTsPcYy1lDsANA/THzS+9WBiy5nfQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@polka/url\": \"^1.0.0-next.24\",\n                \"mrmime\": \"^2.0.0\",\n                \"totalist\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 10\"\n            }\n        },\n        \"node_modules/slash\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n            \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/sorcery\": {\n            \"version\": \"0.11.1\",\n            \"resolved\": \"https://registry.npmjs.org/sorcery/-/sorcery-0.11.1.tgz\",\n            \"integrity\": \"sha512-o7npfeJE6wi6J9l0/5LKshFzZ2rMatRiCDwYeDQaOzqdzRJwALhX7mk/A/ecg6wjMu7wdZbmXfD2S/vpOg0bdQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@jridgewell/sourcemap-codec\": \"^1.4.14\",\n                \"buffer-crc32\": \"^1.0.0\",\n                \"minimist\": \"^1.2.0\",\n                \"sander\": \"^0.5.0\"\n            },\n            \"bin\": {\n                \"sorcery\": \"bin/sorcery\"\n            }\n        },\n        \"node_modules/source-map-js\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.0.tgz\",\n            \"integrity\": \"sha512-itJW8lvSA0TXEphiRoawsCksnlf8SyvmFzIhltqAHluXd88pkCd+cXJVHTDwdCr0IzwptSm035IHQktUu1QUMg==\",\n            \"dev\": true,\n            \"license\": \"BSD-3-Clause\",\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/stackback\": {\n            \"version\": \"0.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/stackback/-/stackback-0.0.2.tgz\",\n            \"integrity\": \"sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/std-env\": {\n            \"version\": \"3.7.0\",\n            \"resolved\": \"https://registry.npmjs.org/std-env/-/std-env-3.7.0.tgz\",\n            \"integrity\": \"sha512-JPbdCEQLj1w5GilpiHAx3qJvFndqybBysA3qUOnznweH4QbNYUsW/ea8QzSrnh0vNsezMMw5bcVool8lM0gwzg==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/strip-ansi\": {\n            \"version\": \"6.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n            \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"ansi-regex\": \"^5.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/strip-final-newline\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-3.0.0.tgz\",\n            \"integrity\": \"sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/strip-indent\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/strip-indent/-/strip-indent-3.0.0.tgz\",\n            \"integrity\": \"sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"min-indent\": \"^1.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/strip-json-comments\": {\n            \"version\": \"3.1.1\",\n            \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n            \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=8\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/supports-color\": {\n            \"version\": \"7.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n            \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"has-flag\": \"^4.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/svelte\": {\n            \"version\": \"5.0.0-next.236\",\n            \"resolved\": \"https://registry.npmjs.org/svelte/-/svelte-5.0.0-next.236.tgz\",\n            \"integrity\": \"sha512-PuaqFGPAK6wmGstf+0eyumsk0JYwGSy2OL76TyYX6V5j1Cr/HKSHilv9Qxc+tJm8Mnlbp0Vx4NFCFrwlSas79A==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@ampproject/remapping\": \"^2.2.1\",\n                \"@jridgewell/sourcemap-codec\": \"^1.4.15\",\n                \"@types/estree\": \"^1.0.5\",\n                \"acorn\": \"^8.11.3\",\n                \"acorn-typescript\": \"^1.4.13\",\n                \"aria-query\": \"^5.3.0\",\n                \"axobject-query\": \"^4.0.0\",\n                \"esm-env\": \"^1.0.0\",\n                \"esrap\": \"^1.2.2\",\n                \"is-reference\": \"^3.0.2\",\n                \"locate-character\": \"^3.0.0\",\n                \"magic-string\": \"^0.30.5\",\n                \"zimmerframe\": \"^1.1.2\"\n            },\n            \"engines\": {\n                \"node\": \">=18\"\n            }\n        },\n        \"node_modules/svelte-check\": {\n            \"version\": \"3.8.6\",\n            \"resolved\": \"https://registry.npmjs.org/svelte-check/-/svelte-check-3.8.6.tgz\",\n            \"integrity\": \"sha512-ij0u4Lw/sOTREP13BdWZjiXD/BlHE6/e2e34XzmVmsp5IN4kVa3PWP65NM32JAgwjZlwBg/+JtiNV1MM8khu0Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@jridgewell/trace-mapping\": \"^0.3.17\",\n                \"chokidar\": \"^3.4.1\",\n                \"picocolors\": \"^1.0.0\",\n                \"sade\": \"^1.7.4\",\n                \"svelte-preprocess\": \"^5.1.3\",\n                \"typescript\": \"^5.0.3\"\n            },\n            \"bin\": {\n                \"svelte-check\": \"bin/svelte-check\"\n            },\n            \"peerDependencies\": {\n                \"svelte\": \"^3.55.0 || ^4.0.0-next.0 || ^4.0.0 || ^5.0.0-next.0\"\n            }\n        },\n        \"node_modules/svelte-eslint-parser\": {\n            \"version\": \"0.41.0\",\n            \"resolved\": \"https://registry.npmjs.org/svelte-eslint-parser/-/svelte-eslint-parser-0.41.0.tgz\",\n            \"integrity\": \"sha512-L6f4hOL+AbgfBIB52Z310pg1d2QjRqm7wy3kI1W6hhdhX5bvu7+f0R6w4ykp5HoDdzq+vGhIJmsisaiJDGmVfA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"eslint-scope\": \"^7.2.2\",\n                \"eslint-visitor-keys\": \"^3.4.3\",\n                \"espree\": \"^9.6.1\",\n                \"postcss\": \"^8.4.39\",\n                \"postcss-scss\": \"^4.0.9\"\n            },\n            \"engines\": {\n                \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ota-meshi\"\n            },\n            \"peerDependencies\": {\n                \"svelte\": \"^3.37.0 || ^4.0.0 || ^5.0.0-next.191\"\n            },\n            \"peerDependenciesMeta\": {\n                \"svelte\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/svelte-eslint-parser/node_modules/eslint-scope\": {\n            \"version\": \"7.2.2\",\n            \"resolved\": \"https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz\",\n            \"integrity\": \"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\",\n            \"dev\": true,\n            \"license\": \"BSD-2-Clause\",\n            \"dependencies\": {\n                \"esrecurse\": \"^4.3.0\",\n                \"estraverse\": \"^5.2.0\"\n            },\n            \"engines\": {\n                \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/eslint\"\n            }\n        },\n        \"node_modules/svelte-eslint-parser/node_modules/eslint-visitor-keys\": {\n            \"version\": \"3.4.3\",\n            \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n            \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"engines\": {\n                \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/eslint\"\n            }\n        },\n        \"node_modules/svelte-eslint-parser/node_modules/espree\": {\n            \"version\": \"9.6.1\",\n            \"resolved\": \"https://registry.npmjs.org/espree/-/espree-9.6.1.tgz\",\n            \"integrity\": \"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\",\n            \"dev\": true,\n            \"license\": \"BSD-2-Clause\",\n            \"dependencies\": {\n                \"acorn\": \"^8.9.0\",\n                \"acorn-jsx\": \"^5.3.2\",\n                \"eslint-visitor-keys\": \"^3.4.1\"\n            },\n            \"engines\": {\n                \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/eslint\"\n            }\n        },\n        \"node_modules/svelte-preprocess\": {\n            \"version\": \"5.1.4\",\n            \"resolved\": \"https://registry.npmjs.org/svelte-preprocess/-/svelte-preprocess-5.1.4.tgz\",\n            \"integrity\": \"sha512-IvnbQ6D6Ao3Gg6ftiM5tdbR6aAETwjhHV+UKGf5bHGYR69RQvF1ho0JKPcbUON4vy4R7zom13jPjgdOWCQ5hDA==\",\n            \"dev\": true,\n            \"hasInstallScript\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@types/pug\": \"^2.0.6\",\n                \"detect-indent\": \"^6.1.0\",\n                \"magic-string\": \"^0.30.5\",\n                \"sorcery\": \"^0.11.0\",\n                \"strip-indent\": \"^3.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">= 16.0.0\"\n            },\n            \"peerDependencies\": {\n                \"@babel/core\": \"^7.10.2\",\n                \"coffeescript\": \"^2.5.1\",\n                \"less\": \"^3.11.3 || ^4.0.0\",\n                \"postcss\": \"^7 || ^8\",\n                \"postcss-load-config\": \"^2.1.0 || ^3.0.0 || ^4.0.0 || ^5.0.0\",\n                \"pug\": \"^3.0.0\",\n                \"sass\": \"^1.26.8\",\n                \"stylus\": \"^0.55.0\",\n                \"sugarss\": \"^2.0.0 || ^3.0.0 || ^4.0.0\",\n                \"svelte\": \"^3.23.0 || ^4.0.0-next.0 || ^4.0.0 || ^5.0.0-next.0\",\n                \"typescript\": \">=3.9.5 || ^4.0.0 || ^5.0.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"@babel/core\": {\n                    \"optional\": true\n                },\n                \"coffeescript\": {\n                    \"optional\": true\n                },\n                \"less\": {\n                    \"optional\": true\n                },\n                \"postcss\": {\n                    \"optional\": true\n                },\n                \"postcss-load-config\": {\n                    \"optional\": true\n                },\n                \"pug\": {\n                    \"optional\": true\n                },\n                \"sass\": {\n                    \"optional\": true\n                },\n                \"stylus\": {\n                    \"optional\": true\n                },\n                \"sugarss\": {\n                    \"optional\": true\n                },\n                \"typescript\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/text-table\": {\n            \"version\": \"0.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz\",\n            \"integrity\": \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/tiny-glob\": {\n            \"version\": \"0.2.9\",\n            \"resolved\": \"https://registry.npmjs.org/tiny-glob/-/tiny-glob-0.2.9.tgz\",\n            \"integrity\": \"sha512-g/55ssRPUjShh+xkfx9UPDXqhckHEsHr4Vd9zX55oSdGZc/MD0m3sferOkwWtp98bv+kcVfEHtRJgBVJzelrzg==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"globalyzer\": \"0.1.0\",\n                \"globrex\": \"^0.1.2\"\n            }\n        },\n        \"node_modules/tinybench\": {\n            \"version\": \"2.9.0\",\n            \"resolved\": \"https://registry.npmjs.org/tinybench/-/tinybench-2.9.0.tgz\",\n            \"integrity\": \"sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/tinypool\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/tinypool/-/tinypool-1.0.1.tgz\",\n            \"integrity\": \"sha512-URZYihUbRPcGv95En+sz6MfghfIc2OJ1sv/RmhWZLouPY0/8Vo80viwPvg3dlaS9fuq7fQMEfgRRK7BBZThBEA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \"^18.0.0 || >=20.0.0\"\n            }\n        },\n        \"node_modules/tinyrainbow\": {\n            \"version\": \"1.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/tinyrainbow/-/tinyrainbow-1.2.0.tgz\",\n            \"integrity\": \"sha512-weEDEq7Z5eTHPDh4xjX789+fHfF+P8boiFB+0vbWzpbnbsEr/GRaohi/uMKxg8RZMXnl1ItAi/IUHWMsjDV7kQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=14.0.0\"\n            }\n        },\n        \"node_modules/tinyspy\": {\n            \"version\": \"3.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/tinyspy/-/tinyspy-3.0.0.tgz\",\n            \"integrity\": \"sha512-q5nmENpTHgiPVd1cJDDc9cVoYN5x4vCvwT3FMilvKPKneCBZAxn2YWQjDF0UMcE9k0Cay1gBiDfTMU0g+mPMQA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=14.0.0\"\n            }\n        },\n        \"node_modules/to-regex-range\": {\n            \"version\": \"5.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n            \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"is-number\": \"^7.0.0\"\n            },\n            \"engines\": {\n                \"node\": \">=8.0\"\n            }\n        },\n        \"node_modules/totalist\": {\n            \"version\": \"3.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/totalist/-/totalist-3.0.1.tgz\",\n            \"integrity\": \"sha512-sf4i37nQ2LBx4m3wB74y+ubopq6W/dIzXg0FDGjsYnZHVa1Da8FH853wlL2gtUhg+xJXjfk3kUZS3BRoQeoQBQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=6\"\n            }\n        },\n        \"node_modules/ts-api-utils\": {\n            \"version\": \"1.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.3.0.tgz\",\n            \"integrity\": \"sha512-UQMIo7pb8WRomKR1/+MFVLTroIvDVtMX3K6OUir8ynLyzB8Jeriont2bTAtmNPa1ekAgN7YPDyf6V+ygrdU+eQ==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=16\"\n            },\n            \"peerDependencies\": {\n                \"typescript\": \">=4.2.0\"\n            }\n        },\n        \"node_modules/type-check\": {\n            \"version\": \"0.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz\",\n            \"integrity\": \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"prelude-ls\": \"^1.2.1\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.8.0\"\n            }\n        },\n        \"node_modules/typescript\": {\n            \"version\": \"5.5.4\",\n            \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.5.4.tgz\",\n            \"integrity\": \"sha512-Mtq29sKDAEYP7aljRgtPOpTvOfbwRWlS6dPRzwjdE+C0R4brX/GUyhHSecbHMFLNBLcJIPt9nl9yG5TZ1weH+Q==\",\n            \"dev\": true,\n            \"license\": \"Apache-2.0\",\n            \"bin\": {\n                \"tsc\": \"bin/tsc\",\n                \"tsserver\": \"bin/tsserver\"\n            },\n            \"engines\": {\n                \"node\": \">=14.17\"\n            }\n        },\n        \"node_modules/typescript-eslint\": {\n            \"version\": \"8.2.0\",\n            \"resolved\": \"https://registry.npmjs.org/typescript-eslint/-/typescript-eslint-8.2.0.tgz\",\n            \"integrity\": \"sha512-DmnqaPcML0xYwUzgNbM1XaKXpEb7BShYf2P1tkUmmcl8hyeG7Pj08Er7R9bNy6AufabywzJcOybQAtnD/c9DGw==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@typescript-eslint/eslint-plugin\": \"8.2.0\",\n                \"@typescript-eslint/parser\": \"8.2.0\",\n                \"@typescript-eslint/utils\": \"8.2.0\"\n            },\n            \"engines\": {\n                \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n            },\n            \"funding\": {\n                \"type\": \"opencollective\",\n                \"url\": \"https://opencollective.com/typescript-eslint\"\n            },\n            \"peerDependenciesMeta\": {\n                \"typescript\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/uri-js\": {\n            \"version\": \"4.4.1\",\n            \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n            \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n            \"dev\": true,\n            \"license\": \"BSD-2-Clause\",\n            \"dependencies\": {\n                \"punycode\": \"^2.1.0\"\n            }\n        },\n        \"node_modules/util-deprecate\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n            \"integrity\": \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        },\n        \"node_modules/vite\": {\n            \"version\": \"5.4.2\",\n            \"resolved\": \"https://registry.npmjs.org/vite/-/vite-5.4.2.tgz\",\n            \"integrity\": \"sha512-dDrQTRHp5C1fTFzcSaMxjk6vdpKvT+2/mIdE07Gw2ykehT49O0z/VHS3zZ8iV/Gh8BJJKHWOe5RjaNrW5xf/GA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"esbuild\": \"^0.21.3\",\n                \"postcss\": \"^8.4.41\",\n                \"rollup\": \"^4.20.0\"\n            },\n            \"bin\": {\n                \"vite\": \"bin/vite.js\"\n            },\n            \"engines\": {\n                \"node\": \"^18.0.0 || >=20.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/vitejs/vite?sponsor=1\"\n            },\n            \"optionalDependencies\": {\n                \"fsevents\": \"~2.3.3\"\n            },\n            \"peerDependencies\": {\n                \"@types/node\": \"^18.0.0 || >=20.0.0\",\n                \"less\": \"*\",\n                \"lightningcss\": \"^1.21.0\",\n                \"sass\": \"*\",\n                \"sass-embedded\": \"*\",\n                \"stylus\": \"*\",\n                \"sugarss\": \"*\",\n                \"terser\": \"^5.4.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"@types/node\": {\n                    \"optional\": true\n                },\n                \"less\": {\n                    \"optional\": true\n                },\n                \"lightningcss\": {\n                    \"optional\": true\n                },\n                \"sass\": {\n                    \"optional\": true\n                },\n                \"sass-embedded\": {\n                    \"optional\": true\n                },\n                \"stylus\": {\n                    \"optional\": true\n                },\n                \"sugarss\": {\n                    \"optional\": true\n                },\n                \"terser\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/vite-node\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/vite-node/-/vite-node-2.0.5.tgz\",\n            \"integrity\": \"sha512-LdsW4pxj0Ot69FAoXZ1yTnA9bjGohr2yNBU7QKRxpz8ITSkhuDl6h3zS/tvgz4qrNjeRnvrWeXQ8ZF7Um4W00Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"cac\": \"^6.7.14\",\n                \"debug\": \"^4.3.5\",\n                \"pathe\": \"^1.1.2\",\n                \"tinyrainbow\": \"^1.2.0\",\n                \"vite\": \"^5.0.0\"\n            },\n            \"bin\": {\n                \"vite-node\": \"vite-node.mjs\"\n            },\n            \"engines\": {\n                \"node\": \"^18.0.0 || >=20.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/vitest\"\n            }\n        },\n        \"node_modules/vitefu\": {\n            \"version\": \"0.2.5\",\n            \"resolved\": \"https://registry.npmjs.org/vitefu/-/vitefu-0.2.5.tgz\",\n            \"integrity\": \"sha512-SgHtMLoqaeeGnd2evZ849ZbACbnwQCIwRH57t18FxcXoZop0uQu0uzlIhJBlF/eWVzuce0sHeqPcDo+evVcg8Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"peerDependencies\": {\n                \"vite\": \"^3.0.0 || ^4.0.0 || ^5.0.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"vite\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/vitest\": {\n            \"version\": \"2.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/vitest/-/vitest-2.0.5.tgz\",\n            \"integrity\": \"sha512-8GUxONfauuIdeSl5f9GTgVEpg5BTOlplET4WEDaeY2QBiN8wSm68vxN/tb5z405OwppfoCavnwXafiaYBC/xOA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"@ampproject/remapping\": \"^2.3.0\",\n                \"@vitest/expect\": \"2.0.5\",\n                \"@vitest/pretty-format\": \"^2.0.5\",\n                \"@vitest/runner\": \"2.0.5\",\n                \"@vitest/snapshot\": \"2.0.5\",\n                \"@vitest/spy\": \"2.0.5\",\n                \"@vitest/utils\": \"2.0.5\",\n                \"chai\": \"^5.1.1\",\n                \"debug\": \"^4.3.5\",\n                \"execa\": \"^8.0.1\",\n                \"magic-string\": \"^0.30.10\",\n                \"pathe\": \"^1.1.2\",\n                \"std-env\": \"^3.7.0\",\n                \"tinybench\": \"^2.8.0\",\n                \"tinypool\": \"^1.0.0\",\n                \"tinyrainbow\": \"^1.2.0\",\n                \"vite\": \"^5.0.0\",\n                \"vite-node\": \"2.0.5\",\n                \"why-is-node-running\": \"^2.3.0\"\n            },\n            \"bin\": {\n                \"vitest\": \"vitest.mjs\"\n            },\n            \"engines\": {\n                \"node\": \"^18.0.0 || >=20.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://opencollective.com/vitest\"\n            },\n            \"peerDependencies\": {\n                \"@edge-runtime/vm\": \"*\",\n                \"@types/node\": \"^18.0.0 || >=20.0.0\",\n                \"@vitest/browser\": \"2.0.5\",\n                \"@vitest/ui\": \"2.0.5\",\n                \"happy-dom\": \"*\",\n                \"jsdom\": \"*\"\n            },\n            \"peerDependenciesMeta\": {\n                \"@edge-runtime/vm\": {\n                    \"optional\": true\n                },\n                \"@types/node\": {\n                    \"optional\": true\n                },\n                \"@vitest/browser\": {\n                    \"optional\": true\n                },\n                \"@vitest/ui\": {\n                    \"optional\": true\n                },\n                \"happy-dom\": {\n                    \"optional\": true\n                },\n                \"jsdom\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/which\": {\n            \"version\": \"2.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n            \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"dependencies\": {\n                \"isexe\": \"^2.0.0\"\n            },\n            \"bin\": {\n                \"node-which\": \"bin/node-which\"\n            },\n            \"engines\": {\n                \"node\": \">= 8\"\n            }\n        },\n        \"node_modules/why-is-node-running\": {\n            \"version\": \"2.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/why-is-node-running/-/why-is-node-running-2.3.0.tgz\",\n            \"integrity\": \"sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"siginfo\": \"^2.0.0\",\n                \"stackback\": \"0.0.2\"\n            },\n            \"bin\": {\n                \"why-is-node-running\": \"cli.js\"\n            },\n            \"engines\": {\n                \"node\": \">=8\"\n            }\n        },\n        \"node_modules/word-wrap\": {\n            \"version\": \"1.2.5\",\n            \"resolved\": \"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz\",\n            \"integrity\": \"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/wrappy\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n            \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n            \"dev\": true,\n            \"license\": \"ISC\"\n        },\n        \"node_modules/yaml\": {\n            \"version\": \"1.10.2\",\n            \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz\",\n            \"integrity\": \"sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==\",\n            \"dev\": true,\n            \"license\": \"ISC\",\n            \"engines\": {\n                \"node\": \">= 6\"\n            }\n        },\n        \"node_modules/yocto-queue\": {\n            \"version\": \"0.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n            \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n            \"dev\": true,\n            \"license\": \"MIT\",\n            \"engines\": {\n                \"node\": \">=10\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/zimmerframe\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/zimmerframe/-/zimmerframe-1.1.2.tgz\",\n            \"integrity\": \"sha512-rAbqEGa8ovJy4pyBxZM70hg4pE6gDgaQ0Sl9M3enG3I0d6H4XSAM3GeNGLKnsBpuijUow064sf7ww1nutC5/3w==\",\n            \"dev\": true,\n            \"license\": \"MIT\"\n        }\n    }\n}\n```\n\n```json ghostty-config/package.json\n{\n    \"name\": \"ghostty-config\",\n    \"version\": \"0.0.1\",\n    \"description\": \"A beautiful config generator for Ghostty terminal.\",\n    \"author\": \"Zerebos\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/zerebos/ghostty-config\"\n    },\n    \"license\": \"Apache-2.0\",\n    \"scripts\": {\n        \"dev\": \"vite dev\",\n        \"build\": \"vite build\",\n        \"preview\": \"vite preview\",\n        \"check\": \"svelte-kit sync && svelte-check --tsconfig ./tsconfig.json\",\n        \"check:watch\": \"svelte-kit sync && svelte-check --tsconfig ./tsconfig.json --watch\",\n        \"test\": \"vitest\",\n        \"lint\": \"eslint .\",\n        \"format\": \"prettier --write . && eslint . --fix\"\n    },\n    \"devDependencies\": {\n        \"@neoconfetti/svelte\": \"^2.2.1\",\n        \"@sveltejs/adapter-auto\": \"^3.2.4\",\n        \"@sveltejs/adapter-static\": \"^3.0.4\",\n        \"@sveltejs/kit\": \"^2.5.24\",\n        \"@sveltejs/vite-plugin-svelte\": \"^4.0.0-next.6\",\n        \"@types/eslint\": \"^9.6.0\",\n        \"eslint\": \"^9.9.0\",\n        \"eslint-config-prettier\": \"^9.1.0\",\n        \"eslint-plugin-svelte\": \"^2.43.0\",\n        \"globals\": \"^15.9.0\",\n        \"prettier\": \"^3.3.3\",\n        \"prettier-plugin-svelte\": \"^3.2.6\",\n        \"svelte\": \"^5.0.0-next.1\",\n        \"svelte-check\": \"^3.8.6\",\n        \"typescript\": \"^5.5.4\",\n        \"typescript-eslint\": \"^8.2.0\",\n        \"vite\": \"^5.4.2\",\n        \"vitest\": \"^2.0.5\"\n    },\n    \"type\": \"module\",\n    \"dependencies\": {\n        \"@fontsource-variable/inter\": \"^5.0.20\"\n    }\n}\n```\n\nsrc\n```css ghostty-config/src/app.css\n@import \"@fontsource-variable/inter\";\n\n/* TODO: rework all of these vars */\n:root {\n    --app-width: 715px;\n    --app-height: 700px;\n    --sidebar-width: 215px;\n\n    /* Base text variables */\n    --font-family: \"Inter Variable\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    --font-family-mono: monospace, monospace;\n    --font-size: 14px;\n    --font-color: #EBE6EE;\n    --font-color-muted: #A19FA3;\n\n\n    /* Background levels */\n    --bg-level-1: #2C2733;\n    --bg-level-2: #2F2935;\n    --bg-level-3: #332D38;\n    --bg-level-4: #39343F;\n    --bg-separator: #39333F;\n    --bg-input-focus: #1F1E1F;\n    --bg-modal: #231E2A;\n    --bg-basic-button: #635F68;\n\n    /* Corresponding border levels */\n    --border-level-1: #000000;\n    --border-level-2: #4F4A54;\n    --border-level-3: #4C4651;\n    --border-level-4: #423E48;\n    --border-separator: #302B37;\n    --border-input: #443e4b;\n    --border-input-focus: 3px solid var(--color-input-accent);\n\n    /* Border radii */\n    --radius-level-1: 15px;\n    --radius-level-2: 12px;\n    --radius-level-3: 8px;\n    --radius-level-4: 6px;\n    --radius-level-5: 4px;\n\n    /* Switch colors */\n    --switch-body-color: var(--border-input);\n    --switch-active-body-color: hsl(from var(--switch-body-color) h s calc(l + 10));\n    --switch-checked-color: var(--color-input-accent);\n    --switch-active-checked-color: hsl(from var(--switch-checked-color) h s calc(l + 10));\n\n    /* Special colors */\n    --font-color-accent: #56A4F5;\n    --color-selected: #134FAC;\n    --color-input-accent: #1769E6;\n    \n    --color-danger: #F25F58;\n    --color-warning: #FBBE3C;\n    --color-success: #58CB42;\n    /*\n    tab color #134FAC\n    switch color #1675DB\n    slider #1769E6\n    */\n\n\n    font-size: var(--font-size);\n    font-family: var(--font-family);\n    color: var(--font-color);\n}\n\n* {box-sizing: border-box;}\n\n\n::-webkit-scrollbar {\n    width: 7px;\n}\n\n::-webkit-scrollbar:hover {\n    background-color: #171717;\n}\n\n::-webkit-scrollbar-track-piece {\n    background-color: transparent;\n}\n\n::-webkit-scrollbar-thumb {\n    display: initial;\n    border-radius: 10px;\n    background-color: #959595;\n    border: 2px solid var(--bg-level-1);\n    /* padding: 12px; */\n}\n\n::-webkit-scrollbar-thumb:hover {\n    border-width: 0;\n}\n\n\nbody {\n    min-height: 100vh;\n    margin: 0;\n\tbackground-image: url(\"$lib/images/monterey.webp\");\n\tbackground-attachment: fixed;\n\tbackground-size: cover;\n\tbackground-position: center center;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\na {\n    color: var(--font-color-accent);\n    text-decoration: dotted underline;\n}\n\na:hover {\n    text-decoration: underline;\n}\n\ninput,\nbutton,\nselect {\n    font-size: inherit;\n    font-family: inherit;\n}\n\nbutton:focus:not(:focus-visible) {\n    outline: none;\n}\n```\n\n```ts ghostty-config/src/app.d.ts\n// See https://kit.svelte.dev/docs/types#app\n// for information about these interfaces\ndeclare global {\n    namespace App {\n        // interface Error {}\n        // interface Locals {}\n        // interface PageData {}\n        // interface PageState {}\n        // interface Platform {}\n    }\n}\n\nexport {};\n```\n\n```html ghostty-config/src/app.html\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <link rel=\"icon\" href=\"%sveltekit.assets%/favicon.ico\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n        <!-- HTML Meta Tags -->\n        <meta name=\"description\" content=\"A beautiful config generator for Ghostty terminal.\">\n        <meta name=\"theme-color\" content=\"#2C56B9\">\n\n        <!-- Facebook Meta Tags -->\n        <meta property=\"og:url\" content=\"https://ghostty.zerebos.com\">\n        <meta property=\"og:type\" content=\"website\">\n        <meta property=\"og:title\" content=\"Ghostty Config\">\n        <meta property=\"og:description\" content=\"A beautiful config generator for Ghostty terminal.\">\n        <meta property=\"og:image\" content=\"https://github.com/user-attachments/assets/aa49f2bb-a6d3-4248-833b-488d27b57815\">\n        <!-- <meta property=\"og:image\" content=\"https://opengraph.b-cdn.net/production/images/c7878e00-847b-47ce-9904-b421527d9042.png?token=pBPixfzYdJTTCQL2HMED3l0IDxnmz4RED_H28dG6k4g&height=800&width=800&expires=33260655349\"> -->\n\n        <!-- Twitter Meta Tags -->\n        <meta name=\"twitter:card\" content=\"summary_large_image\">\n        <meta property=\"twitter:domain\" content=\"ghostty.zerebos.com\">\n        <meta property=\"twitter:url\" content=\"https://ghostty.zerebos.com\">\n        <meta name=\"twitter:title\" content=\"Ghostty Config\">\n        <meta name=\"twitter:description\" content=\"A beautiful config generator for Ghostty terminal.\">\n        <meta name=\"twitter:image\" content=\"https://github.com/user-attachments/assets/aa49f2bb-a6d3-4248-833b-488d27b57815\">\n\n        <!-- Meta Tags Generated via https://www.opengraph.xyz -->\n        %sveltekit.head%\n    </head>\n    <body data-sveltekit-preload-data=\"hover\">\n        <div style=\"display: contents\">%sveltekit.body%</div>\n    </body>\n</html>\n```\n\nlib\ncomponents\n```svelte ghostty-config/src/lib/components/Admonition.svelte\n<script lang=\"ts\">\n    import type {Snippet} from \"svelte\";\n\n    // TODO: add type prop\n    const {size = \"24px\", children}: {size?: string, title?: string, note?: string, children: Snippet} = $props();\n</script>\n\n<div class=\"admonition\">\n    <div class=\"icon\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height={size} viewBox=\"0 -960 960 960\" width={size} fill=\"var(--font-color)\"><path d=\"M440-280h80v-240h-80v240Zm40-320q17 0 28.5-11.5T520-640q0-17-11.5-28.5T480-680q-17 0-28.5 11.5T440-640q0 17 11.5 28.5T480-600Zm0 520q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z\" /></svg>\n    </div>\n    <div class=\"info\">{@render children()}</div>\n</div>\n\n<style>\n.admonition {\n    background: var(--bg-level-3);\n    border: 1px solid var(--border-level-3);\n    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.05) inset;\n    border-radius: var(--radius-level-3);\n    padding: 12px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 20px;\n}\n\n.icon, .info {\n    display: flex;\n    align-items: center;\n}\n\n.icon {\n    font-size: 1.5rem;\n}\n\n.info {\n    /* flex: 1; */\n    /* color: #A4A0A6; */\n    display: inline;\n    font-size: 0.9rem;\n    line-height: 1.5;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/ColorPicker.svelte\n<script lang=\"ts\">\n    import {hexToRgb, hsvToRgb, rgbToHex, rgbToHsv, luminosity, type HexColor} from \"$lib/utils/colors\";\n\n\n    // eslint-disable-next-line prefer-const\n    let {defaultValue = \"#408080\", value = $bindable(defaultValue)}: {defaultValue?: HexColor, value?: HexColor|\"\"} = $props();\n\n    let {hue, saturation, value: brightness} = $state(rgbToHsv(...hexToRgb(value || defaultValue)));\n    const [red, green, blue] = $derived.by(() => hsvToRgb(hue, saturation, brightness));\n    const hueField = $derived(`rgb(${hsvToRgb(hue, 1, 1).join(\", \")})`);\n    const csgTop = $derived((1 - brightness) * 100);\n    const csgLeft = $derived(saturation * 100);\n    const hgLeft = $derived(hue * 100);\n    const hexValue = $derived(rgbToHex(...hsvToRgb(hue, saturation, brightness)));\n    const borderColor = $derived(`rgba(255, 255, 255, ${luminosity(value || defaultValue) * 0.0027451 + 0.3})`);\n    const isEmpty = $derived(value === \"\");\n\n    let tracked: HTMLDivElement|null;\n\n    function moveGrabber(event: MouseEvent) {\n        if (!tracked) return;\n\n        const mouseX = event.clientX;\n        const mouseY = event.clientY;\n        const trackedPos = tracked.getBoundingClientRect();\n\n        let xPercentage = (mouseX - trackedPos.x) / trackedPos.width * 100;\n        let yPercentage = (mouseY - trackedPos.y) / trackedPos.height * 100;\n\n        if (xPercentage > 100) xPercentage = 100;\n        if (xPercentage < 0) xPercentage = 0;\n        if (yPercentage > 100) yPercentage = 100;\n        if (yPercentage < 0) yPercentage = 0;\n\n        if (tracked.id === \"colorspace\") {\n            saturation = xPercentage / 100;\n            brightness = 1 - yPercentage / 100;\n        }\n        else if (tracked.id === \"huespace\") {\n            hue = xPercentage / 100;\n        }\n\n        // Update the customColor which should be bound for change\n        value = hexValue;\n    }\n\n    function mouseMove(event: MouseEvent) {\n        if (!tracked) return;\n        moveGrabber(event);\n    }\n\n    function mouseDown(event: MouseEvent) {\n        tracked = event.currentTarget as HTMLDivElement;\n        moveGrabber(event);\n    }\n</script>\n\n<svelte:document onmouseup={() => tracked = null} onmousemove={mouseMove} />\n\n<div class=\"picker-container\">\n    <div id=\"colorspace\" style:background={hueField} onmousedown={mouseDown} role=\"slider\" aria-valuenow={saturation} tabindex=\"0\">\n        <div class=\"colorspace-grabber\" style:top={csgTop + \"%\"} style:left={csgLeft + \"%\"}></div>\n    </div>\n\n    <div id=\"huespace\" onmousedown={mouseDown} role=\"slider\" aria-valuenow={hue} tabindex=\"0\">\n        <div class=\"huespace-grabber\" style:left={hgLeft + \"%\"}></div>\n    </div>\n\n    <div class=\"color-info\">\n        <div class=\"info-split\">\n            <div class=\"color-picked\" class:empty={isEmpty} style:background=\"rgb({red}, {green}, {blue})\" style:border-color={borderColor}></div>\n\n            <div class=\"color-values\">\n                <div class=\"hex-value\">{isEmpty ? \"-\" : hexValue}</div>\n\n                <div class=\"rgb-values\">\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : red}</div>\n                        <div>R</div>\n                    </div>\n\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : green}</div>\n                        <div>G</div>\n                    </div>\n\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : blue}</div>\n                        <div>B</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<style>\n.picker-container {\n    position: relative;\n    background: var(--bg-modal);\n    border: 1px solid black;\n    box-shadow: 0 0 20px -1px rgba(0,0,0,0.7);\n    padding: 12px;\n    border-radius: var(--radius-level-2);\n    overflow: hidden;\n}\n\n.picker-container::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    box-shadow: 0 0 1px white inset;\n    border-radius: inherit;\n    z-index: 2;\n    pointer-events: none;\n}\n\n#colorspace {\n    width: 240px;\n    height: 160px;\n    position: relative;\n    overflow: hidden;\n    border-radius: var(--radius-level-3);\n    border: 1px solid var(--border-input);\n    box-shadow: 0 0 3px 0px black;\n}\n\n#colorspace::before,\n#colorspace::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n#colorspace::before {\n    background: linear-gradient(to right, rgb(255, 255, 255), rgba(255, 255, 255, 0));\n    z-index: 1;\n}\n\n#colorspace::after {\n    background: linear-gradient(to top, rgb(0, 0, 0), rgba(0, 0, 0, 0));\n    z-index: 2;\n}\n\n.colorspace-grabber {\n    margin: 0;\n    padding: 0;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid black;\n    background: white;\n    position: relative;\n    transform: translate(-50%, -50%);\n    left: 100%;\n    pointer-events: none;\n    z-index: 3;\n}\n\n#huespace {\n    background: linear-gradient(to right, #ff0000 0%, #ffff00 17%, #00ff00 33%, #00ffff 50%, #0000ff 67%, #ff00ff 83%, #ff0000 100%);\n    margin: 15px 10px 10px 10px;\n    border-radius: 10px;\n    height: 10px;\n}\n\n.huespace-grabber {\n    background: white;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid black;\n    transform: translate(-50%, -1px);\n    left: 0%;\n    position: relative;\n    cursor: default;\n    pointer-events: none;\n}\n\n.color-info {\n    display: flex;\n    padding: 10px;\n    /* padding-top: 10px; */\n    width: 100%;\n    position: relative;\n}\n\n.info-split {\n    display: flex;\n    width: 100%;\n    gap: 20px;\n}\n\n.color-picked {\n    display: flex;\n    flex: 1 1 50%;\n    min-height: 100%;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 1);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 1) inset;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    box-shadow: 0 0 3px 0px black;\n}\n\n.color-values {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex: 50%;\n    gap: 12px;\n}\n\n.hex-value {\n    display: flex;\n    justify-content: center;\n    background: var(--bg-input-focus);\n    padding: 2px;\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    width: 100%;\n}\n\n.rgb-values {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n}\n\n.rgb-value {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 6px;\n}\n\n.value {\n    display: flex;\n    justify-content: center;\n    background: var(--bg-input-focus);\n    padding: 2px;\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    width: 30px;\n}\n\n\n.color-picked.empty {\n    background: var(--bg-input-focus)!important;\n    border-color: var(--border-input)!important;\n    box-shadow: none!important;\n    background: linear-gradient(to top left,\n             rgba(0,0,0,0) 0%,\n             rgba(0,0,0,0) calc(50% - 1px),\n             var(--color-danger) 50%,\n             rgba(0,0,0,0) calc(50% + 1px),\n             rgba(0,0,0,0) 100%),\n         linear-gradient(to top right,\n             rgba(0,0,0,0) 0%,\n             rgba(0,0,0,0) calc(50% - 1px),\n             var(--color-danger) 50%,\n             rgba(0,0,0,0) calc(50% + 1px),\n             rgba(0,0,0,0) 100%) var(--bg-input-focus)!important;\n    /* opacity: 0; */\n}\n\n/* .empty .hex-value, */\n/* .empty .value {\n    color: transparent;\n} */\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/Gap.svelte\n<script lang=\"ts\">\n    const {expand = false} = $props();\n</script>\n\n<div class=\"tab-gap\" style:flex={expand ? 1 : \"\"}></div>\n\n<style>\n    .tab-gap {\n        display: flex;\n        min-height: 15px;\n    }\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/History.svelte\n<script lang=\"ts\">\n    import {onNavigate} from \"$app/navigation\";\n    import {processNavigation, canGoBack, canGoForward} from \"$lib/stores/history.svelte\";\n\n\n    onNavigate(processNavigation);\n\n    function back() {\n        window.history.back();\n    }\n\n    function forward() {\n        window.history.forward();\n    }\n</script>\n\n<div class=\"history\">\n    <button class=\"back\" type=\"button\" onclick={back} disabled={!canGoBack()} title=\"Go Back\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" fill=\"#e8eaed\"><path d=\"M400-80 0-480l400-400 71 71-329 329 329 329-71 71Z\" /></svg></button>\n    <button class=\"forward\" type=\"button\" onclick={forward} disabled={!canGoForward()} title=\"Go Forward\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" fill=\"#e8eaed\"><path d=\"m321-80-71-71 329-329-329-329 71-71 400 400L321-80Z\" /></svg></button>\n</div>\n\n\n<style>\n.history {\n    display: inline-flex;\n    gap: 4px;\n    z-index: 11;\n}\n\n.history button,\n.history .back {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    background: none;\n    border: 0;\n    padding: 4px 4px 4px 12px;\n    border-radius: var(--radius-level-5);\n}\n\n.history button svg {\n    fill: var(--font-color-muted);\n}\n\n.history button.forward {\n    padding: 4px 8px;\n}\n\n.history button:hover {\n    background: rgba(255, 255, 255, 0.1);\n}\n\n.history button:active {\n    background: rgba(255, 255, 255, 0.3);\n}\n\n.history button:disabled {\n    opacity: 0.3;\n    background: none!important;\n}\n\n.history button svg {\n    height: 18px;\n    width: 18px;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/Tab.svelte\n<script lang=\"ts\">\n    import {page} from \"$app/stores\";\n    import type {Snippet} from \"svelte\";\n\n\n    interface Props {\n        children: Snippet;\n        icon: Snippet;\n        route?: string;\n    }\n    const {children, icon, route = \"\"}: Props = $props();\n    const path = $derived($page.url.pathname);\n\n    const isExternal = route.startsWith(\"http\");\n    const target = isExternal ? \"_blank\" : \"\";\n    const rel = isExternal ? \"noopener noreferer\" : \"\";\n\n    const selected = $derived(path === route);\n</script>\n\n\n<a href={route} class=\"nav-tab\" class:selected {target} {rel}>\n    <div class=\"tab-icon\">{@render icon()}</div>\n    <div class=\"tab-label\">{@render children()}</div>\n    {#if isExternal}\n        <div class=\"tab-external\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#e8eaed\"><path d=\"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h280v80H200v560h560v-280h80v280q0 33-23.5 56.5T760-120H200Zm188-212-56-56 372-372H560v-80h280v280h-80v-144L388-332Z\" /></svg>\n        </div>\n    {/if}\n</a>\n\n\n<style>\n    .nav-tab {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 10px;\n        padding: 6px;\n        border-radius: var(--radius-level-4);\n        font-weight: 600;\n        position: relative;\n        text-decoration: none;\n    }\n\n    .nav-tab.selected {\n        background: var(--color-selected);\n    }\n\n    .nav-tab .tab-icon {\n        width: 20px;\n        height: 20px;\n    }\n\n    .nav-tab .tab-label {\n        font-size: 1rem;\n        flex: 1;\n        justify-content: flex-start;\n        color: var(--font-color)!important;\n        text-decoration: none !important;\n    }\n\n    .nav-tab:hover {\n        text-decoration: none !important;\n    }\n\n    .tab-external {\n        display: flex;\n    }\n\n    .tab-external svg {\n        width: 20px;\n        height: 20px;\n    }\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/User.svelte\n<script lang=\"ts\">\n    import {page} from \"$app/stores\";\n    import logo from \"$lib/images/ghost.svg\";\n\n\n    const {route = \"/\", name = \"Ghostty Config\", subtext = \"Unofficial Tool\"} = $props();\n    const path = $derived($page.url.pathname);\n\n    const selected = $derived(path === route || path.startsWith(\"/app\"));\n</script>\n\n\n<a href={route} class=\"user-tab\" class:selected>\n    <div class=\"user-avatar\">\n        <img src={logo} alt=\"Ghostty Logo\" />\n    </div>\n    <div class=\"user-label\">\n        <div class=\"user-name\">{name}</div>\n        <div class=\"user-subtext\">{subtext}</div>\n    </div>\n</a>\n\n\n<style>\n    .user-tab {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 8px;\n        padding: 6px;\n        border-radius: var(--radius-level-4);\n        text-decoration: none!important;\n        font-weight: 600;\n    }\n\n    .user-tab.selected {\n        background: var(--color-selected);\n    }\n\n    .user-avatar img {\n        height: 30px;\n        width: 30px;\n    }\n\n    .user-avatar {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        background: linear-gradient(#03028F, #09043A);\n        height: 40px;\n        min-width: 40px;\n        border-radius: 50%;\n        /* border: 2px solid black; */\n        /* box-shadow: 0 0 0 2px white; */\n    }\n\n    .user-label {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n    }\n\n    .user-name {\n        font-size: 1rem;\n        color: var(--font-color);\n    }\n\n    .user-subtext {\n        font-size: 0.7rem;\n        color: var(--font-color-muted);\n    }\n\n    .selected .user-subtext {\n        color: var(--font-color);\n    }\n</style>\n```\n\nsettings\n```svelte ghostty-config/src/lib/components/settings/Color.svelte\n<script lang=\"ts\">\n    import {fade, fly} from \"svelte/transition\";\n    import {luminosity, isDark, type HexColor} from \"$lib/utils/colors\";\n    import ColorPicker from \"$lib/components/ColorPicker.svelte\";\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), size = 20, label = \"\", defaultValue}: {value: HexColor, size?: number, label?: string, defaultValue?: HexColor} = $props();\n    const borderColor = $derived(`rgba(255, 255, 255, ${luminosity(value) * 0.0027451 + 0.3})`);\n    const labelColor = $derived(isDark(value) ? `var(--font-color)` : \"black\");\n    let popoutOpen = $state(false);\n\n    function click(event: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n        popoutOpen = !popoutOpen;\n    }\n\n    function reset(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (defaultValue !== undefined) value = defaultValue;\n    }\n\n    function keydown(event: KeyboardEvent) {\n        if (!popoutOpen) return;\n        if (event.key === \"Escape\") click(event);\n    }\n</script>\n\n\n<svelte:document onkeydown={keydown} />\n\n<div class=\"color-wrap\" style:width=\"{size}px\" style:height=\"{size}px\" style:background-color={value} style:border-color={borderColor}>\n    {#if label}<span class=\"label\" style:color={labelColor}>{label}</span>{/if}\n    <input type=\"color\" bind:value style:width=\"{size}px\" style:height=\"{size}px\" onclick={click} oncontextmenu={reset} />\n</div>\n\n{#if popoutOpen}\n<div class=\"shadow\" onclick={click} transition:fade={{duration: 200}} role=\"none\"></div>\n<div class=\"picker-container\" transition:fly={{y: 32, duration: 200}}>\n    <ColorPicker bind:value />\n    <button class=\"close\" onclick={click} type=\"button\" title=\"Close\"><span>×</span></button>\n</div>\n{/if}\n\n\n<style>\n/* .color-wrap-container {\n    position: relative;\n} */\n.shadow {\n    background: rgba(0, 0, 0, 0.3);\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    z-index: 1;\n}\n\n.picker-container {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n}\n.picker-container .close {\n    background: var(--color-danger);\n    color: white;\n    position: absolute;\n    top: -4px;\n    right: -4px;\n    border-radius: 50%;\n    height: 16px;\n    width: 16px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.1rem;\n    padding: 0;\n    cursor: pointer;\n    border: 0;\n    outline: 0;\n}\n\n.picker-container .close span {\n    margin-top: -1.5px;\n}\n\n.color-wrap {\n    position: relative;\n    display: flex;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    outline: none;\n    overflow: hidden;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    /* box-shadow: 0 0 1px 0px rgba(255, 255, 255, 0.5) inset; */\n    box-shadow: 0 0 3px 0px black;\n    justify-content: center;\n    align-items: center;\n}\n\ninput {\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    width: 20px;\n    height: 20px;\n    border: 0;\n    padding: 0;\n    outline: none;\n    box-shadow: none;\n    opacity: 0;\n}\n\ninput:focus {\n    outline: var(--border-input-focus);\n}\n\n.label {\n    /* text-shadow: 0 0 5px black; */\n    font-weight: 600;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Dropdown.svelte\n<script lang=\"ts\">\n    type Props = {\n        value: string;\n        options: (string | {name: string, value: string})[]\n    };\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), options}: Props = $props();\n</script>\n\n<select bind:value>\n    {#each options as option, i (i)}\n        {#if typeof(option) === \"string\"}\n            <option value={option}>{option}</option>\n        {:else}\n            <option value={option.value}>{option.name}</option>\n        {/if}\n    {/each}\n</select>\n\n<style>\nselect {\n    background: var(--bg-level-2);\n    border: 0px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    outline: none;\n    color: inherit;\n    text-align: right;\n    max-width: 175px;\n}\n\nselect:focus {\n    background: var(--bg-input-focus);\n    outline: var(--border-input-focus);\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Group.svelte\n<script lang=\"ts\">\n    import type {Snippet} from \"svelte\";\n\n    const {title = \"\", note = \"\", children, flex = \"\"}: {title?: string, note?: string, children: Snippet, flex?: string|number} = $props();\n</script>\n\n<div class=\"setting-group\">\n    <div class=\"group-info\">\n        {#if title}<h2>{title}</h2>{/if}\n        {#if note}<h4>{note}</h4>{/if}\n    </div>\n    <div class=\"settings-items\" style:flex style:height={flex ? \"100%\" : null}>\n        {@render children()}\n    </div>\n</div>\n\n<style>\n.setting-group {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    height: 100%;\n}\n\n.group-info {\n    display: flex;\n    flex-direction: column;\n    padding-left: 12px;\n}\n\n/* .setting-group:first-child h2 {\n    margin-top: 10px;\n} */\n\nh2 {\n    font-size: 1.05rem;\n    font-weight: 600;\n    margin-top: 20px;\n}\n\nh4 {\n    font-size: 0.8rem;\n    color: var(--font-color-muted);\n    margin-top: -6px;\n    white-space: preserve;\n}\n\n.settings-items {\n    display: flex;\n    flex-direction: column;\n    background: var(--bg-level-2);\n    border-radius: var(--radius-level-3);\n    border: 1px solid var(--border-level-2);\n    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.05) inset;\n    padding: 12px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Item.svelte\n<script lang=\"ts\">\n    import type {Snippet} from \"svelte\";\n\n    const {name = \"\", note = \"\", children}: {name?: string, note?: string, children: Snippet} = $props();\n</script>\n\n<div class=\"setting-item\">\n    <div class=\"row\">\n        {#if name}<div class=\"setting-name\">{name}</div>{/if}\n        <div class=\"setting\">{@render children()}</div>\n    </div>\n    {#if note}\n    <div class=\"note\">\n        {note}\n    </div>\n    {/if}\n</div>\n\n\n<style>\n.setting-item {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.setting-item .row {\n    display: flex;\n    justify-content: space-between;\n}\n\n.setting-name {\n    /* font-weight: 500; */\n    font-size: 1.1rem;\n}\n\n.setting {\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n}\n\n.note {\n    color: var(--font-color-muted);\n    font-size: 0.9rem;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Keybinds.svelte\n<script lang=\"ts\">\n    import Text from \"./Text.svelte\";\n\n    let selected: number[] = $state([]);\n    let {value = $bindable([])}: {value: string[]} = $props();\n\n    function handleKeyPress(event: KeyboardEvent) {\n        if (event.key === \"Escape\") selected = [];\n        const shouldExpand = event.ctrlKey || event.shiftKey;\n        if (!shouldExpand && selected.length) return;\n        // if (event.key === \"ArrowUp\") console.log(\"up\");\n    }\n\n    function select(index: number) {\n        // selected = [index];\n        return (event: MouseEvent) => {\n            if (!event.ctrlKey) return selected = [index];\n            if (!selected.includes(index)) return selected.push(index);\n            selected.splice(selected.indexOf(index), 1);\n        };\n    }\n\n    let scroller: HTMLDivElement;\n    function addNew() {\n        // console.log(\"ADD NEW\");\n        value = [...value, \"=\"];\n        setTimeout(() => scroller.scrollTop = scroller.scrollHeight, 1);\n    }\n\n    function remove() {\n        // console.log(selected.map(i => i));\n        // console.log(value.map(v => v));\n        value = value.filter((v, i) => {\n            const shouldRemove = selected.includes(i);\n            // console.log(`Filtering ${v} ${i} ${shouldRemove}`);\n            return !shouldRemove;\n        });\n        // console.log(value.map(v => v));\n        selected = [];\n    }\n\n\n    function update(index: number, isAction: boolean = false) {\n        return (event: Event) => {\n            const current = value[index].split(\"=\");\n            const indexToUpdate = isAction ? 1 : 0;\n            current[indexToUpdate] = (event.target as HTMLInputElement).value;\n            value[index] = current.join(\"=\");\n        };\n    }\n</script>\n\n<div class=\"expandable-list\">\n    <div class=\"item-list\" bind:this={scroller}>\n        {#each value as _, i (i)}\n            <div class=\"keybind\" class:selected={selected.includes(i)} onclick={select(i)} onkeypress={() => select(i)} role=\"option\" tabindex=\"0\" aria-selected={selected.includes(i)}>\n                <Text value={value[i].split(\"=\")[0]} blank={true} align=\"left\" change={update(i)} />\n                <Text value={value[i].split(\"=\")[1]} blank={true} change={update(i, true)} />\n            </div>\n        {/each}\n    </div>\n    <div class=\"list-controls\">\n        <button onclick={addNew} type=\"button\" title=\"Add Keybind\">+</button>\n        <button onclick={remove} disabled={selected.length === 0} type=\"button\" title=\"Remove Selected\">-</button>\n    </div>\n</div>\n\n<svelte:document onkeydown={handleKeyPress} />\n\n<style>\n.expandable-list {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n    position: relative;\n    background: var(--bg-level-2);\n    border-radius: var(--radius-level-3);\n    border: 1px solid var(--border-level-2);\n    overflow: hidden;\n}\n\n.list-controls {\n    border-radius: 0 0 var(--radius-level-3) var(--radius-level-3);\n    background: var(--bg-level-4);\n    min-height: 30px;\n    max-height: 30px;\n    border-top: 2px solid var(--border-level-4);\n    display: flex;\n    align-items: center;\n    padding-left: 10px;\n    gap: 10px;\n}\n\n.item-list {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n}\n\n.keybind {\n    display: flex;\n    justify-content: space-between;\n    padding: 8px;\n}\n\n.keybind:nth-of-type(even) {\n    background: rgba(255, 255, 255, 0.05)\n}\n\n.keybind.selected {\n    background: #2457C9;\n}\n\nbutton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 0;\n    background: transparent;\n    color: var(--font-color);\n    font-size: 1.5rem;\n    position: relative;\n}\n/*\nbutton + button {\n    margin-left: 2px;\n} */\n\nbutton + button::before {\n    content: \"\";\n    position: absolute;\n    left: -6px;\n    top: 5px;\n    bottom: 5px;\n    background: var(--border-level-2);\n    width: 2px;\n}\n\nbutton:disabled {\n    opacity: 0.5;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/LinkItem.svelte\n<script lang=\"ts\">\n    // TODO: think of a way to elegantly de-duplicate this with the regular ITEM\n    const {name = \"\", note = \"\", href, icon}: {name?: string, note?: string, href: string, icon?: string} = $props();\n</script>\n\n<a class=\"setting-item\" {href}>\n    <div class=\"row\">\n        <div class=\"setting-name\">\n            {#if icon}<img src={icon} alt={`${name} Submenu`} />{/if}\n            <span>{name}</span>\n        </div>\n        <div class=\"setting\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" fill=\"#e8eaed\"><path d=\"m321-80-71-71 329-329-329-329 71-71 400 400L321-80Z\" /></svg>\n        </div>\n    </div>\n    {#if note}\n        <div class=\"note\">\n            {note}\n        </div>\n    {/if}\n</a>\n\n\n<style>\n.setting-item {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    color: inherit;\n    text-decoration: none!important;\n}\n\n.setting-item .row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-height: 24px;\n}\n\n.setting-name {\n    /* font-weight: 500; */\n    font-size: 1.1rem;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n}\n\n.setting-name img {\n    height: 24px;\n}\n\n.setting {\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n    min-width: none;\n    min-height: none;\n}\n\n.setting svg {\n    height: 16px;\n    fill: #A7A3AA;\n}\n\n.note {\n    color: var(--font-color-muted);\n    font-size: 0.9rem;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Number.svelte\n<script lang=\"ts\">\n    type Props = {\n        value: number;\n        min?: number;\n        max?: number;\n        step?: number;\n        size?: number;\n        range?: boolean;\n    };\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), min, max, step, size, range}: Props = $props();\n\n    const inputType = range ? \"range\" : \"number\";\n    if (!size && !range) size = max ? max.toString().length : value.toString().length + 2;\n</script>\n\n<div class=\"input-wrapper\">\n    {#if range}\n        <div>{value}</div>\n    {/if}\n    <input type={inputType} bind:value {min} {max} {step} {size} />\n</div>\n\n<style>\n/* TODO: make custom component */\n.input-wrapper {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\ninput {\n    background: var(--bg-level-2);\n    border: 1px solid transparent;\n    border-radius: var(--radius-level-5);\n    outline: none;\n    color: inherit;\n    text-align: right;\n    max-width: 175px;\n}\n\ninput[type=\"number\"]:focus {\n    background: var(--bg-input-focus);\n    outline: var(--border-input-focus);\n}\n\n\n/* Chrome is dumb so TODO: add a custom slider */\ninput[type=\"range\"] {\n   border: 0;\n   height: 5px;\n   background-color: var(--bg-separator);\n}\n\ninput[type=\"range\"]::-moz-range-progress {\n   background-color: var(--color-input-accent);\n   border-radius: 5px;\n   height: 5px;\n   width: 100%;\n}\n\ninput[type=\"range\"]::-moz-range-thumb {\n   margin-top: -10px;\n   background-color: #98949B;\n   border-radius: 50%;\n   height: 20px;\n   width: 20px;\n}\n\ninput[type=\"range\"]:focus::-moz-range-thumb {\n    background-color: hsl(from #98949B h s calc(l + 10));\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Palette.svelte\n<script lang=\"ts\">\n    import type {HexColor} from \"$lib/utils/colors\";\n    import Color from \"./Color.svelte\";\n\n\n    const {value = $bindable([]), defaultValue}: {value: HexColor[], defaultValue: HexColor[]} = $props();\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as _, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={value[i]} size={40} label={(i + 1).toString()} />\n        {/each}\n    </div>\n</div>\n\n<style>\n.grid-container {\n    display: flex;\n    align-items: center;\n    flex: 1;\n}\n.color-grid {\n    display: grid;\n    /* width: 100%; */\n    flex: 1;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(32, 1fr);\n    /* grid-column-gap: 30px; */\n    justify-content: space-around;\n    justify-items: center;\n\n    /* align-items: center; */\n    /* align-content: space-evenly; */\n    grid-row-gap: 14px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Separator.svelte\n<div class=\"separator\"></div>\n\n<style>\n.separator {\n    display: flex;\n    height: 2px;\n    width: 100%;\n    background: var(--bg-separator);\n    margin: 12px 0;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Switch.svelte\n<script lang=\"ts\">\n    // eslint-disable-next-line prefer-const\n    let {disabled = false, checked = $bindable(false)}: {disabled?: boolean, checked?: boolean} = $props();\n\n    function change() {\n        checked = !checked;\n    }\n</script>\n\n\n<div class=\"switch\" class:disabled>\n    <input type=\"checkbox\" {disabled} {checked} onchange={change} />\n    <div class=\"switch-body\">\n        <svg class=\"switch-slider\" viewBox=\"0 0 16 16\" preserveAspectRatio=\"xMinYMid meet\">\n            <rect class=\"switch-handle\" fill=\"white\" x=\"0\" y=\"0\" height=\"16\" width=\"16\" rx=\"8\"></rect>\n        </svg>\n    </div>\n</div>\n\n\n<style>\n.switch {\n    position: relative;\n    transition: 250ms cubic-bezier(0, 0.3, 0.7, 1) filter, 250ms cubic-bezier(0, 0.3, 0.7, 1) opacity;\n}\n\n.switch-body {\n    border-radius: 14px;\n    width: 32px;\n    height: 20px;\n    background-color: var(--switch-body-color);\n    transition: 250ms cubic-bezier(0, 0.3, 0.7, 1) background-color, 250ms cubic-bezier(0, 0.3, 0.7, 1) box-shadow;\n    position: relative;\n    box-shadow: 0 0 1px transparent inset;\n}\n\n.switch input:active + .switch-body {\n    background-color: var(--switch-active-body-color);\n}\n\n.switch input:checked + .switch-body {\n    background-color: var(--switch-checked-color);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n}\n\n.switch input:checked:active + .switch-body {\n    background-color: var(--switch-active-checked-color);\n}\n\n.switch input {\n    position: absolute;\n    z-index: 1;\n    opacity: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 100px;\n    cursor: pointer;\n}\n\n.switch-body .switch-slider {\n    display: flex;\n    position: absolute;\n    left: 2px;\n    top: 2px;\n    width: 16px;\n    height: 16px;\n    transition: 250ms cubic-bezier(0, 0.3, 0.7, 1);\n}\n\n.switch input:checked + .switch-body .switch-slider {\n    left: 14px;\n}\n\n.switch-body .switch-slider .switch-handle {\n    transition: 250ms cubic-bezier(0, 0.3, 0.7, 1);\n    position: relative;\n    display: flex;\n}\n\n.disabled {\n    opacity: 0.5;\n    filter: grayscale(1);\n}\n\n.disabled input {\n    cursor: not-allowed;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Text.svelte\n<script lang=\"ts\">\n    interface Props {\n        value: string;\n        blank?: boolean;\n        align?: \"right\" | \"left\";\n        change?: (e: Event) => void;\n    }\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), blank = false, align = \"right\", change}: Props = $props();\n\n    function click(event: MouseEvent) {\n        event.stopPropagation();\n    }\n</script>\n\n<input class:blank class:empty={value === \"\"} class={align} type=\"text\" onclick={click} onchange={change} bind:value />\n\n<style>\ninput {\n    background: var(--bg-level-2);\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    outline: none;\n    color: inherit;\n    text-align: right;\n    max-width: 175px;\n    padding: 0 4px 2px 0;\n}\n\ninput:focus, input.blank:focus {\n    background:var(--bg-input-focus);\n    outline: var(--border-input-focus);\n}\n\ninput.blank {\n    background: none;\n    border-width: 0;\n}\n\ninput.blank.empty {\n    border-width: 1px;\n}\n\ninput.left {\n    text-align: left;\n}\n</style>\n```\n\ndata\n```ts ghostty-config/src/lib/data/settings.ts\nimport config from \"$lib/stores/config.svelte\";\nimport type {HexColor} from \"$lib/utils/colors\";\n\ninterface BaseSettingType {\n    id: string;\n    name: string;\n    note?: string;\n}\n\ninterface Panel extends BaseSettingType {\n    groups: Group[];\n}\n\ninterface Group extends BaseSettingType {\n    settings: (Switch | Text | Number | Dropdown | Color | Palette | Keybinds)[];\n    // type: \"group\";\n}\n\ntype SettingType = \"switch\" | \"number\" | \"dropdown\" | \"text\" | \"color\" | \"palette\" | \"keybinds\";\n\ninterface BaseSettingItem extends BaseSettingType {\n    type: SettingType;\n    value: unknown;\n}\n\ninterface Switch extends BaseSettingItem {\n    type: \"switch\";\n    value: boolean;\n}\n\ninterface Text extends BaseSettingItem {\n    type: \"text\";\n    value: string;\n}\n\ninterface Number extends BaseSettingItem {\n    type: \"number\";\n    value: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    size?: number;\n    range?: boolean;\n}\n\ninterface DropdownOption {\n    name: string;\n    value: string;\n}\n\ninterface Dropdown extends BaseSettingItem {\n    type: \"dropdown\";\n    value: \"string\";\n    options: (DropdownOption | string)[];\n}\n\ninterface Color extends BaseSettingItem {\n    value: HexColor;\n    type: \"color\";\n}\n\ninterface Palette extends BaseSettingItem {\n    value: HexColor[];\n    type: \"palette\";\n}\n\nexport type KeybindString = `${string}=${string}`;\ninterface Keybinds extends BaseSettingItem {\n    value: KeybindString[];\n    type: \"keybinds\";\n}\n\ninterface ThemeResponse {\n  \"type\": string;\n  \"encoding\": string;\n  \"size\": number;\n  \"name\": string;\n  \"path\": string;\n  \"content\": string;\n  \"sha\": string;\n  \"url\": string;\n  \"git_url\": string;\n  \"html_url\": string;\n  \"download_url\": string;\n  \"_links\": {\n    \"git\": string;\n    \"self\": string;\n    \"html\": string;\n  }\n}\n\ninterface ColorScheme {\n  palette: { [key: string]: string };\n  background?: string;\n  foreground?: string;\n  cursorColor?: string;\n  selectionBackground?: string;\n  selectionForeground?: string;\n}\n\nconst fetchThemeFiles = async () => {\n    const apiUrl = \"https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty\";\n\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const themeFiles = await response.json();\n\n    return {themeFiles};\n};\n\n// Function to convert raw string data into a JSON object\nexport const parseColorScheme = (input: string): ColorScheme => {\n  const colorScheme: ColorScheme = {palette: {}};\n\n  // Split input by lines\n  const lines = input.split(\"\\n\");\n\n  lines.forEach((line) => {\n    if (line.startsWith(\"palette\")) {\n      const [, rest] = line.split(\"palette =\").map(part => part.trim());\n\n      if (rest) {\n        const [paletteIndex, color] = rest.split(\"=\");\n        if (paletteIndex && color) {\n          colorScheme.palette[paletteIndex.trim()] = color.trim();\n        }\n      }\n    }\n    else {\n      const [key, value] = line.split(\"=\").map(part => part.trim());\n\n      switch (key) {\n        case \"background\":\n          colorScheme.background = `#${value}`;\n          break;\n        case \"foreground\":\n          colorScheme.foreground = `#${value}`;\n          break;\n        case \"cursor-color\":\n          colorScheme.cursorColor = `#${value}`;\n          break;\n        case \"selection-background\":\n          colorScheme.selectionBackground = `#${value}`;\n          break;\n        case \"selection-foreground\":\n          colorScheme.selectionForeground = `#${value}`;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n\n  return colorScheme;\n};\n\nexport const fetchColorScheme = async (theme: string) => {\n    const apiUrl = `https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty${theme ? \"/\" + theme : \"\"}`;\n\n    const response = await fetch(apiUrl,{\n        headers: {\n            Accept: \"application/vnd.github.raw+json\"\n        }\n    });\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const colorSchemeResponse = await response.text();\n\n    return {colorSchemeResponse};\n};\n\nconst {themeFiles} = await fetchThemeFiles();\nconst themeFileNames = themeFiles && themeFiles.map((file: ThemeResponse) => file.name);\n\n// const {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\n// const colorScheme = parseColorScheme(colorSchemeResponse);\n\nexport default [\n    {\n        id: \"application\",\n        name: \"Application\",\n        note: \"\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                // type: \"group\",\n                settings: [\n                    {id: \"title\", name: \"Static title for all windows\", type: \"text\", value: \"\"},\n                    {id: \"desktopNotifications\", name: \"Allow desktop notifications\", type: \"switch\", value: true},\n                    {id: \"configFile\", name: \"Additional config file\", type: \"text\", value: \"\"},\n                    {id: \"configDefaultFiles\", name: \"Load default config file\", type: \"switch\", value: true},\n                    {id: \"linkUrl\", name: \"Automatically link URLs\", note: \"Matching occurs while holding the control (Linux) or command (macOS) key.\", type: \"switch\", value: true},\n                ]\n            },\n            {\n                id: \"startup\",\n                name: \"Startup\",\n                // type: \"group\",\n                settings: [\n                    {id: \"command\", name: \"Command to run on launch\", type: \"text\", value: \"\"},\n                    {id: \"fullscreen\", name: \"Launch in fullscreen mode\", type: \"switch\", value: false},\n                    {id: \"initialWindow\", name: \"Show a window on startup\", type: \"switch\", value: true},\n                    {id: \"workingDirectory\", name: \"Directory to use after startup\", note: \"Special values of `home` and `inherit` are also allowed here.\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shutdown\",\n                name: \"Shutdown\",\n                // type: \"group\",\n                settings: [\n                    {id: \"waitAfterCommand\", name: \"Wait for input after command\", type: \"switch\", value: false},\n                    {id: \"abnormalCommandExitRuntime\", name: \"Abnormal command exit runtime\", type: \"number\", value: 250, min: 0, size: 5},\n                    {id: \"confirmCloseSurface\", name: \"Confirm when closing a surface\", type: \"switch\", value: true},\n                    {id: \"quitAfterLastWindowClosed\", name: \"Quit after closing last window\", type: \"switch\", value: false},\n                    {id: \"quitAfterLastWindowClosedDelay\", name: \"Delay before auto quitting\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shell\",\n                name: \"Shell Integration\",\n                // type: \"group\",\n                settings: [\n                    {id: \"shellIntegration\", name: \"Shell integration style\", type: \"dropdown\", value: \"detect\", options: [\"none\", \"detect\", \"bash\", \"elvish\", \"fish\", \"zsh\"]},\n                    {id: \"shellIntegrationFeatures\", name: \"Shell integration features\", note: \"The current available features are cursor, sudo, and title. Including one force enables it, prefixing it with `no-` force disables it, omitting it falls back to default.\", type: \"text\", value: \"cursor,no-sudo,title\"},\n                    {id: \"term\", name: \"TERM environment variable\", type: \"text\", value: \"xterm-ghostty\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced\",\n                note: \"You should only touch these settings if you know what you're doing, otherwise you could cause major issues with Ghostty!\",\n                // type: \"group\",\n                settings: [\n                    {id: \"scrollbackLimit\", name: \"Scrollback buffer size (bytes)\", note: \"This buffer exists completely in memory but is allocated lazily.\", type: \"number\", value: 10000000, min: 0, size: 10},\n                    {id: \"customShader\", name: \"Custom shader\", note: \"This matches the API of Shadertoy.\", type: \"text\", value: \"\"},\n                    {id: \"customShaderAnimation\", name: \"Allow shaders to animate\", type: \"dropdown\", value: \"false\", options: [\"false\", \"true\", \"always\"]},\n                    {id: \"enquiryResponse\", name: \"Reponse to ENQ\", type: \"text\", value: \"\"},\n                    {id: \"oscColorReportFormat\", name: \"OSC color report format\", type: \"dropdown\", value: \"16-bit\", options: [\"none\", \"8-bit\", \"16-bit\"]},\n                    {id: \"vtKamAllowed\", name: \"VT kam mode allowed\", note: \"If you don't know what this is, don't touch it!\", type: \"switch\", value: false},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"clipboard\",\n        name: \"Clipboard\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"clipboardRead\", name: \"Allow terminal to read clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"clipboardWrite\", name: \"Allow terminal to write clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"copyOnSelect\", name: \"Copy on select\", type: \"switch\", value: true},\n                    {id: \"clipboardTrimTrailingSpaces\", name: \"Trim trailing space on copy\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteProtection\", name: \"Confirm when pasting unsafely\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteBracketedSafe\", name: \"Mark bracketed paste as safe\", type: \"switch\", value: true},\n                    {id: \"imageStorageLimit\", name: \"Image buffer limit (bytes)\", type: \"number\", value: 320000000, min: 0, max: 4294967295, size: 12},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"window\",\n        name: \"Window\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"windowVsync\", name: \"Enable vsync\", type: \"switch\", value: true},\n                    {id: \"windowInheritWorkingDirectory\", name: \"Inherit working directory\", type: \"switch\", value: true},\n                    {id: \"windowInheritFontSize\", name: \"Inherit font size\", type: \"switch\", value: true},\n                    {id: \"windowColorspace\", name: \"Window colorspace\", type: \"dropdown\", value: \"srgb\", options: [\"srgb\", \"display-p3\"]},\n                    {id: \"windowSaveState\", name: \"Save window state\", type: \"dropdown\", value: \"default\", options: [\"default\", \"never\", \"always\"]},\n                    // maybe move to application?\n                    {id: \"windowNewTabPosition\", name: \"New tab position\", type: \"dropdown\", value: \"current\", options: [\"current\", \"end\"]},\n                ]\n            },\n            {\n                id: \"appearance\",\n                name: \"Appearance\",\n                settings: [\n                    {id: \"windowTheme\", name: \"Window theme\", type: \"dropdown\", value: \"auto\", options: [\"auto\", \"system\", \"light\", \"dark\"]},\n                    {id: \"windowDecoration\", name: \"Enable native frames\", type: \"switch\", value: true},\n                    {id: \"windowPaddingX\", name: \"Horizontal window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingY\", name: \"Vertical window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingBalance\", name: \"Auto-balance window padding\", type: \"switch\", value: false},\n                    {id: \"windowPaddingColor\", name: \"Window padding color\", type: \"dropdown\", value: \"extend\", options: [\"background\", \"extend\", \"extend-always\"]},\n\n                    // maybe move to colors\n                    {id: \"backgroundOpacity\", name: \"Background opacity\", type: \"number\", range: true, value: 1, min: 0, max: 1, step: 0.01},\n                    {id: \"backgroundBlurRadius\", name: \"Background blur radius\", note: \"A value of 20 is reasonable for a good looking blur, going beyond that can cause rendering and performance issues.\", type: \"number\", range: true, value: 0, min: 0, max: 50, step: 1},\n                    {id: \"unfocusedSplitOpacity\", name: \"Unfocused split opacity\", type: \"number\", range: true, value: 0.7, min: 0.15, max: 1, step: 0.01},\n                    {id: \"unfocusedSplitFill\", name: \"Unfocused split fill color\", type: \"color\", value: \"\"},\n                ]\n            },\n            {\n                id: \"resize\",\n                name: \"Sizing & Resizing\",\n                settings: [\n                    {id: \"windowHeight\", name: \"Initial window height\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 4, step: 1, size: 4},\n                    {id: \"windowWidth\", name: \"Initial window width\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 10, step: 1, size: 4},\n                    {id: \"windowStepResize\", name: \"Resize in grid cell increments\", type: \"switch\", value: false},\n                    {id: \"resizeOverlay\", name: \"Show resize overlays\", type: \"dropdown\", value: \"after-first\", options: [\"always\", \"never\", \"after-first\"]},\n                    {id: \"resizeOverlayPosition\", name: \"Resize overlay position\", type: \"dropdown\", value: \"center\", options: [\"center\", \"top-left\", \"top-center\", \"top-right\", \"bottom-left\", \"bottom-center\", \"bottom-right\"]},\n                    {id: \"resizeOverlayDuration\", name: \"Show resize overlay time\", type: \"text\", value: \"750ms\"},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"colors\",\n        name: \"Colors\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                settings: [\n                    {\n                        id: \"theme\",\n                        name: \"Color theme\",\n                        note: \"Any colors selected after setting this will overwrite the theme's colors.\",\n                        type: \"dropdown\",\n                        value: \"\",\n                        options: [\"\", ...themeFileNames]\n                    },\n                    {id: \"boldIsBright\", name: \"Bold text uses bright colors\", type: \"switch\", value: false},\n                    {id: \"minimumContrast\", name: \"Minimum contrast\", type: \"number\", value: 1, range: true, min: 1, max: 21, step: 0.1},\n                ]\n            },\n            {\n                id: \"base\",\n                name: \"Base Colors\",\n                note: \"The preview here shows selected text in the second line of the command output.\",\n                settings: [\n                    {id: \"background\", name: \"Background color\", type: \"color\", value: \"#282c34\"},\n                    {id: \"foreground\", name: \"Foreground color\", type: \"color\", value: \"#ffffff\"},\n                    {id: \"selectionBackground\", name: \"Selection background color\", type: \"color\", value: \"\"},\n                    {id: \"selectionForeground\", name: \"Selection foreground color\", type: \"color\", value: \"\"},\n                    {id: \"selectionInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause selections to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                ]\n            },\n            {\n                id: \"cursor\",\n                name: \"Cursor\",\n                note: \"The cursor in this preview blinks on and off at 1 second intervals for emphasis, it may not match what you see in Ghostty!\",\n                settings: [\n                    {id: \"cursorColor\", name: \"Cursor color\", type: \"color\", value: \"\"},\n                    {id: \"cursorText\", name: \"Text color under cursor\", type: \"color\", value: \"\"},\n                    {id: \"cursorInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause cells under the cursor to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                    {id: \"cursorOpacity\", name: \"Cursor opacity\", type: \"number\", value: 1, range: true, min: 0, max: 1, step: 0.05},\n                    {id: \"cursorStyle\", name: \"Cursor style\", type: \"dropdown\", value: \"block\", options: [\"block\", \"bar\", \"underline\", {value: \"block_hollow\", name: \"hollow block\"}]},\n                    {id: \"cursorStyleBlink\", name: \"Cursor blink style\", note: \"The `default` option defers to DEC mode 12 to determine blinking state.\", type: \"dropdown\", value: \"\", options: [\"true\", \"false\", {value: \"\", name: \"default\"}]},\n                ]\n            },\n            {\n                id: \"palette\",\n                name: \"Color Palette\",\n                note: \"The first 16 colors are the most commonly displayed colors in the terminal.\\n\\nColors 1-8 are typically black, red, green, yellow, blue, magenta, cyan, and white.\\nColors 9-16 are typically \\\"brighter\\\" variants of these colors.\",\n                settings: [\n                    {id: \"palette\", name: \"\", type: \"palette\", value: [\"#1d1f21\",\"#cc6666\",\"#b5bd68\",\"#f0c674\",\"#81a2be\",\"#b294bb\",\"#8abeb7\",\"#c5c8c6\",\"#666666\",\"#d54e53\",\"#b9ca4a\",\"#e7c547\",\"#7aa6da\",\"#c397d8\",\"#70c0b1\",\"#eaeaea\",\"#000000\",\"#00005f\",\"#000087\",\"#0000af\",\"#0000d7\",\"#0000ff\",\"#005f00\",\"#005f5f\",\"#005f87\",\"#005faf\",\"#005fd7\",\"#005fff\",\"#008700\",\"#00875f\",\"#008787\",\"#0087af\",\"#0087d7\",\"#0087ff\",\"#00af00\",\"#00af5f\",\"#00af87\",\"#00afaf\",\"#00afd7\",\"#00afff\",\"#00d700\",\"#00d75f\",\"#00d787\",\"#00d7af\",\"#00d7d7\",\"#00d7ff\",\"#00ff00\",\"#00ff5f\",\"#00ff87\",\"#00ffaf\",\"#00ffd7\",\"#00ffff\",\"#5f0000\",\"#5f005f\",\"#5f0087\",\"#5f00af\",\"#5f00d7\",\"#5f00ff\",\"#5f5f00\",\"#5f5f5f\",\"#5f5f87\",\"#5f5faf\",\"#5f5fd7\",\"#5f5fff\",\"#5f8700\",\"#5f875f\",\"#5f8787\",\"#5f87af\",\"#5f87d7\",\"#5f87ff\",\"#5faf00\",\"#5faf5f\",\"#5faf87\",\"#5fafaf\",\"#5fafd7\",\"#5fafff\",\"#5fd700\",\"#5fd75f\",\"#5fd787\",\"#5fd7af\",\"#5fd7d7\",\"#5fd7ff\",\"#5fff00\",\"#5fff5f\",\"#5fff87\",\"#5fffaf\",\"#5fffd7\",\"#5fffff\",\"#870000\",\"#87005f\",\"#870087\",\"#8700af\",\"#8700d7\",\"#8700ff\",\"#875f00\",\"#875f5f\",\"#875f87\",\"#875faf\",\"#875fd7\",\"#875fff\",\"#878700\",\"#87875f\",\"#878787\",\"#8787af\",\"#8787d7\",\"#8787ff\",\"#87af00\",\"#87af5f\",\"#87af87\",\"#87afaf\",\"#87afd7\",\"#87afff\",\"#87d700\",\"#87d75f\",\"#87d787\",\"#87d7af\",\"#87d7d7\",\"#87d7ff\",\"#87ff00\",\"#87ff5f\",\"#87ff87\",\"#87ffaf\",\"#87ffd7\",\"#87ffff\",\"#af0000\",\"#af005f\",\"#af0087\",\"#af00af\",\"#af00d7\",\"#af00ff\",\"#af5f00\",\"#af5f5f\",\"#af5f87\",\"#af5faf\",\"#af5fd7\",\"#af5fff\",\"#af8700\",\"#af875f\",\"#af8787\",\"#af87af\",\"#af87d7\",\"#af87ff\",\"#afaf00\",\"#afaf5f\",\"#afaf87\",\"#afafaf\",\"#afafd7\",\"#afafff\",\"#afd700\",\"#afd75f\",\"#afd787\",\"#afd7af\",\"#afd7d7\",\"#afd7ff\",\"#afff00\",\"#afff5f\",\"#afff87\",\"#afffaf\",\"#afffd7\",\"#afffff\",\"#d70000\",\"#d7005f\",\"#d70087\",\"#d700af\",\"#d700d7\",\"#d700ff\",\"#d75f00\",\"#d75f5f\",\"#d75f87\",\"#d75faf\",\"#d75fd7\",\"#d75fff\",\"#d78700\",\"#d7875f\",\"#d78787\",\"#d787af\",\"#d787d7\",\"#d787ff\",\"#d7af00\",\"#d7af5f\",\"#d7af87\",\"#d7afaf\",\"#d7afd7\",\"#d7afff\",\"#d7d700\",\"#d7d75f\",\"#d7d787\",\"#d7d7af\",\"#d7d7d7\",\"#d7d7ff\",\"#d7ff00\",\"#d7ff5f\",\"#d7ff87\",\"#d7ffaf\",\"#d7ffd7\",\"#d7ffff\",\"#ff0000\",\"#ff005f\",\"#ff0087\",\"#ff00af\",\"#ff00d7\",\"#ff00ff\",\"#ff5f00\",\"#ff5f5f\",\"#ff5f87\",\"#ff5faf\",\"#ff5fd7\",\"#ff5fff\",\"#ff8700\",\"#ff875f\",\"#ff8787\",\"#ff87af\",\"#ff87d7\",\"#ff87ff\",\"#ffaf00\",\"#ffaf5f\",\"#ffaf87\",\"#ffafaf\",\"#ffafd7\",\"#ffafff\",\"#ffd700\",\"#ffd75f\",\"#ffd787\",\"#ffd7af\",\"#ffd7d7\",\"#ffd7ff\",\"#ffff00\",\"#ffff5f\",\"#ffff87\",\"#ffffaf\",\"#ffffd7\",\"#ffffff\",\"#080808\",\"#121212\",\"#1c1c1c\",\"#262626\",\"#303030\",\"#3a3a3a\",\"#444444\",\"#4e4e4e\",\"#585858\",\"#626262\",\"#6c6c6c\",\"#767676\",\"#808080\",\"#8a8a8a\",\"#949494\",\"#9e9e9e\",\"#a8a8a8\",\"#b2b2b2\",\"#bcbcbc\",\"#c6c6c6\",\"#d0d0d0\",\"#dadada\",\"#e4e4e4\",\"#eeeeee\"]},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"fonts\",\n        name: \"Fonts\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"General Font Settings\",\n                settings: [\n                    {id: \"fontSize\", name: \"Base font size\", type: \"number\", value: 13, min: 4, max: 60, step: 0.5, range: true},\n                    {id: \"fontThicken\", name: \"Thicken fonts\", type: \"switch\", note: \"This currently only affects macOS.\", value: false},\n                    {id: \"fontFeature\", name: \"Font ligature settings\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"family\",\n                name: \"Font Families\",\n                settings: [\n                    {id: \"fontFamily\", name: \"Main font family\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBold\", name: \"Font family for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyItalic\", name: \"Font family for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBoldItalic\", name: \"Font family for bold italic text\", type: \"text\", value: \"\"},\n                    {id: \"windowTitleFontFamily\", name: \"Window title font family\", note: \"This is currently only supported on macOS\", type: \"text\", value: \"\"},\n                    {id: \"fontCodepointMap\", name: \"Unicode-specifc font mapping\", note: \"\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"styles\",\n                name: \"Font Styles\",\n                note: \"Named font styles for the fields above. For example for `Ioveska Heavy` you would use a style of `Heavy`. Alternately you can set the style to `false` to completely disable the style and revert to default style.\",\n                settings: [\n                    {id: \"fontStyle\", name: \"Main font style\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBold\", name: \"Font style for bold text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleItalic\", name: \"Font style for italic text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBoldItalic\", name: \"Font style for bold italic text\", type: \"text\", value: \"default\"},\n                ]\n            },\n            {\n                id: \"variations\",\n                name: \"Font Variations\",\n                note: \"Variable font specific settings, please only touch this if you know what you're doing!\",\n                settings: [\n                    {id: \"fontVariation\", name: \"Main font variant\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBold\", name: \"Font variant for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationItalic\", name: \"Font variant for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBoldItalic\", name: \"Font variant for bold italic text\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced Font & Cell Settings\",\n                note: \"The settings below have very little validation in Ghostty and can cause your terminal to become unusable. Be careful messing with any of these.\",\n                settings: [\n                    {id: \"adjustCellWidth\", name: \"Cell width adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCellHeight\", name: \"Cell height adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustFontBaseline\", name: \"Font baseline adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlinePosition\", name: \"Underline position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlineThickness\", name: \"Underline thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughPosition\", name: \"Strikethrough position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughThickness\", name: \"Strikethrough thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCursorThickness\", name: \"Cursor thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"graphemeWidthMethod\", name: \"Grapheme width calculation method\", type: \"dropdown\", value: \"unicode\", options: [\"unicode\", \"legacy\"]},\n                ]\n            },\n\n        ]\n    },\n    {\n        id: \"keybinds\",\n        name: \"Keybinds\",\n        groups: [\n            {\n                id: \"keybinds\",\n                name: \"\",\n                settings: [\n                    {id: \"keybind\", name: \"\", type: \"keybinds\", value: [\"super+page_up=scroll_page_up\", \"super+physical:four=goto_tab:4\", \"super+shift+down=jump_to_prompt:1\", \"super+shift+w=close_window\", \"super+shift+left_bracket=previous_tab\", \"super+alt+i=inspector:toggle\", \"super+w=close_surface\", \"super+physical:eight=goto_tab:8\", \"super+alt+right=goto_split:right\", \"shift+up=adjust_selection:up\", \"super+enter=toggle_fullscreen\", \"super+t=new_tab\", \"super+c=copy_to_clipboard\", \"super+shift+right_bracket=next_tab\", \"super+physical:one=goto_tab:1\", \"shift+left=adjust_selection:left\", \"super+equal=increase_font_size:1\", \"shift+page_up=adjust_selection:page_up\", \"super+physical:three=goto_tab:3\", \"super+d=new_split:right\", \"super+ctrl+down=resize_split:down,10\", \"shift+end=adjust_selection:end\", \"super+plus=increase_font_size:1\", \"super+q=quit\", \"super+home=scroll_to_top\", \"super+ctrl+left=resize_split:left,10\", \"super+ctrl+up=resize_split:up,10\", \"super+shift+up=jump_to_prompt:-1\", \"shift+right=adjust_selection:right\", \"super+comma=open_config\", \"super+shift+comma=reload_config\", \"super+minus=decrease_font_size:1\", \"shift+page_down=adjust_selection:page_down\", \"super+a=select_all\", \"alt+shift+equal=equalize_splits\", \"super+shift+enter=toggle_split_zoom\", \"super+alt+down=goto_split:bottom\", \"super+ctrl+f=toggle_fullscreen\", \"super+ctrl+right=resize_split:right,10\", \"super+alt+shift+j=write_scrollback_file:open\", \"shift+down=adjust_selection:down\", \"super+n=new_window\", \"super+alt+left=goto_split:left\", \"super+page_down=scroll_page_down\", \"super+alt+shift+w=close_all_windows\", \"super+alt+up=goto_split:top\", \"super+left_bracket=goto_split:previous\", \"super+physical:nine=goto_tab:9\", \"super+right_bracket=goto_split:next\", \"super+end=scroll_to_bottom\", \"super+shift+j=write_scrollback_file:paste\", \"super+shift+d=new_split:down\", \"super+zero=reset_font_size\", \"super+physical:five=goto_tab:5\", \"shift+home=adjust_selection:home\", \"super+physical:seven=goto_tab:7\", \"super+k=clear_screen\", \"super+physical:two=goto_tab:2\", \"super+physical:six=goto_tab:6\", \"super+v=paste_from_clipboard\"]}\n                ]\n            }\n        ]\n    },\n    {\n        id: \"mouse\",\n        name: \"Mouse\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"cursorClickToMove\", name: \"Enable click to move cursor\", type: \"switch\", value: true},\n                    {id: \"mouseHideWhileTyping\", name: \"Hide mouse while typing\", type: \"switch\", value: false},\n                    {id: \"mouseShiftCapture\", name: \"Allow shift with mouse click\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"always\", \"never\"]},\n                    // Technically the values should be min: 0.01, max: 10000, step: 0.01 but those are insane so instead I'll use sane defaults\n                    {id: \"mouseScrollMultiplier\", name: \"Mouse scroll multiplier\", type: \"number\", range: true, value: 1, min: 0.1, max: 10, step: 0.1},\n                    {id: \"focusFollowsMouse\", name: \"Focus splits on mouse move\", type: \"switch\", value: false},\n                    {id: \"clickRepeatInterval\", name: \"Milliseconds between multi-click\", note: \"A value of 0 means to use the operating system's default timing.\", type: \"number\", value: 0, min: 0, size: 4},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"gtk\",\n        name: \"GTK\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"class\", name: \"WM_CLASS class field\", note: \"This defaults to `com.mitchellh.ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"x11InstanceName\", name: \"WM_CLASS instance name\", note: \"This defaults to `ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"gtkSingleInstance\", name: \"Single-instance mode\", type: \"dropdown\", value: \"desktop\", options: [{name: \"detect\", value: \"desktop\"}, \"true\", \"false\"]},\n                    {id: \"gtkTitlebar\", name: \"Show titlebar\", type: \"switch\", value: true},\n                    {id: \"gtkTabsLocation\", name: \"Tab location\", type: \"dropdown\", value: \"top\", options: [\"top\", \"right\", \"bottom\", \"left\"]},\n                    {id: \"gtkWideTabs\", name: \"Use wide tabs\", type: \"switch\", value: true},\n                    {id: \"gtkAdwaita\", name: \"Enable adwaita theme support\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"linux\",\n        name: \"Linux\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"linuxCgroup\", name: \"Use dedicated cgroups\", type: \"dropdown\", value: \"single-instance\", options: [\"single-instance\", \"always\", \"never\"]},\n                    {id: \"linuxCgroupMemoryLimit\", name: \"Memory limit (bytes)\", type: \"number\", min: 0, max: 4294967295, size: 12},\n                    {id: \"linuxCgroupProcessLimit\", name: \"Max number of processes\", type: \"number\", min: 0, size: 5},\n                    {id: \"linuxCgroupHardFail\", name: \"Hard fail on startup\", type: \"switch\", value: false},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"macos\",\n        name: \"macOS\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"macosNonNativeFullscreen\", name: \"Use non-native fullscreen\", note: \"Tabs currently do not work with non-native fullscreen windows\", type: \"dropdown\", value: \"false\", options: [\"visible-menu\", \"true\", \"false\"]},\n                    {id: \"macosTitlebarStyle\", name: \"Titlebar style\", type: \"dropdown\", value: \"transparent\", options: [\"transparent\", \"native\", \"tabs\"]},\n                    {id: \"macosOptionAsAlt\", name: \"Use option key as alt key\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"left\", \"right\"]},\n                    {id: \"macosWindowShadow\", name: \"Show the window shadow\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n] as Panel[];\n```\n```typescript\nimport config from \"$lib/stores/config.svelte\";\n// error: 'config' is defined but never used. Allowed unused vars must match /^_/u.\nimport type {HexColor} from \"$lib/utils/colors\";\n\n```\n\nimages\n```svg ghostty-config/src/lib/images/ghost.svg\n<svg version=\"1.2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 800 800\" width=\"800\" height=\"800\">\n\t<title>flying-ghost-publicdomainvectors</title>\n\t<style>\n\t\t.s0 { fill: #e9eff5 } \n\t\t.s1 { fill: #ffffff } \n\t\t.s2 { fill: #c6d5e3 } \n\t\t.s3 { fill: #091c30 } \n\t\t.s4 { fill: #132e4a } \n\t</style>\n\t<g id=\"publicdomainvectors.org\">\n\t\t<path id=\"&lt;Path&gt;\" class=\"s0\" d=\"m587.1 172.6c60.8 280.5 23.7 242.9 152.7 422.9 5.4 7.6 6.5 19.3 2.6 28.7-3.9 9.4-11.5 13.4-18.6 9.9l-33.9-16.9c-7.2-3.6-14.3-2.3-20.7 3.6-6.4 5.8-10.2 14.7-11.1 25.6l-2.3 28c-1.2 15.5-8.3 27.6-18.5 32-10.3 4.4-20.7-0.4-27.4-12.4l-16.1-28.8c-8.7-15.7-21.6-22.6-35.2-19.2-13.6 3.5-24.1 16.5-28.6 35.6l-10.3 42.9c-4.6 19.1-15 32.1-28.6 35.6-13.6 3.5-26.4-3.5-35.2-19.1l-23.4-41.8c-22.2-39.6-62.8-41.5-86.7-4l-41.3 64.9c-9.6 15-23.1 20.7-36.7 15.4-13.6-5.2-23.4-20-26.6-40l-3-18.6c-2.9-18-11-31.6-22.9-38.3-11.8-6.6-24.1-4.4-34.5 6.2l-48.2 49.2c-9 9.2-20.4 9.3-29.5 0.2-9.1-9.1-13.2-24.7-10.6-40.4l4.2-25.7c3.6-21.4-3.4-42.9-17-52.5-3.2-2.2-5.9-6.1-7.5-11.2-3-9.7-1.2-20.8 4.4-27.6 124.6-148.3 94.5-162.6 131.9-394.1 33.7-208.1 334.3-215.1 378.6-10.1z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s1\" d=\"m587.1 172.6c5.6 25.7 10.3 48.7 14.5 69.5-32.9-121-94.6-221.2-239.2-184.3-203.5 51.9-75.9 274.2-248.4 475l-0.9-1.5c82.2-108.8 62.2-143.2 95.4-348.6 33.7-208.1 334.3-215.1 378.6-10.1z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s2\" d=\"m655.4 466.1c15.8 32 40.5 68.1 84.4 129.4 5.4 7.6 6.5 19.3 2.6 28.7-3.9 9.4-11.5 13.4-18.6 9.9l-33.9-16.9c-7.2-3.6-14.3-2.3-20.7 3.5-6.4 5.9-10.2 14.8-11.1 25.7l-2.3 28c-1.2 15.5-8.3 27.6-18.5 32-10.3 4.4-20.7-0.4-27.4-12.4l-16.1-28.8c-8.7-15.7-21.6-22.6-35.2-19.2-13.6 3.5-24.1 16.5-28.6 35.6l-10.3 42.9c-4.6 19.1-15 32.1-28.6 35.6-13.6 3.5-26.4-3.5-35.2-19.1l-23.4-41.8c-22.2-39.6-62.8-41.5-86.7-4l-41.3 64.9c-9.6 15-23.1 20.7-36.7 15.4-13.6-5.2-23.4-20-26.6-40l-3-18.6c-2.9-18-11-31.6-22.9-38.3-11.8-6.6-24.1-4.4-34.5 6.2l-48.2 49.2c-9 9.2-20.4 9.3-29.5 0.2-9.1-9.1-13.2-24.7-10.6-40.4l4.2-25.7c3.6-21.4-3.4-42.9-17-52.5-3.2-2.2-5.9-6.1-7.5-11.2-3-9.7-1.2-20.8 4.4-27.6 18.5-22 33.5-41 45.9-58.2-23 37.3-42.1 75.1-2.7 75.2-24.5 194.7 80.1 40.1 115-75.5-3.6 208.5 68.8 271.7 132.3-4.3 60.1 145.4 151.1 265.7 158.8-12.2 78.1 166.2 126 178.7 96.3 7.2 86.5 148.1 96.1 87.1 33.2-42.9z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s3\" d=\"m341.6 274.5c18 0 32.7-20.8 32.7-46.3 0-25.6-14.7-46.4-32.7-46.4-18.1 0-32.8 20.8-32.8 46.4 0 25.5 14.7 46.3 32.8 46.3z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s4\" d=\"m374.3 227.5v0.7c0 25.6-14.7 46.3-32.7 46.3-11.4 0-21.4-8.1-27.2-20.5l-0.1-0.7c0-25.6 14.7-46.4 32.8-46.4 11.3 0 21.3 8.2 27.2 20.6z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s3\" d=\"m451.3 274.5c18 0 32.7-20.8 32.7-46.3 0-25.6-14.7-46.4-32.8-46.4-18 0-32.7 20.8-32.7 46.4 0 25.5 14.7 46.3 32.7 46.3z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s4\" d=\"m418.5 227.5v0.7c0 25.6 14.7 46.3 32.8 46.3 11.3 0 21.3-8.1 27.2-20.5v-0.7c0-25.6-14.7-46.4-32.8-46.4-11.3 0-21.3 8.2-27.2 20.6z\"/>\n\t</g>\n</svg>\n```\n\ntabs\n```svg ghostty-config/src/lib/images/tabs/github.svg\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-3 -3 30 30\">\n\t<path\n\t\tfill-rule=\"evenodd\"\n\t\tclip-rule=\"evenodd\"\n\t\td=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5229 6.47715 22 12 22C17.5229 22 22 17.5229 22 12C22 6.47715 17.5229 2 12 2ZM0 12C0 5.3726 5.3726 0 12 0C18.6274 0 24 5.3726 24 12C24 18.6274 18.6274 24 12 24C5.3726 24 0 18.6274 0 12Z\"\n\t\tfill=\"rgba(0,0,0,0.7)\"\n\t\tstroke=\"none\"\n\t/>\n\t<path\n\t\tfill-rule=\"evenodd\"\n\t\tclip-rule=\"evenodd\"\n\t\td=\"M9.59162 22.7357C9.49492 22.6109 9.49492 21.4986 9.59162 19.399C8.55572 19.4347 7.90122 19.3628 7.62812 19.1833C7.21852 18.9139 6.80842 18.0833 6.44457 17.4979C6.08072 16.9125 5.27312 16.8199 4.94702 16.6891C4.62091 16.5582 4.53905 16.0247 5.84562 16.4282C7.15222 16.8316 7.21592 17.9303 7.62812 18.1872C8.04032 18.4441 9.02572 18.3317 9.47242 18.1259C9.91907 17.9201 9.88622 17.1538 9.96587 16.8503C10.0666 16.5669 9.71162 16.5041 9.70382 16.5018C9.26777 16.5018 6.97697 16.0036 6.34772 13.7852C5.71852 11.5669 6.52907 10.117 6.96147 9.49369C7.24972 9.07814 7.22422 8.19254 6.88497 6.83679C8.11677 6.67939 9.06732 7.06709 9.73672 7.99999C9.73737 8.00534 10.6143 7.47854 12.0001 7.47854C13.386 7.47854 13.8777 7.90764 14.2571 7.99999C14.6365 8.09234 14.94 6.36699 17.2834 6.83679C16.7942 7.79839 16.3844 8.99999 16.6972 9.49369C17.0099 9.98739 18.2372 11.5573 17.4833 13.7852C16.9807 15.2706 15.9927 16.1761 14.5192 16.5018C14.3502 16.5557 14.2658 16.6427 14.2658 16.7627C14.2658 16.9427 14.4942 16.9624 14.8233 17.8058C15.0426 18.368 15.0585 19.9739 14.8708 22.6234C14.3953 22.7445 14.0254 22.8257 13.7611 22.8673C13.2924 22.9409 12.7835 22.9822 12.2834 22.9982C11.7834 23.0141 11.6098 23.0123 10.9185 22.948C10.4577 22.9051 10.0154 22.8343 9.59162 22.7357Z\"\n\t\tfill=\"rgba(0,0,0,0.7)\"\n\t\tstroke=\"none\"\n\t/>\n</svg>\n```\n\n```svg ghostty-config/src/lib/images/tabs/gtk.svg\n<?xml version=\"1.0\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"89\" height=\"96\">\n\t<g stroke=\"#fff\" stroke-width=\"2.12\">\n\t\t<path fill=\"#e40000\" d=\"m3.12,66.17 -2.06,-51.46 32.93,24.7 v55.58 l-30.87,-28.82 z\"/>\n\t\t<path fill=\"#7fe719\" d=\"m34,95 49.4,-20.58 4.12,-51.46 -53.52,16.47 v55.58 z\"/>\n\t\t<path fill=\"#729fcf\" d=\"m1.06,14.71 32.93,24.7 53.52,-16.47 -36.75,-21.88 -49.7,13.65 z\"/>\n\t\t<path stroke-width=\"1.25\" d=\"m50.6,51.3 -47.3,14 z l33,23 z v-50\"/>\n\t</g>\n</svg>\n```\n\nstores\n```ts ghostty-config/src/lib/stores/config.svelte.ts\nimport {dev} from \"$app/environment\";\nimport settings, {type KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"$lib/utils/colors\";\nimport themeHandler from \"$lib/utils/themeHandler\";\n// import defs from \"../data/defaults.json\";\n\n// TODO: find a good way to properly type the config\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaults: Partial<Record<keyof DefaultConfig, any>> = {};\n\nfor (const panel of settings) {\n    for (const group of panel.groups) {\n        for (const setting of group.settings) {\n            defaults[setting.id as keyof typeof defaults] = setting.value;\n        }\n    }\n}\n\nif (dev) {\n    // eslint-disable-next-line no-console\n    console.log(defaults);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\n\nexport function keyToConfig(key: string) {\n    return key.replaceAll(/([A-Z])/g, \"-$1\").toLowerCase();\n}\n\nexport function diff() {\n    // TODO: more elegance\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const output: Partial<Record<keyof typeof defaults|string, any>> = {};\n\n    for (const k in config) {\n        const key = k as keyof DefaultConfig;\n        if (Array.isArray(config[key]) && key === \"keybind\") {\n            const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (Array.isArray(config[key]) && key === \"palette\") {\n            const toAdd = [];\n            for (let p = 0; p < defaults[key].length; p++) {\n                if (config[key][p] === defaults[key][p]) continue;\n                toAdd.push(`${p}=${config[key][p]}`);\n            }\n            // const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (config[key] != defaults[key]) {\n            output[keyToConfig(key)] = config[key];\n        }\n    }\n\n    return output;\n}\n\nexport function load(conf: Partial<typeof config>) {\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n\n            if (key === \"theme\") {\n                themeHandler(conf[key] as string);\n            }\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n        }\n        else if (key === \"palette\") {\n            config.palette = [...conf.palette];\n        }\n    }\n}\n\nexport default config;\n\n\n// TODO: is this useful?\ninterface DefaultConfig {\n    palette: HexColor[];\n    keybind: KeybindString[];\n    fontFamily: string;\n    fontFamilyBold: string;\n    fontFamilyItalic: string;\n    fontFamilyBoldItalic: string;\n    fontStyle: string;\n    fontStyleBold: string;\n    fontStyleItalic: string;\n    fontStyleBoldItalic: string;\n    fontFeature: string;\n    fontSize: number;\n    fontVariation: string;\n    fontVariationBold: string;\n    fontVariationItalic: string;\n    fontVariationBoldItalic: string;\n    fontCodepointMap: string;\n    fontThicken: boolean;\n    adjustCellWidth: string;\n    adjustCellHeight: string;\n    adjustFontBaseline: string;\n    adjustUnderlinePosition: string;\n    adjustUnderlineThickness: string;\n    adjustStrikethroughPosition: string;\n    adjustStrikethroughThickness: string;\n    adjustCursorThickness: string;\n    graphemeWidthMethod: string;\n    theme: string;\n    background: HexColor;\n    foreground: HexColor;\n    selectionForeground: string;\n    selectionBackground: string;\n    selectionInvertFgBg: boolean;\n    minimumContrast: number;\n    cursorColor: string;\n    cursorInvertFgBg: boolean;\n    cursorOpacity: number;\n    cursorStyle: string;\n    cursorStyleBlink: string;\n    cursorText: string;\n    cursorClickToMove: boolean;\n    mouseHideWhileTyping: boolean;\n    mouseShiftCapture: boolean;\n    mouseScrollMultiplier: number;\n    backgroundOpacity: number;\n    backgroundBlurRadius: number;\n    unfocusedSplitOpacity: number;\n    unfocusedSplitFill: string;\n    command: string;\n    waitAfterCommand: boolean;\n    abnormalCommandExitRuntime: number;\n    scrollbackLimit: number;\n    linkUrl: boolean;\n    fullscreen: boolean;\n    title: string;\n    class: string;\n    workingDirectory: string;\n    windowPaddingX: number;\n    windowPaddingY: number;\n    windowPaddingBalance: boolean;\n    windowPaddingColor: string;\n    windowVsync: boolean;\n    windowInheritWorkingDirectory: boolean;\n    windowInheritFontSize: boolean;\n    windowDecoration: boolean;\n    windowTitleFontFamily: string;\n    windowTheme: string;\n    windowColorspace: string;\n    windowHeight: number;\n    windowWidth: number;\n    windowSaveState: string;\n    windowStepResize: boolean;\n    windowNewTabPosition: string;\n    resizeOverlay: string;\n    resizeOverlayPosition: string;\n    resizeOverlayDuration: string;\n    focusFollowsMouse: boolean;\n    clipboardRead: string;\n    clipboardWrite: string;\n    clipboardTrimTrailingSpaces: boolean;\n    clipboardPasteProtection: boolean;\n    clipboardPasteBracketedSafe: boolean;\n    imageStorageLimit: number;\n    copyOnSelect: boolean;\n    clickRepeatInterval: number;\n    configFile: string;\n    configDefaultFiles: boolean;\n    confirmCloseSurface: boolean;\n    quitAfterLastWindowClosed: boolean;\n    quitAfterLastWindowClosedDelay: string;\n    initialWindow: boolean;\n    shellIntegration: string;\n    shellIntegrationFeatures: string;\n    oscColorReportFormat: string;\n    vtKamAllowed: boolean;\n    customShader: string;\n    customShaderAnimation: boolean;\n    macosNonNativeFullscreen: boolean;\n    macosTitlebarStyle: string;\n    macosOptionAsAlt: boolean;\n    macosWindowShadow: boolean;\n    linuxCgroup: string;\n    linuxCgroupMemoryLimit: string;\n    linuxCgroupProcessesLimit: string;\n    linuxCgroupHardFail: boolean;\n    gtkSingleInstance: string;\n    gtkTitlebar: boolean;\n    gtkTabsLocation: string;\n    gtkWideTabs: boolean;\n    gtkAdwaita: boolean;\n    desktopNotifications: boolean;\n    boldIsBright: boolean;\n    term: string;\n    enquiryResponse: string;\n}\n```\n\n```ts ghostty-config/src/lib/stores/history.svelte.ts\nimport type {OnNavigate} from \"@sveltejs/kit\";\n\nlet stack: string[] = $state([window.location.pathname]);\nlet index = $state(0);\n\nexport function canGoBack() {\n    return index > 0;\n}\n\nexport function canGoForward() {\n    return index < stack.length - 1;\n}\n\nexport function processNavigation(navEvent: OnNavigate) {\n    if (navEvent.type !== \"link\" && navEvent.type !== \"popstate\") return;\n\n    if (navEvent.type === \"link\") {\n        if (!navEvent?.to?.url) return; // Sanity check\n        if (index === stack.length - 1) {\n            stack = [...stack, navEvent.to.url.pathname];\n        }\n        else {\n            const substack = stack.slice(0, index + 1);\n            stack = [...substack, navEvent.to.url.pathname];\n        }\n\n        index = stack.length - 1;\n    }\n\n    if (navEvent.type === \"popstate\") {\n        index += navEvent.delta!;\n\n        // Clamp values if the user uses browser history\n        // to navigate beyond our stack\n        if (index < 0) {\n            index = 0;\n            stack = [window.location.pathname];\n        }\n        if (index > stack.length - 1) {\n            index = stack.length - 1;\n        }\n    }\n}\n```\n\n```ts ghostty-config/src/lib/stores/state.svelte.ts\ninterface AppState {\n    title: string;\n}\n\nconst app: AppState = $state({\n    title: \"Home\"\n});\n\nexport default app;\n```\n\nutils\n```ts ghostty-config/src/lib/utils/colors.ts\nexport type HexColor = `#${string}`;\nexport type RgbArray = [number, number, number];\nexport type HsvArray = [number, number, number];\nexport type HsvObj = {hue: number, saturation: number, value: number};\n\nexport function luminosity(color: HexColor) {\n    const int = parseInt(color.substring(1), 16);\n    const red = int >> 16 & 0xFF;\n    const green = int >> 8 & 0xFF;\n    const blue = int >> 0 & 0xFF;\n\n    return (0.2126 * red) + (0.7152 * green) + (0.0722 * blue);\n}\n\n\nexport function isDark(color: HexColor) {\n    return luminosity(color) < 128;\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n */\nexport function hsvToRgb(hue: number, saturation: number, value: number): RgbArray {\n    const i = Math.floor(hue * 6);\n    const f = hue * 6 - i;\n    const p = value * (1 - saturation);\n    const q = value * (1 - f * saturation);\n    const t = value * (1 - (1 - f) * saturation);\n\n    let r, g, b;\n    switch (i % 6) {\n        /* eslint-disable no-sequences, @typescript-eslint/no-unused-expressions */\n        case 0: r = value, g = t, b = p; break;\n        case 1: r = q, g = value, b = p; break;\n        case 2: r = p, g = value, b = t; break;\n        case 3: r = p, g = q, b = value; break;\n        case 4: r = t, g = p, b = value; break;\n        default:\n        case 5: r = value, g = p, b = q; break;\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n}\n\nexport function rgbToHsv(red: number, green: number, blue: number): HsvObj {\n    const percentRed = red / 255;\n    const percentGreen = green / 255;\n    const percentBlue = blue / 255;\n    const cMax = Math.max(percentRed, percentGreen, percentBlue);\n    const cMin = Math.min(percentRed, percentGreen, percentBlue);\n    const delta = cMax - cMin;\n\n    let newHue = 0;\n    if (percentRed === cMax) newHue = 60 * (((percentGreen - percentBlue) / delta) % 6) / 360;\n    else if (percentGreen === cMax) newHue = 60 * (((percentBlue - percentRed) / delta) + 2) / 360;\n    else if (percentBlue === cMax) newHue = 60 * (((percentRed - percentGreen) / delta) + 4) / 360;\n    if (newHue < 0) newHue += 6;\n\n    const hue = delta === 0 ? 0 : newHue;\n    const saturation = cMax === 0 ? 0 : delta / cMax;\n    const value = cMax;\n    return {hue, saturation, value};\n}\n\n\nexport function rgbToHex(red: number, green: number, blue: number): HexColor {\n    const get = (color: number) => color.toString(16).padStart(2, \"0\").toUpperCase();\n    return `#${get(red)}${get(green)}${get(blue)}`;\n}\n\nexport function hexToRgb(string: HexColor): RgbArray {\n    const hex = string.slice(1);\n    const get = (s: number, e: number) => parseInt(hex.substring(s, e), 16);\n    return [get(0, 2), get(2, 4), get(4,6)];\n}\n```\n\n```ts ghostty-config/src/lib/utils/parse.ts\nimport type {KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"./colors\";\n\nconst re = /^\\s*([a-z-]+)[\\s]*=\\s*(.*)\\s*$/;\n\nexport default function(configString: string) {\n    const lines = configString.split(\"\\n\");\n\n    const results = {\n        palette: Array(256),\n        keybind: [] as Array<string>\n    } as {palette: (HexColor|\"\")[], keybind: KeybindString[], [key: string]: string|string[]};\n\n    for (let p = 0; p < 256; p++) results.palette[p] = \"\";\n\n    for (const l of lines) {\n        const line = l.trim();\n        const match = re.exec(line);\n        if (!match) continue;\n        const key = match[1].trim();\n        const value = match[2].trim();\n\n        if (key === \"palette\") {\n            const split = value.split(\"=\");\n            const num = parseInt(split[0].trim());\n            const color = split[1].trim() as HexColor; // TODO: perform validation\n            if (num < 0 || num > 255) continue;\n            results.palette[num] = color;\n        }\n        else if (key === \"keybind\") {\n            results.keybind.push(value as KeybindString); // TODO: perform validation\n        }\n        else {\n            const split = key.split(\"-\");\n            let newKey = split[0].trim();\n            for (let s = 1; s < split.length; s++) {\n                newKey += split[s].charAt(0).toUpperCase();\n                newKey += split[s].substring(1);\n            }\n            results[newKey] = value;\n        }\n    }\n\n    return results;\n};\n\n```\n\n```ts ghostty-config/src/lib/utils/themeHandler.ts\n/* eslint-disable no-console */\nimport type {HexColor} from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport {fetchColorScheme, parseColorScheme} from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    try {\n        console.log(\"Applying theme:\", themeName);\n        const {colorSchemeResponse} = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        console.log(\"Parsed color scheme:\", colorScheme);\n\n        const colorProperties = [\n            \"background\",\n            \"foreground\",\n            \"selectionBackground\",\n            \"selectionForeground\",\n            \"cursorColor\"\n        ] as const;\n\n        colorProperties.forEach((prop) => {\n            if (colorScheme[prop]) {\n                config[prop] = colorScheme[prop] as HexColor;\n                console.log(`Updated ${prop}:`, config[prop]);\n            }\n        });\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill(\"#000000\") as HexColor[];\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[+index] = color as HexColor;\n            }\n            config.palette = [...newPalette]; // Create a new array reference to trigger reactivity\n            console.log(\"Updated palette:\", config.palette);\n        }\n\n        // Force a re-render by updating the theme property\n        config.theme = themeName;\n        console.log(\"Theme application complete\");\n\n        // Dispatch a custom event to notify that the theme has been applied\n        window.dispatchEvent(new CustomEvent(\"themeApplied\", {detail: {theme: themeName}}));\n    } catch (error) {\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n```typescript\n        // Dispatch a custom event to notify that the theme has been applied\n        window.dispatchEvent(new CustomEvent(\"themeApplied\", {detail: {theme: themeName}}));\n    } catch (error) {\n// error: Closing curly brace appears on the same line as the subsequent block.\n        console.error(\"Error applying theme:\", error);\n    }\n```\n\nviews\n```svelte ghostty-config/src/lib/views/BaseColorPreview.svelte\n<script lang=\"ts\">\n    /* eslint-disable svelte/prefer-style-directive */\n    // TODO: fix above with preview component\n</script>\n\n<div class=\"preview\">\n    <div class=\"row prompt\">\n        <span style=\"color: var(--config-palette-2)\">John</span>\n        <span style=\"color: var(--config-palette-6)\">@</span>\n        <span style=\"color: var(--config-palette-4)\">doe-pc</span>\n        <span style=\"color: var(--config-palette-1)\" style:font-weight=\"700\">$</span>\n        cat file.txt\n    </div>\n\n    <div class=\"row\">&nbsp;</div>\n    <div class=\"row\">Lorem ipsum dolor sit amet, consectetur adipiscing</div>\n    <div class=\"row\">elit. Maecenas <span style=\"color: var(--config-selection-fg); background-color: var(--config-selection-bg)\">tempus massa ac mauris maximus, at</span></div>\n    <div class=\"row\">blandit diam vestibulum.</div>\n\n</div>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    max-height: 200px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n}\n\n.preview .row,\n.prompt {\n    display: flex;\n    white-space: pre;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/views/CursorPreview.svelte\n<script lang=\"ts\">\n    import config from \"$lib/stores/config.svelte\";\n    import {onMount} from \"svelte\";\n\n    let isCursorVisible = $state(true);\n\n    onMount(() => {\n        const interval = setInterval(() => {\n            if (config.cursorStyleBlink !== \"false\") isCursorVisible = !isCursorVisible;\n            else isCursorVisible = true;\n        }, 1000);\n        return () => clearInterval(interval);\n    });\n\n    // TODO: make less gross with less ternaries\n    const cursorColor = $derived(config.cursorInvertFgBg ? config.foreground : (config.cursorColor || config.foreground));\n    const cursorText = $derived(isCursorVisible ? config.cursorInvertFgBg ? config.background : (config.cursorText || config.background) : config.foreground);\n    const cursorOpacity = $derived(isCursorVisible ? Math.round(config.cursorOpacity * 255).toString(16) : \"00\");\n</script>\n\n<div class=\"preview\">\n    <div class=\"row prompt\">\n        <span style:color=\"var(--config-palette-2)\">john</span>\n        <span style:color=\"var(--config-palette-6)\">@</span>\n        <span style:color=\"var(--config-palette-4)\">doe-pc</span>\n        <span style:color=\"var(--config-palette-1)\" style:font-weight=\"700\">$</span>\n        git commit -m \"<span class=\"cursor {config.cursorStyle}\" style:color={cursorText} style:border-color=\"{cursorColor}{cursorOpacity}\" style:background-color=\"{cursorColor}{cursorOpacity}\">\"</span>\n    </div>\n</div>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    max-height: 60px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n}\n\n.preview .row,\n.prompt {\n    display: flex;\n    white-space: pre;\n}\n\n.cursor {\n    margin-left: 1px;\n}\n\n.cursor.bar,\n.cursor.underline,\n.cursor.block_hollow {\n    background-color: transparent!important;\n    color: inherit !important;\n}\n\n.cursor.bar {\n    border-left: 1px solid transparent;\n    margin-left: 0;\n}\n\n.cursor.underline {\n    border-bottom: 1px solid transparent;\n}\n\n.cursor.block_hollow {\n    border: 1px solid transparent;\n    margin-top: -1px;\n    margin-left: 0;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/views/FontPreview.svelte\n<script lang=\"ts\">\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n    import Switch from \"$lib/components/settings/Switch.svelte\";\n    import Text from \"$lib/components/settings/Text.svelte\";\n    import Number from \"$lib/components/settings/Number.svelte\";\n\n    let fontFamily = $state(\"monospace\");\n    let fontSize = $state(13);\n    let bold = $state(false);\n    let italic = $state(false);\n\n    /* eslint-disable svelte/prefer-style-directive */\n    // TODO: fix above with preview component\n</script>\n\n\n<!-- eslint-disable-next-line svelte/no-useless-mustaches -->\n<Group title=\"Font Playground\" note={\"Use this section to test your fonts as they may look in the terminal along with colors and glyphs.\\n\\nNote: this playground does not set any actual settings.\"}>\n    <div class=\"preview\" style=\"font-family: {fontFamily}; font-size: {fontSize + \"px\"}; font-style: {italic ? \"italic\" : \"normal\"}; font-weight: {bold ? 700 : 400};\">\n    <div class=\"row prompt\">\n        <span style=\"color: var(--config-palette-2);\">john</span>\n        <span style=\"color: var(--config-palette-6);\">@</span>\n        <span style=\"color: var(--config-palette-4);\">doe-pc</span>\n        <span style=\"color: var(--config-palette-1); font-weight: 700;\">$</span>\n        ls\n    </div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-3); font-weight: 700;\">Documents</span></div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-0); background: var(--config-palette-2); font-weight: 700;\">Downloads</span></div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-0); background: var(--config-palette-8); font-weight: 700;\">Pictures</span></div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-12); font-weight: 700;\">Music</span></div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-2);\">実行可能ファイル</span></div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-6);\">sym</span> -> <span style=\"color: var(--config-palette-1);\">link</span></div>\n    <div class=\"row\">Icons:     <span style=\"background-color: var(--config-palette-1); color: var(--config-bg);\"> Powerline</span><span style=\"color: var(--config-palette-1);\"></span></div>\n    </div>\n    <Separator />\n    <Item name=\"Font family\" note=\"Due to cross-browser limitations, you'll need to manually type in a font-face currently on your system that you want to try out.\"><Text bind:value={fontFamily} /></Item>\n    <Separator />\n    <Item name=\"Font size\"><Number bind:value={fontSize} range={true} min={4} max={60} step={0.5} /></Item>\n    <Separator />\n    <Item name=\"Bold\"><Switch bind:checked={bold} /></Item>\n    <Separator />\n    <Item name=\"Italic\"><Switch bind:checked={italic} /></Item>\n    <!-- Add ligature options -->\n</Group>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    color: var(--config-fg);\n    height: 160px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n}\n\n.preview .row,\n.prompt {\n    display: flex;\n    white-space: pre;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/views/Page.svelte\n<script lang=\"ts\">\n    import {onNavigate} from \"$app/navigation\";\n    import {fly} from \"svelte/transition\";\n    import History from \"$lib/components/History.svelte\";\n    import app from \"$lib/stores/state.svelte\";\n    import type {Snippet} from \"svelte\";\n\n    interface Props {\n        children: Snippet;\n        title?: string;\n    }\n\n    const {children, title = \"Ghostty Config\"}: Props = $props();\n\n    $effect(() => {app.title = title;});\n\n    let isScrolling = $state(false);\n    let bufferHeight = $state(53);\n\n    function containerScroll(event: Event) {\n        isScrolling = (event.target as HTMLDivElement).scrollTop > 0;\n        const scrollerPos = (event.target as HTMLDivElement).scrollTop;\n        if (scrollerPos >= 53) {\n            bufferHeight = 0;\n        }\n        else {\n            bufferHeight = 53 - scrollerPos;\n        }\n    }\n\n    let scroller: HTMLDivElement|undefined = $state();\n    onNavigate(() => {\n        isScrolling = false;\n        bufferHeight = 53;\n        if (scroller) scroller.scrollTop = 0;\n    });\n</script>\n\n\n\n<div class=\"content-page\">\n    <div class=\"content-header\" class:scrolling={isScrolling}>\n        <History /><h1>{app.title}</h1>\n    </div>\n    {#key app.title}\n    <div class=\"content-container\" in:fly={{y: 30, duration: 200}} bind:this={scroller} style:margin-top=\"{bufferHeight}px\" onscroll={containerScroll}>\n        {@render children()}\n    </div>\n    {/key}\n</div>\n\n\n<style>\n.content-page {\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    flex: 1;\n}\n\n.content-header {\n    display: flex;\n    align-items: center;\n    font-size: 16pt;\n    gap: 10px;\n    padding: 10px 20px 5px 20px;\n    background: rgba(44, 39, 51, 0.9);\n    /* not top: #2E2932 */\n    backdrop-filter: blur(20px);\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 1;\n}\n\n.content-header.scrolling {\n    background: rgba(46, 41, 50, 0.9);\n    border-bottom: 1px solid black;\n}\n\n.content-header h1 {\n    font-size: 1.3rem;\n    margin: 8px 0;\n    font-weight: 600;\n}\n\n.content-container {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    padding: 8px 20px 10px 20px;\n    flex: 1;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/views/PalettePreview.svelte\n<script lang=\"ts\">\n    // TODO: make each preview row a component with columns\n    // this will make it more versatile and easy to customize\n    // ideally add checkboxes underneath the preview letting\n    // users hide parts of the preview\n\n    // TODO: also extract out the preview window generally\n    // I've used it like 4 times now\n</script>\n\n\n<div class=\"preview\">\n    <div class=\"row prompt\">\n        <span class=\"p2 bold\">ghostty@macos</span>\n        <span class=\"fg\">:</span>\n        <span class=\"p6\">~</span>\n        <span class=\"fg\">$</span>\n        eza -la --color=always --icons\n    </div>\n    <div class=\"row\">&nbsp;</div>\n    <div class=\"row\">\n        <span class=\"p12\">d</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p10\">x</span>\n        <span class=\"p8\">------</span>\n        <span class=\"p8\">&nbsp;&nbsp;&nbsp;&nbsp;-</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">22 Aug 13:42</span>\n        <span>&nbsp;</span>\n        <span class=\"p4\"> .cache</span>\n    </div>\n    <div class=\"row\">\n        <span class=\"p12\">d</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p10\">x</span>\n        <span class=\"p8\">------</span>\n        <span class=\"p8\">&nbsp;&nbsp;&nbsp;&nbsp;-</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">22 Aug 13:42</span>\n        <span>&nbsp;</span>\n        <span class=\"p4\"> .config</span>\n    </div>\n    <div class=\"row\">\n        <span class=\"p7\">.</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p2\">&nbsp;&nbsp&nbsp;&nbsp;0</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">&nbsp;7 May 11:11</span>\n        <span>&nbsp;</span>\n        <span class=\"p7\"> .hushlogin</span>\n    </div>\n    <div class=\"row\">\n        <span class=\"p7\">.</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p8\">-------</span>\n        <span class=\"p10\">&nbsp;2.5k</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">&nbsp;2 Mar 02:49</span>\n        <span>&nbsp;</span>\n        <span class=\"p7\"> .viminfo</span>\n    </div>\n    <div class=\"row\">\n        <span class=\"p12\">l</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p10\">x</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p1\">w</span>\n        <span class=\"p2\">x</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p1\">w</span>\n        <span class=\"p2\">x</span>\n        <span class=\"p8\">&nbsp;&nbsp;&nbsp;&nbsp;-</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">&nbsp;9 Feb 20:32</span>\n        <span>&nbsp;</span>\n        <span class=\"p6\"> etc -> /etc</span>\n    </div>\n    <div class=\"row\">\n        <span class=\"p7\">.</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p10\">x</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p2\">x</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p2\">x</span>\n        <span class=\"p2\">&nbsp;&nbsp;12k</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">15 Jun 10:45</span>\n        <span>&nbsp;</span>\n        <span class=\"p10\"> lsix</span>\n    </div>\n</div>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    max-height: 200px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n}\n\n.preview .row,\n.prompt,\n.date {\n    display: flex;\n    white-space: pre;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n\n.bold {font-weight: 700;}\n\n.fg {color: var(--config-fg);}\n\n/* .p0 {color: var(--config-palette-0);} */\n.p1 {color: var(--config-palette-1);}\n.p2 {color: var(--config-palette-2);}\n.p3 {color: var(--config-palette-3);}\n.p4 {color: var(--config-palette-4);}\n/* .p5 {color: var(--config-palette-5);} */\n.p6 {color: var(--config-palette-6);}\n.p7 {color: var(--config-palette-7);}\n.p8 {color: var(--config-palette-8);}\n.p9 {color: var(--config-palette-9);}\n.p10 {color: var(--config-palette-10);}\n.p11 {color: var(--config-palette-11);}\n.p12 {color: var(--config-palette-12);}\n/* .p13 {color: var(--config-palette-13);}\n.p14 {color: var(--config-palette-14);}\n.p15 {color: var(--config-palette-15);} */\n</style>\n```\n\nroutes\n```svelte ghostty-config/src/routes/+layout.svelte\n<script lang=\"ts\">\n    import Gap from \"$lib/components/Gap.svelte\";\n    import Tab from \"$lib/components/Tab.svelte\";\n    import User from \"$lib/components/User.svelte\";\n    import \"../app.css\";\n\n    import application from \"$lib/images/tabs/application.webp\";\n    import clipboard from \"$lib/images/tabs/clipboard.webp\";\n    import window from \"$lib/images/tabs/window.webp\";\n\n    import colors from \"$lib/images/tabs/colors.webp\";\n    import fonts from \"$lib/images/tabs/fonts.webp\";\n\n    import keybinds from \"$lib/images/tabs/keybinds.webp\";\n    import mouse from \"$lib/images/tabs/mouse.webp\";\n\n    import gtk from \"$lib/images/tabs/gtk.svg\";\n    import linux from \"$lib/images/tabs/linux.webp\";\n    import macos from \"$lib/images/tabs/macos.webp\";\n\n    import github from \"$lib/images/tabs/github.svg\";\n    import ghostty from \"$lib/images/tabs/ghostty.webp\";\n\n    import config from \"$lib/stores/config.svelte\";\n    import app from \"$lib/stores/state.svelte\";\n\n    const cssConfigVars = $derived.by(() => {\n        let str = \"\";\n\n        const add = (key: string, val: string) => str += `--config-${key}: ${val};`;\n\n        // Add the base colors\n        add(\"bg\", config.background);\n        add(\"fg\", config.foreground);\n        add(\"selection-bg\", config.selectionInvertFgBg ? config.foreground : config.selectionBackground || config.foreground);\n        add(\"selection-fg\", config.selectionInvertFgBg ? config.background : config.selectionForeground || config.background);\n\n        // Add the palette colors\n        const paletteSize = 16; // config.palette.length;\n        for (let c = 0; c < paletteSize; c++) add(`palette-${c}`, config.palette[c]);\n\n        // TODO: consider honoring separate fonts for bold/italic and such in previews\n        // Add font settings\n        add(\"font-family\", config.fontFamily || \"monospace\");\n        add(\"font-size\", `${config.fontSize}px`);\n\n        return str;\n    });\n\n    const {children} = $props();\n\n\n\n\n    const htmlTitle = $derived.by(() => {\n        const name = app.title === \"Ghostty Config\" ? \"\" : app.title;\n        let title = \"Ghostty Config\";\n        if (name) title = `${title} - ${name}`;\n        return title;\n    });\n</script>\n\n<svelte:head>\n    <title>{htmlTitle}</title>\n</svelte:head>\n\n<!-- eslint-disable-next-line svelte/require-optimized-style-attribute -->\n<div class=\"app-window\" style={cssConfigVars}>\n    <div id=\"sidebar\">\n        <div class=\"sidebar-header\">\n            <div class=\"window-actions-container\">\n                <div class=\"window-actions\">\n                    <div class=\"window-dot\"><span>×</span></div>\n                    <div class=\"window-dot\"><span>-</span></div>\n                    <div class=\"window-dot\"><span>+</span></div>\n                </div>\n            </div>\n        </div>\n        <nav id=\"categories\">\n            <User route=\"/\" />\n            <Gap />\n            <Tab route=\"/settings/application\">\n                {#snippet icon()}<img src={application} alt=\"Application Settings\" />{/snippet}\n                Application\n            </Tab>\n            <Tab route=\"/settings/clipboard\">\n                {#snippet icon()}<img src={clipboard} alt=\"Clipboard Settings\" />{/snippet}\n                Clipboard\n            </Tab>\n            <Tab route=\"/settings/window\">\n                {#snippet icon()}<img src={window} alt=\"Window Settings\" />{/snippet}\n                Window\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/colors\">\n                {#snippet icon()}<img src={colors} alt=\"Color Settings\" />{/snippet}\n                Colors\n            </Tab>\n            <Tab route=\"/settings/fonts\">\n                {#snippet icon()}<img src={fonts} alt=\"Font Settings\" />{/snippet}\n                Fonts\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/keybinds\">\n                {#snippet icon()}<img src={keybinds} alt=\"Keybind Settings\" />{/snippet}\n                Keybinds\n            </Tab>\n            <Tab route=\"/settings/mouse\">\n                {#snippet icon()}<img src={mouse} alt=\"Mouse Settings\" />{/snippet}\n                Mouse\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/gtk\">\n                {#snippet icon()}<div class=\"icon-wrapper\"><img src={gtk} alt=\"GTK Settings\" /></div>{/snippet}\n                GTK\n            </Tab>\n            <Tab route=\"/settings/linux\">\n                {#snippet icon()}<img src={linux} alt=\"Linux Settings\" />{/snippet}\n                Linux\n            </Tab>\n            <Tab route=\"/settings/macos\">\n                {#snippet icon()}<img src={macos} alt=\"MacOS Settings\" />{/snippet}\n                macOS\n            </Tab>\n            <Gap expand={true} />\n            <Tab route=\"https://github.com/zerebos/ghostty-config\">\n                {#snippet icon()}<div class=\"icon-wrapper github\"><img src={github} alt=\"Ghostty Config GitHub\" /></div>{/snippet}\n                GitHub\n            </Tab>\n            <Tab route=\"https://github.com/ghostty-org\">\n                {#snippet icon()}<img src={ghostty} alt=\"Ghostty GitHub\" />{/snippet}\n                Ghostty\n            </Tab>\n        </nav>\n    </div>\n    <div id=\"content-view\">\n        {@render children()}\n    </div>\n\n</div>\n\n<!-- <svelte:window onmouseup={onMouseUp} onmousemove={onMouseMove} /> -->\n\n<style>\n.app-window {\n    user-select: none;\n    /* cursor: move; */\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    height: 100%;\n    /* margin: 20px auto; */\n    width: 90%;\n    max-width: var(--app-width);\n    height: var(--app-height);\n    border: 1px solid var(--border-level-1);\n    /* box-shadow: 0 0 1px white inset; */\n    box-shadow: 0 0 20px -1px rgba(0,0,0,0.7);\n    border-radius: var(--radius-level-1);\n    overflow: hidden;\n}\n\n/* .app-window .draggable {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 50px;\n    cursor: move;\n    z-index: 10;\n} */\n\n/* TODO: try this without pseudoelement using outline */\n.app-window::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    box-shadow: 0 0 1px white inset;\n    border-radius: inherit;\n    z-index: 2;\n    pointer-events: none;\n}\n\n#sidebar {\n    width: var(--sidebar-width);\n    /* black: #272329; white: #544F57; */\n    background: rgba(50, 46, 52, 0.7);\n    backdrop-filter: blur(10px);\n    padding: 5px;\n    border-right: 2px solid var(--border-level-1);\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebar-header {\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebar-header .window-actions-container {\n    display: flex;\n    padding: 15px 0 0 15px;\n    margin-bottom: 20px;\n}\n\n.sidebar-header .window-actions {\n    display: flex;\n    gap: 8px;\n}\n\n.app-window .window-dot {\n    border-radius: 50%;\n    /* display: inline-block; */\n    height: 12px;\n    /* margin-right: 6px; */\n    /* margin-top: 4px; */\n    width: 12px;\n    border: 0;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    color: rgba(0, 0, 0, 0);\n}\n\n.window-dot span {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: -3px;\n    margin-right: -1px;\n}\n\n.app-window .window-actions:hover .window-dot {\n    /* background: white!important; */\n    /* cursor: pointer; */\n    color: rgba(0, 0, 0, 0.5);\n}\n\n.window-dot {\n    background-color: var(--color-warning);\n}\n\n.window-dot:first-of-type {\n    background-color: var(--color-danger);\n}\n\n.window-dot:last-of-type {\n    background-color: var(--color-success);\n}\n\n#content-view {\n    background: var(--bg-level-1);\n    flex: 1;\n    display: flex;\n    min-width: 0;\n}\n\n\n\n#categories {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    padding: 10px;\n}\n\n#categories img {\n    width: 100%;\n}\n\n#categories .icon-wrapper {\n    background: linear-gradient(#D3E3E9, #908F8C);\n    width: 20px;\n    height: 20px;\n    border-radius: var(--radius-level-4);\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#categories .icon-wrapper img {\n    height: 14px;\n    width: 14px;\n}\n\n#categories .icon-wrapper.github {\n    background: linear-gradient(#9C45A9, #3B1E68);\n}\n\n#categories .icon-wrapper.github img {\n    filter: invert(100%);\n    height: 18px;\n    width: 18px;\n}\n</style>\n```\n\n```ts ghostty-config/src/routes/+layout.ts\nexport const ssr = false;\n```\n\n```svelte ghostty-config/src/routes/+page.svelte\n<script lang=\"ts\">\n    import Page from \"$lib/views/Page.svelte\";\n    import logo from \"$lib/images/ghost.svg\";\n    import sync from \"$lib/images/tabs/sync.webp\";\n    import Admonition from \"$lib/components/Admonition.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import LinkItem from \"$lib/components/settings/LinkItem.svelte\";\n</script>\n\n\n<Page title=\"Ghostty Config\">\n<section>\n    <div class=\"user\">\n        <div class=\"user-avatar\">\n            <img src={logo} alt=\"Ghostty Logo\" />\n        </div>\n        <div class=\"user-label\">\n            <div class=\"user-name\">Ghostty Config<sup>𝛼</sup></div>\n            <div class=\"user-subtext\">Unofficial Tool</div>\n        </div>\n    </div>\n    <Admonition>\n        This tool is still in an alpha stage so there <em>will</em> be bugs! If you run into any, please report them <a href=\"https://github.com/zerebos/ghostty-config/issues\" target=\"_blank\" rel=\"noopener noreferrer\">on GitHub</a>.\n    </Admonition>\n    <Group>\n        <LinkItem name=\"Import & Export\" href=\"/app/import-export\" icon={sync} />\n    </Group>\n    <Group title=\"Known Issues\">\n        <ul>\n            <li>Importing and exporting from clipboard give very little user feedback.</li>\n            <li>For most settings, the UI does not allow for setting multiple entries like having multiple <code>font-family</code> entries for fallback fonts.</li>\n        </ul>\n    </Group>\n    <div class=\"group-wrapper\">\n        <Group title=\"Roadmap\" flex={1}>\n            <ul>\n                <li>Validation of keybindings</li>\n                <li>Help documentation</li>\n                <li>Allow manual color input</li>\n                <li>Add theme presets</li>\n                <li>Unit testing import/export</li>\n                <li>Unify color scheme</li>\n                <li>Refactor & cleanup code</li>\n            </ul>\n        </Group>\n        <Group title=\"Potential Ideas\">\n            <ul>\n                <li>Custom setting types to more closely match Ghostty's config</li>\n                <li>Add a way to reset individual settings</li>\n                <li>Change color picker to be popover style instead of modal style</li>\n                <li>Add a more detailed terminal preview and playground</li>\n            </ul>\n        </Group>\n    </div>\n</section>\n</Page>\n\n<style>\n    section {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        flex: 0.6;\n    }\n\n    .user {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        gap: 8px;\n        margin: 20px 0;\n    }\n\n    .user-avatar img {\n        height: 80%;\n        width: 80%;\n    }\n\n    .user-avatar {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        background: linear-gradient(#03028F, #09043A);\n        height: 100px;\n        width: 100px;\n        border-radius: 50%;\n        /* border: 2px solid black; */\n        /* box-shadow: 0 0 0 2px white; */\n    }\n\n    .user-label {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        gap: 5px;\n    }\n\n    .user-name {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        font-size: 1.3rem;\n        color: var(--font-color);\n        font-weight: 600;\n    }\n\n    sup {\n        position: absolute;\n        color: var(--font-color-accent);\n        right: -11px;\n        top: -5px;\n    }\n\n    .user-subtext {\n        display: flex;\n        justify-content: center;\n        font-size: 1.1rem;\n    }\n\n    .group-wrapper {\n        display: flex;\n        width: 100%;\n        gap: 12px;\n    }\n\n    ul,\n    .group-wrapper ul {\n        /* list-style: \"↪ \"; */\n        list-style: \"🠶 \";\n        padding-left: 15px;\n        margin: 0;\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        justify-content: space-evenly;\n    }\n\n    code {\n        background: var(--bg-input-focus);\n        padding: 2px 4px;\n        border: 1px solid var(--border-input);\n        border-radius: var(--radius-level-4);\n    }\n</style>\n```\n\n```ts ghostty-config/src/routes/+page.ts\n// since there's no dynamic data here, we can prerender\n// it so that it gets served as a static asset in production\nexport const prerender = true;\n```\n\napp/import-export\n```svelte ghostty-config/src/routes/app/import-export/+page.svelte\n<script lang=\"ts\">\n    import Page from \"$lib/views/Page.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n    import {diff, load} from \"$lib/stores/config.svelte\";\n    import parse from \"$lib/utils/parse\";\n\n    let pasteConfigText = $state(\"Clipboard\");\n    let copyConfigText = $state(\"Clipboard\");\n\n\n    // TODO: move alert() to real modals\n    function loadConfig(candidate: string) {\n        let parsed;\n        try {\n            parsed = parse(candidate);\n        }\n        catch (parseError) {\n            // eslint-disable-next-line no-console\n            console.error(parseError);\n            alert(\"Something went wrong trying to parse your config. Please open an issue on GitHub!\");\n            return;\n        }\n\n        try {\n            load(parsed);\n        }\n        catch (loadError) {\n            // eslint-disable-next-line no-console\n            console.error(loadError);\n            alert(\"Something went wrong trying to load your parsed config. Please open an issue on GitHub!\");\n            return;\n        }\n    }\n\n    function pasteConfig() {\n        if (pasteConfigText === \"Pasted!\") return;\n        window.navigator.clipboard.readText().then(text => {\n            pasteConfigText = \"Pasted!\";\n            setTimeout(() => (pasteConfigText = \"Clipboard\"), 3000);\n            loadConfig(text);\n        });\n    }\n\n    let filePicker: HTMLInputElement;\n    function openFilePicker() {\n        filePicker.click();\n    }\n\n    function selectFile() {\n        const file = filePicker.files![0];\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", (event) => {\n            const loadedText = event.target?.result?.toString();\n            if (loadedText) loadConfig(loadedText);\n        });\n        reader.readAsText(file);\n    }\n\n    // Move to module\n    function stringifyConfig() {\n        const config = diff();\n        const lines = [\"# Config generated by Ghostty Config\\n\"];\n        for (const key in config) {\n            if (!Array.isArray(config[key])) {\n                lines.push(`${key} = ${config[key]}`);\n            }\n            else {\n                for (let i = 0; i < config[key].length; i++) {\n                    lines.push(`${key} = ${config[key][i]}`);\n                }\n            }\n        }\n\n        return lines.join(\"\\n\");\n    }\n\n    function copyConfig() {\n        if (copyConfigText === \"Copied!\") return;\n        const config = stringifyConfig();\n        window.navigator.clipboard.writeText(config).then(() => {\n            copyConfigText = \"Copied!\";\n            setTimeout(() => (copyConfigText = \"Clipboard\"), 3000);\n        });\n    }\n\n    function downloadConfig() {\n        const file = new File([stringifyConfig()], \"config\", {type: \"text/plain\"});\n        const link = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        link.href = url;\n        link.download = file.name;\n        link.style.display = \"none\";\n        document.body.append(link);\n        link.click();\n        link.remove();\n        URL.revokeObjectURL(url);\n    }\n</script>\n\n<Page title=\"Import & Export\">\n    <Group flex={1}>\n        <div class=\"preview\">\n            <div class=\"row p2\"># You can preview the config here</div>\n            <div class=\"row\">&nbsp;</div>\n\n            {#each Object.entries(diff()) as [key, value], i (i)}\n                {#if Array.isArray(value)}\n                    {#each value as val, v (v)}\n                    <div class=\"row\"><span class=\"p4\">{key}</span> = <span class=\"p5\">{val}</span></div>\n                    {/each}\n                {:else}\n                    <div class=\"row\"><span class=\"p4\">{key}</span> = <span class=\"p5\">{value}</span></div>\n                {/if}\n            {/each}\n        </div>\n        <Separator />\n        <Item name=\"Import\">\n            <div class=\"button-group\">\n                <button type=\"button\" onclick={pasteConfig} title=\"Paste\">{pasteConfigText}</button>\n                <input id=\"config-input\" type=\"file\" onchange={selectFile} bind:this={filePicker} />\n                <button type=\"button\" onclick={openFilePicker} title=\"Upload\">File...</button>\n            </div>\n        </Item>\n        <Separator />\n        <Item name=\"Export\">\n            <div class=\"button-group\">\n                <button type=\"button\" onclick={copyConfig} title=\"Copy\">{copyConfigText}</button>\n                <button type=\"button\" onclick={downloadConfig} title=\"Download\">File...</button>\n            </div>\n        </Item>\n    </Group>\n</Page>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    min-height: 200px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n    flex: 1;\n    user-select: text;\n}\n\n.preview .row {\n    display: flex;\n    white-space: pre;\n    flex: 1;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n\n/* .bold {font-weight: 700;} */\n\n/* .fg {color: var(--config-fg);} */\n\n/* .p0 {color: var(--config-palette-0);} */\n/* .p1 {color: var(--config-palette-1);} */\n.p2 {color: var(--config-palette-2);}\n/* .p3 {color: var(--config-palette-3);} */\n.p4 {color: var(--config-palette-4);}\n.p5 {color: var(--config-palette-5);}\n/* .p6 {color: var(--config-palette-6);}\n.p7 {color: var(--config-palette-7);}\n.p8 {color: var(--config-palette-8);}\n.p9 {color: var(--config-palette-9);}\n.p10 {color: var(--config-palette-10);}\n.p11 {color: var(--config-palette-11);}\n.p12 {color: var(--config-palette-12);} */\n/* .p13 {color: var(--config-palette-13);}\n.p14 {color: var(--config-palette-14);}\n.p15 {color: var(--config-palette-15);} */\n\n\n#config-input {\n    display: none;\n}\n\n.button-group {\n    display: flex;\n    gap: 12px;\n}\n\n/* TODO: extract to a separate component for usage elsewhere */\nbutton {\n    background: var(--bg-basic-button);\n    border-radius: var(--radius-level-4);\n    border: 0;\n    color: inherit;\n    padding: 2px 10px;\n    font-size: 1.1rem;\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0.5);\n}\n\nbutton:active {\n    filter: brightness(115%);\n}\n</style>\n```\n\nsettings\n[category]\n```svelte ghostty-config/src/routes/settings/[category]/+page.svelte\n<script lang=\"ts\">\n    import {onMount} from \"svelte\";\n\n    import Page from \"$lib/views/Page.svelte\";\n\n    import {page} from \"$app/stores\";\n    import Switch from \"$lib/components/settings/Switch.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n\n    import settings from \"$lib/data/settings\";\n    import config from \"$lib/stores/config.svelte\";\n    import Text from \"$lib/components/settings/Text.svelte\";\n    import Number from \"$lib/components/settings/Number.svelte\";\n    import Dropdown from \"$lib/components/settings/Dropdown.svelte\";\n    import Color from \"$lib/components/settings/Color.svelte\";\n    import Palette from \"$lib/components/settings/Palette.svelte\";\n    import FontPreview from \"$lib/views/FontPreview.svelte\";\n    import BaseColorPreview from \"$lib/views/BaseColorPreview.svelte\";\n    import CursorPreview from \"$lib/views/CursorPreview.svelte\";\n    import PalettePreview from \"$lib/views/PalettePreview.svelte\";\n    import Admonition from \"$lib/components/Admonition.svelte\";\n\n\n    const category = $derived(settings.find(c => c.id === $page.params.category));\n    const title = $derived(category?.name ?? $page.params.category);\n\n    interface ThemeAppliedEvent extends CustomEvent {\n        detail: { theme: string };\n    }\n\n    onMount(() => {\n        const handleThemeApplied = (event: ThemeAppliedEvent) => {\n            // eslint-disable-next-line no-console\n            console.log(\"Theme applied:\", event.detail.theme);\n        };\n\n        window.addEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n\n        return () => {\n            window.removeEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n        };\n    });\n</script>\n\n\n<Page {title}>\n    {#if category}\n        {#if category.id === \"fonts\"}\n            <FontPreview />\n        {:else if category.id === \"colors\"}\n            <Admonition size=\"1.5rem\">You can reset a color to its default value by right clicking!</Admonition>\n        {/if}\n        {#each category.groups as group (group.id)}\n            <Group title={group.name} note={group.note}>\n                {#if category.id === \"colors\" && group.id === \"base\"}\n                    <BaseColorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"cursor\"}\n                    <CursorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"palette\"}\n                    <PalettePreview />\n                    <Separator />\n                {/if}\n                {#each group.settings as setting, i (setting.id)}\n                    {#if i !== 0}<Separator />{/if}\n                    <Item name={setting.name} note={setting.note}>\n                        {#if setting.type === \"switch\"}\n                            <Switch bind:checked={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"text\"}\n                            <Text bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"number\"}\n                            <Number bind:value={config[setting.id as keyof typeof config]} range={setting.range} min={setting.min} max={setting.max} step={setting.step} size={setting.size} />\n                        {:else if setting.type === \"dropdown\"}\n                            <Dropdown bind:value={config[setting.id as keyof typeof config]} options={setting.options} />\n                        {:else if setting.type === \"color\"}\n                            <Color defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"palette\"}\n                            <Palette defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {/if}\n                    </Item>\n                {/each}\n            </Group>\n        {/each}\n    {:else}\n        <h1>What Happened?</h1>\n        <p>You shouldn't be here! If you followed a link, please report the bug on GitHub. Otherwise, go ahead and start browsing on the left.</p>\n    {/if}\n</Page>\n```\n\nkeybinds\n```svelte ghostty-config/src/routes/settings/keybinds/+page.svelte\n<script lang=\"ts\">\n    import Page from \"$lib/views/Page.svelte\";\n    import config from \"$lib/stores/config.svelte\";\n    import Keybinds from \"$lib/components/settings/Keybinds.svelte\";\n</script>\n\n<Page title=\"Keybinds\">\n    <Keybinds bind:value={config.keybind} />\n</Page>\n```\n\nstatic\n```txt ghostty-config/static/robots.txt\n# https://www.robotstxt.org/robotstxt.html\nUser-agent: *\nDisallow:\n```\n\n```js ghostty-config/svelte.config.js\nimport adapter from \"@sveltejs/adapter-static\";\nimport {vitePreprocess} from \"@sveltejs/vite-plugin-svelte\";\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n    // Consult https://kit.svelte.dev/docs/integrations#preprocessors\n    // for more information about preprocessors\n    preprocess: vitePreprocess(),\n    compilerOptions: {\n        runes: true\n    },\n    kit: {\n        // adapter-auto only supports some environments, see https://kit.svelte.dev/docs/adapter-auto for a list.\n        // If your environment is not supported, or you settled on a specific environment, switch out the adapter.\n        // See https://kit.svelte.dev/docs/adapters for more information about adapters.\n        adapter: adapter({\n            fallback: \"404.html\"\n        }),\n        paths: {\n            // The commented out part below is if I serve it under zerebos.github.io/<repo>\n            // then the BASE_PATH would be set in the workflow to /<repo>\n            // but for this project it is being aliased/served at a subdomain root\n            base: \"\" // process.argv.includes(\"dev\") ? \"\" : process.env.BASE_PATH\n        }\n    }\n};\n\nexport default config;\n```\n\n```json ghostty-config/tsconfig.json\n{\n    \"extends\": \"./.svelte-kit/tsconfig.json\",\n    \"compilerOptions\": {\n        \"allowJs\": true,\n        \"checkJs\": true,\n        \"noImplicitAny\": true,\n        \"noImplicitThis\": true,\n        \"esModuleInterop\": true,\n        \"forceConsistentCasingInFileNames\": true,\n        \"resolveJsonModule\": true,\n        \"skipLibCheck\": true,\n        \"sourceMap\": true,\n        \"strict\": true,\n        \"moduleResolution\": \"bundler\"\n    }\n    // Path aliases are handled by https://kit.svelte.dev/docs/configuration#alias\n    // except $lib which is handled by https://kit.svelte.dev/docs/configuration#files\n    //\n    // If you want to overwrite includes/excludes, make sure to copy over the relevant includes/excludes\n    // from the referenced tsconfig.json - TypeScript does not merge them in\n}\n```\n\n```ts ghostty-config/vite.config.ts\nimport {sveltekit} from \"@sveltejs/kit/vite\";\nimport {defineConfig} from \"vitest/config\";\n\nexport default defineConfig({\n    plugins: [sveltekit()],\n    test: {\n        include: [\"src/**/*.{test,spec}.{js,ts}\"]\n    }\n});\n```\n\n\n\n\n\nghostty-config/src\n```css ghostty-config/src/app.css\n@import \"@fontsource-variable/inter\";\n\n/* TODO: rework all of these vars */\n:root {\n    --app-width: 715px;\n    --app-height: 700px;\n    --sidebar-width: 215px;\n\n    /* Base text variables */\n    --font-family: \"Inter Variable\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    --font-family-mono: monospace, monospace;\n    --font-size: 14px;\n    --font-color: #EBE6EE;\n    --font-color-muted: #A19FA3;\n\n\n    /* Background levels */\n    --bg-level-1: #2C2733;\n    --bg-level-2: #2F2935;\n    --bg-level-3: #332D38;\n    --bg-level-4: #39343F;\n    --bg-separator: #39333F;\n    --bg-input-focus: #1F1E1F;\n    --bg-modal: #231E2A;\n    --bg-basic-button: #635F68;\n\n    /* Corresponding border levels */\n    --border-level-1: #000000;\n    --border-level-2: #4F4A54;\n    --border-level-3: #4C4651;\n    --border-level-4: #423E48;\n    --border-separator: #302B37;\n    --border-input: #443e4b;\n    --border-input-focus: 3px solid var(--color-input-accent);\n\n    /* Border radii */\n    --radius-level-1: 15px;\n    --radius-level-2: 12px;\n    --radius-level-3: 8px;\n    --radius-level-4: 6px;\n    --radius-level-5: 4px;\n\n    /* Switch colors */\n    --switch-body-color: var(--border-input);\n    --switch-active-body-color: hsl(from var(--switch-body-color) h s calc(l + 10));\n    --switch-checked-color: var(--color-input-accent);\n    --switch-active-checked-color: hsl(from var(--switch-checked-color) h s calc(l + 10));\n\n    /* Special colors */\n    --font-color-accent: #56A4F5;\n    --color-selected: #134FAC;\n    --color-input-accent: #1769E6;\n    \n    --color-danger: #F25F58;\n    --color-warning: #FBBE3C;\n    --color-success: #58CB42;\n    /*\n    tab color #134FAC\n    switch color #1675DB\n    slider #1769E6\n    */\n\n\n    font-size: var(--font-size);\n    font-family: var(--font-family);\n    color: var(--font-color);\n}\n\n* {box-sizing: border-box;}\n\n\n::-webkit-scrollbar {\n    width: 7px;\n}\n\n::-webkit-scrollbar:hover {\n    background-color: #171717;\n}\n\n::-webkit-scrollbar-track-piece {\n    background-color: transparent;\n}\n\n::-webkit-scrollbar-thumb {\n    display: initial;\n    border-radius: 10px;\n    background-color: #959595;\n    border: 2px solid var(--bg-level-1);\n    /* padding: 12px; */\n}\n\n::-webkit-scrollbar-thumb:hover {\n    border-width: 0;\n}\n\n\nbody {\n    min-height: 100vh;\n    margin: 0;\n\tbackground-image: url(\"$lib/images/monterey.webp\");\n\tbackground-attachment: fixed;\n\tbackground-size: cover;\n\tbackground-position: center center;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\na {\n    color: var(--font-color-accent);\n    text-decoration: dotted underline;\n}\n\na:hover {\n    text-decoration: underline;\n}\n\ninput,\nbutton,\nselect {\n    font-size: inherit;\n    font-family: inherit;\n}\n\nbutton:focus:not(:focus-visible) {\n    outline: none;\n}\n```\n\n```ts ghostty-config/src/app.d.ts\n// See https://kit.svelte.dev/docs/types#app\n// for information about these interfaces\ndeclare global {\n    namespace App {\n        // interface Error {}\n        // interface Locals {}\n        // interface PageData {}\n        // interface PageState {}\n        // interface Platform {}\n    }\n}\n\nexport {};\n```\n\n```html ghostty-config/src/app.html\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <link rel=\"icon\" href=\"%sveltekit.assets%/favicon.ico\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n        <!-- HTML Meta Tags -->\n        <meta name=\"description\" content=\"A beautiful config generator for Ghostty terminal.\">\n        <meta name=\"theme-color\" content=\"#2C56B9\">\n\n        <!-- Facebook Meta Tags -->\n        <meta property=\"og:url\" content=\"https://ghostty.zerebos.com\">\n        <meta property=\"og:type\" content=\"website\">\n        <meta property=\"og:title\" content=\"Ghostty Config\">\n        <meta property=\"og:description\" content=\"A beautiful config generator for Ghostty terminal.\">\n        <meta property=\"og:image\" content=\"https://github.com/user-attachments/assets/aa49f2bb-a6d3-4248-833b-488d27b57815\">\n        <!-- <meta property=\"og:image\" content=\"https://opengraph.b-cdn.net/production/images/c7878e00-847b-47ce-9904-b421527d9042.png?token=pBPixfzYdJTTCQL2HMED3l0IDxnmz4RED_H28dG6k4g&height=800&width=800&expires=33260655349\"> -->\n\n        <!-- Twitter Meta Tags -->\n        <meta name=\"twitter:card\" content=\"summary_large_image\">\n        <meta property=\"twitter:domain\" content=\"ghostty.zerebos.com\">\n        <meta property=\"twitter:url\" content=\"https://ghostty.zerebos.com\">\n        <meta name=\"twitter:title\" content=\"Ghostty Config\">\n        <meta name=\"twitter:description\" content=\"A beautiful config generator for Ghostty terminal.\">\n        <meta name=\"twitter:image\" content=\"https://github.com/user-attachments/assets/aa49f2bb-a6d3-4248-833b-488d27b57815\">\n\n        <!-- Meta Tags Generated via https://www.opengraph.xyz -->\n        %sveltekit.head%\n    </head>\n    <body data-sveltekit-preload-data=\"hover\">\n        <div style=\"display: contents\">%sveltekit.body%</div>\n    </body>\n</html>\n```\n\nlib\ncomponents\n```svelte ghostty-config/src/lib/components/Admonition.svelte\n<script lang=\"ts\">\n    import type {Snippet} from \"svelte\";\n\n    // TODO: add type prop\n    const {size = \"24px\", children}: {size?: string, title?: string, note?: string, children: Snippet} = $props();\n</script>\n\n<div class=\"admonition\">\n    <div class=\"icon\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height={size} viewBox=\"0 -960 960 960\" width={size} fill=\"var(--font-color)\"><path d=\"M440-280h80v-240h-80v240Zm40-320q17 0 28.5-11.5T520-640q0-17-11.5-28.5T480-680q-17 0-28.5 11.5T440-640q0 17 11.5 28.5T480-600Zm0 520q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z\" /></svg>\n    </div>\n    <div class=\"info\">{@render children()}</div>\n</div>\n\n<style>\n.admonition {\n    background: var(--bg-level-3);\n    border: 1px solid var(--border-level-3);\n    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.05) inset;\n    border-radius: var(--radius-level-3);\n    padding: 12px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 20px;\n}\n\n.icon, .info {\n    display: flex;\n    align-items: center;\n}\n\n.icon {\n    font-size: 1.5rem;\n}\n\n.info {\n    /* flex: 1; */\n    /* color: #A4A0A6; */\n    display: inline;\n    font-size: 0.9rem;\n    line-height: 1.5;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/ColorPicker.svelte\n<script lang=\"ts\">\n    import {hexToRgb, hsvToRgb, rgbToHex, rgbToHsv, luminosity, type HexColor} from \"$lib/utils/colors\";\n\n\n    // eslint-disable-next-line prefer-const\n    let {defaultValue = \"#408080\", value = $bindable(defaultValue)}: {defaultValue?: HexColor, value?: HexColor|\"\"} = $props();\n\n    let {hue, saturation, value: brightness} = $state(rgbToHsv(...hexToRgb(value || defaultValue)));\n    const [red, green, blue] = $derived.by(() => hsvToRgb(hue, saturation, brightness));\n    const hueField = $derived(`rgb(${hsvToRgb(hue, 1, 1).join(\", \")})`);\n    const csgTop = $derived((1 - brightness) * 100);\n    const csgLeft = $derived(saturation * 100);\n    const hgLeft = $derived(hue * 100);\n    const hexValue = $derived(rgbToHex(...hsvToRgb(hue, saturation, brightness)));\n    const borderColor = $derived(`rgba(255, 255, 255, ${luminosity(value || defaultValue) * 0.0027451 + 0.3})`);\n    const isEmpty = $derived(value === \"\");\n\n    let tracked: HTMLDivElement|null;\n\n    function moveGrabber(event: MouseEvent) {\n        if (!tracked) return;\n\n        const mouseX = event.clientX;\n        const mouseY = event.clientY;\n        const trackedPos = tracked.getBoundingClientRect();\n\n        let xPercentage = (mouseX - trackedPos.x) / trackedPos.width * 100;\n        let yPercentage = (mouseY - trackedPos.y) / trackedPos.height * 100;\n\n        if (xPercentage > 100) xPercentage = 100;\n        if (xPercentage < 0) xPercentage = 0;\n        if (yPercentage > 100) yPercentage = 100;\n        if (yPercentage < 0) yPercentage = 0;\n\n        if (tracked.id === \"colorspace\") {\n            saturation = xPercentage / 100;\n            brightness = 1 - yPercentage / 100;\n        }\n        else if (tracked.id === \"huespace\") {\n            hue = xPercentage / 100;\n        }\n\n        // Update the customColor which should be bound for change\n        value = hexValue;\n    }\n\n    function mouseMove(event: MouseEvent) {\n        if (!tracked) return;\n        moveGrabber(event);\n    }\n\n    function mouseDown(event: MouseEvent) {\n        tracked = event.currentTarget as HTMLDivElement;\n        moveGrabber(event);\n    }\n</script>\n\n<svelte:document onmouseup={() => tracked = null} onmousemove={mouseMove} />\n\n<div class=\"picker-container\">\n    <div id=\"colorspace\" style:background={hueField} onmousedown={mouseDown} role=\"slider\" aria-valuenow={saturation} tabindex=\"0\">\n        <div class=\"colorspace-grabber\" style:top={csgTop + \"%\"} style:left={csgLeft + \"%\"}></div>\n    </div>\n\n    <div id=\"huespace\" onmousedown={mouseDown} role=\"slider\" aria-valuenow={hue} tabindex=\"0\">\n        <div class=\"huespace-grabber\" style:left={hgLeft + \"%\"}></div>\n    </div>\n\n    <div class=\"color-info\">\n        <div class=\"info-split\">\n            <div class=\"color-picked\" class:empty={isEmpty} style:background=\"rgb({red}, {green}, {blue})\" style:border-color={borderColor}></div>\n\n            <div class=\"color-values\">\n                <div class=\"hex-value\">{isEmpty ? \"-\" : hexValue}</div>\n\n                <div class=\"rgb-values\">\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : red}</div>\n                        <div>R</div>\n                    </div>\n\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : green}</div>\n                        <div>G</div>\n                    </div>\n\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : blue}</div>\n                        <div>B</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<style>\n.picker-container {\n    position: relative;\n    background: var(--bg-modal);\n    border: 1px solid black;\n    box-shadow: 0 0 20px -1px rgba(0,0,0,0.7);\n    padding: 12px;\n    border-radius: var(--radius-level-2);\n    overflow: hidden;\n}\n\n.picker-container::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    box-shadow: 0 0 1px white inset;\n    border-radius: inherit;\n    z-index: 2;\n    pointer-events: none;\n}\n\n#colorspace {\n    width: 240px;\n    height: 160px;\n    position: relative;\n    overflow: hidden;\n    border-radius: var(--radius-level-3);\n    border: 1px solid var(--border-input);\n    box-shadow: 0 0 3px 0px black;\n}\n\n#colorspace::before,\n#colorspace::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n#colorspace::before {\n    background: linear-gradient(to right, rgb(255, 255, 255), rgba(255, 255, 255, 0));\n    z-index: 1;\n}\n\n#colorspace::after {\n    background: linear-gradient(to top, rgb(0, 0, 0), rgba(0, 0, 0, 0));\n    z-index: 2;\n}\n\n.colorspace-grabber {\n    margin: 0;\n    padding: 0;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid black;\n    background: white;\n    position: relative;\n    transform: translate(-50%, -50%);\n    left: 100%;\n    pointer-events: none;\n    z-index: 3;\n}\n\n#huespace {\n    background: linear-gradient(to right, #ff0000 0%, #ffff00 17%, #00ff00 33%, #00ffff 50%, #0000ff 67%, #ff00ff 83%, #ff0000 100%);\n    margin: 15px 10px 10px 10px;\n    border-radius: 10px;\n    height: 10px;\n}\n\n.huespace-grabber {\n    background: white;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid black;\n    transform: translate(-50%, -1px);\n    left: 0%;\n    position: relative;\n    cursor: default;\n    pointer-events: none;\n}\n\n.color-info {\n    display: flex;\n    padding: 10px;\n    /* padding-top: 10px; */\n    width: 100%;\n    position: relative;\n}\n\n.info-split {\n    display: flex;\n    width: 100%;\n    gap: 20px;\n}\n\n.color-picked {\n    display: flex;\n    flex: 1 1 50%;\n    min-height: 100%;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 1);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 1) inset;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    box-shadow: 0 0 3px 0px black;\n}\n\n.color-values {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex: 50%;\n    gap: 12px;\n}\n\n.hex-value {\n    display: flex;\n    justify-content: center;\n    background: var(--bg-input-focus);\n    padding: 2px;\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    width: 100%;\n}\n\n.rgb-values {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n}\n\n.rgb-value {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 6px;\n}\n\n.value {\n    display: flex;\n    justify-content: center;\n    background: var(--bg-input-focus);\n    padding: 2px;\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    width: 30px;\n}\n\n\n.color-picked.empty {\n    background: var(--bg-input-focus)!important;\n    border-color: var(--border-input)!important;\n    box-shadow: none!important;\n    background: linear-gradient(to top left,\n             rgba(0,0,0,0) 0%,\n             rgba(0,0,0,0) calc(50% - 1px),\n             var(--color-danger) 50%,\n             rgba(0,0,0,0) calc(50% + 1px),\n             rgba(0,0,0,0) 100%),\n         linear-gradient(to top right,\n             rgba(0,0,0,0) 0%,\n             rgba(0,0,0,0) calc(50% - 1px),\n             var(--color-danger) 50%,\n             rgba(0,0,0,0) calc(50% + 1px),\n             rgba(0,0,0,0) 100%) var(--bg-input-focus)!important;\n    /* opacity: 0; */\n}\n\n/* .empty .hex-value, */\n/* .empty .value {\n    color: transparent;\n} */\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/Gap.svelte\n<script lang=\"ts\">\n    const {expand = false} = $props();\n</script>\n\n<div class=\"tab-gap\" style:flex={expand ? 1 : \"\"}></div>\n\n<style>\n    .tab-gap {\n        display: flex;\n        min-height: 15px;\n    }\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/History.svelte\n<script lang=\"ts\">\n    import {onNavigate} from \"$app/navigation\";\n    import {processNavigation, canGoBack, canGoForward} from \"$lib/stores/history.svelte\";\n\n\n    onNavigate(processNavigation);\n\n    function back() {\n        window.history.back();\n    }\n\n    function forward() {\n        window.history.forward();\n    }\n</script>\n\n<div class=\"history\">\n    <button class=\"back\" type=\"button\" onclick={back} disabled={!canGoBack()} title=\"Go Back\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" fill=\"#e8eaed\"><path d=\"M400-80 0-480l400-400 71 71-329 329 329 329-71 71Z\" /></svg></button>\n    <button class=\"forward\" type=\"button\" onclick={forward} disabled={!canGoForward()} title=\"Go Forward\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" fill=\"#e8eaed\"><path d=\"m321-80-71-71 329-329-329-329 71-71 400 400L321-80Z\" /></svg></button>\n</div>\n\n\n<style>\n.history {\n    display: inline-flex;\n    gap: 4px;\n    z-index: 11;\n}\n\n.history button,\n.history .back {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    background: none;\n    border: 0;\n    padding: 4px 4px 4px 12px;\n    border-radius: var(--radius-level-5);\n}\n\n.history button svg {\n    fill: var(--font-color-muted);\n}\n\n.history button.forward {\n    padding: 4px 8px;\n}\n\n.history button:hover {\n    background: rgba(255, 255, 255, 0.1);\n}\n\n.history button:active {\n    background: rgba(255, 255, 255, 0.3);\n}\n\n.history button:disabled {\n    opacity: 0.3;\n    background: none!important;\n}\n\n.history button svg {\n    height: 18px;\n    width: 18px;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/Tab.svelte\n<script lang=\"ts\">\n    import {page} from \"$app/stores\";\n    import type {Snippet} from \"svelte\";\n\n\n    interface Props {\n        children: Snippet;\n        icon: Snippet;\n        route?: string;\n    }\n    const {children, icon, route = \"\"}: Props = $props();\n    const path = $derived($page.url.pathname);\n\n    const isExternal = route.startsWith(\"http\");\n    const target = isExternal ? \"_blank\" : \"\";\n    const rel = isExternal ? \"noopener noreferer\" : \"\";\n\n    const selected = $derived(path === route);\n</script>\n\n\n<a href={route} class=\"nav-tab\" class:selected {target} {rel}>\n    <div class=\"tab-icon\">{@render icon()}</div>\n    <div class=\"tab-label\">{@render children()}</div>\n    {#if isExternal}\n        <div class=\"tab-external\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#e8eaed\"><path d=\"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h280v80H200v560h560v-280h80v280q0 33-23.5 56.5T760-120H200Zm188-212-56-56 372-372H560v-80h280v280h-80v-144L388-332Z\" /></svg>\n        </div>\n    {/if}\n</a>\n\n\n<style>\n    .nav-tab {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 10px;\n        padding: 6px;\n        border-radius: var(--radius-level-4);\n        font-weight: 600;\n        position: relative;\n        text-decoration: none;\n    }\n\n    .nav-tab.selected {\n        background: var(--color-selected);\n    }\n\n    .nav-tab .tab-icon {\n        width: 20px;\n        height: 20px;\n    }\n\n    .nav-tab .tab-label {\n        font-size: 1rem;\n        flex: 1;\n        justify-content: flex-start;\n        color: var(--font-color)!important;\n        text-decoration: none !important;\n    }\n\n    .nav-tab:hover {\n        text-decoration: none !important;\n    }\n\n    .tab-external {\n        display: flex;\n    }\n\n    .tab-external svg {\n        width: 20px;\n        height: 20px;\n    }\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/User.svelte\n<script lang=\"ts\">\n    import {page} from \"$app/stores\";\n    import logo from \"$lib/images/ghost.svg\";\n\n\n    const {route = \"/\", name = \"Ghostty Config\", subtext = \"Unofficial Tool\"} = $props();\n    const path = $derived($page.url.pathname);\n\n    const selected = $derived(path === route || path.startsWith(\"/app\"));\n</script>\n\n\n<a href={route} class=\"user-tab\" class:selected>\n    <div class=\"user-avatar\">\n        <img src={logo} alt=\"Ghostty Logo\" />\n    </div>\n    <div class=\"user-label\">\n        <div class=\"user-name\">{name}</div>\n        <div class=\"user-subtext\">{subtext}</div>\n    </div>\n</a>\n\n\n<style>\n    .user-tab {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 8px;\n        padding: 6px;\n        border-radius: var(--radius-level-4);\n        text-decoration: none!important;\n        font-weight: 600;\n    }\n\n    .user-tab.selected {\n        background: var(--color-selected);\n    }\n\n    .user-avatar img {\n        height: 30px;\n        width: 30px;\n    }\n\n    .user-avatar {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        background: linear-gradient(#03028F, #09043A);\n        height: 40px;\n        min-width: 40px;\n        border-radius: 50%;\n        /* border: 2px solid black; */\n        /* box-shadow: 0 0 0 2px white; */\n    }\n\n    .user-label {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n    }\n\n    .user-name {\n        font-size: 1rem;\n        color: var(--font-color);\n    }\n\n    .user-subtext {\n        font-size: 0.7rem;\n        color: var(--font-color-muted);\n    }\n\n    .selected .user-subtext {\n        color: var(--font-color);\n    }\n</style>\n```\n\nsettings\n```svelte ghostty-config/src/lib/components/settings/Color.svelte\n<script lang=\"ts\">\n    import {fade, fly} from \"svelte/transition\";\n    import {luminosity, isDark, type HexColor} from \"$lib/utils/colors\";\n    import ColorPicker from \"$lib/components/ColorPicker.svelte\";\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), size = 20, label = \"\", defaultValue}: {value: HexColor, size?: number, label?: string, defaultValue?: HexColor} = $props();\n    const borderColor = $derived(`rgba(255, 255, 255, ${luminosity(value) * 0.0027451 + 0.3})`);\n    const labelColor = $derived(isDark(value) ? `var(--font-color)` : \"black\");\n    let popoutOpen = $state(false);\n\n    function click(event: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n        popoutOpen = !popoutOpen;\n    }\n\n    function reset(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (defaultValue !== undefined) value = defaultValue;\n    }\n\n    function keydown(event: KeyboardEvent) {\n        if (!popoutOpen) return;\n        if (event.key === \"Escape\") click(event);\n    }\n</script>\n\n\n<svelte:document onkeydown={keydown} />\n\n<div class=\"color-wrap\" style:width=\"{size}px\" style:height=\"{size}px\" style:background-color={value} style:border-color={borderColor}>\n    {#if label}<span class=\"label\" style:color={labelColor}>{label}</span>{/if}\n    <input type=\"color\" bind:value style:width=\"{size}px\" style:height=\"{size}px\" onclick={click} oncontextmenu={reset} />\n</div>\n\n{#if popoutOpen}\n<div class=\"shadow\" onclick={click} transition:fade={{duration: 200}} role=\"none\"></div>\n<div class=\"picker-container\" transition:fly={{y: 32, duration: 200}}>\n    <ColorPicker bind:value />\n    <button class=\"close\" onclick={click} type=\"button\" title=\"Close\"><span>×</span></button>\n</div>\n{/if}\n\n\n<style>\n/* .color-wrap-container {\n    position: relative;\n} */\n.shadow {\n    background: rgba(0, 0, 0, 0.3);\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    z-index: 1;\n}\n\n.picker-container {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n}\n.picker-container .close {\n    background: var(--color-danger);\n    color: white;\n    position: absolute;\n    top: -4px;\n    right: -4px;\n    border-radius: 50%;\n    height: 16px;\n    width: 16px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.1rem;\n    padding: 0;\n    cursor: pointer;\n    border: 0;\n    outline: 0;\n}\n\n.picker-container .close span {\n    margin-top: -1.5px;\n}\n\n.color-wrap {\n    position: relative;\n    display: flex;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    outline: none;\n    overflow: hidden;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    /* box-shadow: 0 0 1px 0px rgba(255, 255, 255, 0.5) inset; */\n    box-shadow: 0 0 3px 0px black;\n    justify-content: center;\n    align-items: center;\n}\n\ninput {\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    width: 20px;\n    height: 20px;\n    border: 0;\n    padding: 0;\n    outline: none;\n    box-shadow: none;\n    opacity: 0;\n}\n\ninput:focus {\n    outline: var(--border-input-focus);\n}\n\n.label {\n    /* text-shadow: 0 0 5px black; */\n    font-weight: 600;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Dropdown.svelte\n<script lang=\"ts\">\n    type Props = {\n        value: string;\n        options: (string | {name: string, value: string})[]\n    };\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), options}: Props = $props();\n</script>\n\n<select bind:value>\n    {#each options as option, i (i)}\n        {#if typeof(option) === \"string\"}\n            <option value={option}>{option}</option>\n        {:else}\n            <option value={option.value}>{option.name}</option>\n        {/if}\n    {/each}\n</select>\n\n<style>\nselect {\n    background: var(--bg-level-2);\n    border: 0px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    outline: none;\n    color: inherit;\n    text-align: right;\n    max-width: 175px;\n}\n\nselect:focus {\n    background: var(--bg-input-focus);\n    outline: var(--border-input-focus);\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Group.svelte\n<script lang=\"ts\">\n    import type {Snippet} from \"svelte\";\n\n    const {title = \"\", note = \"\", children, flex = \"\"}: {title?: string, note?: string, children: Snippet, flex?: string|number} = $props();\n</script>\n\n<div class=\"setting-group\">\n    <div class=\"group-info\">\n        {#if title}<h2>{title}</h2>{/if}\n        {#if note}<h4>{note}</h4>{/if}\n    </div>\n    <div class=\"settings-items\" style:flex style:height={flex ? \"100%\" : null}>\n        {@render children()}\n    </div>\n</div>\n\n<style>\n.setting-group {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    height: 100%;\n}\n\n.group-info {\n    display: flex;\n    flex-direction: column;\n    padding-left: 12px;\n}\n\n/* .setting-group:first-child h2 {\n    margin-top: 10px;\n} */\n\nh2 {\n    font-size: 1.05rem;\n    font-weight: 600;\n    margin-top: 20px;\n}\n\nh4 {\n    font-size: 0.8rem;\n    color: var(--font-color-muted);\n    margin-top: -6px;\n    white-space: preserve;\n}\n\n.settings-items {\n    display: flex;\n    flex-direction: column;\n    background: var(--bg-level-2);\n    border-radius: var(--radius-level-3);\n    border: 1px solid var(--border-level-2);\n    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.05) inset;\n    padding: 12px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Item.svelte\n<script lang=\"ts\">\n    import type {Snippet} from \"svelte\";\n\n    const {name = \"\", note = \"\", children}: {name?: string, note?: string, children: Snippet} = $props();\n</script>\n\n<div class=\"setting-item\">\n    <div class=\"row\">\n        {#if name}<div class=\"setting-name\">{name}</div>{/if}\n        <div class=\"setting\">{@render children()}</div>\n    </div>\n    {#if note}\n    <div class=\"note\">\n        {note}\n    </div>\n    {/if}\n</div>\n\n\n<style>\n.setting-item {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.setting-item .row {\n    display: flex;\n    justify-content: space-between;\n}\n\n.setting-name {\n    /* font-weight: 500; */\n    font-size: 1.1rem;\n}\n\n.setting {\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n}\n\n.note {\n    color: var(--font-color-muted);\n    font-size: 0.9rem;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Keybinds.svelte\n<script lang=\"ts\">\n    import Text from \"./Text.svelte\";\n\n    let selected: number[] = $state([]);\n    let {value = $bindable([])}: {value: string[]} = $props();\n\n    function handleKeyPress(event: KeyboardEvent) {\n        if (event.key === \"Escape\") selected = [];\n        const shouldExpand = event.ctrlKey || event.shiftKey;\n        if (!shouldExpand && selected.length) return;\n        // if (event.key === \"ArrowUp\") console.log(\"up\");\n    }\n\n    function select(index: number) {\n        // selected = [index];\n        return (event: MouseEvent) => {\n            if (!event.ctrlKey) return selected = [index];\n            if (!selected.includes(index)) return selected.push(index);\n            selected.splice(selected.indexOf(index), 1);\n        };\n    }\n\n    let scroller: HTMLDivElement;\n    function addNew() {\n        // console.log(\"ADD NEW\");\n        value = [...value, \"=\"];\n        setTimeout(() => scroller.scrollTop = scroller.scrollHeight, 1);\n    }\n\n    function remove() {\n        // console.log(selected.map(i => i));\n        // console.log(value.map(v => v));\n        value = value.filter((v, i) => {\n            const shouldRemove = selected.includes(i);\n            // console.log(`Filtering ${v} ${i} ${shouldRemove}`);\n            return !shouldRemove;\n        });\n        // console.log(value.map(v => v));\n        selected = [];\n    }\n\n\n    function update(index: number, isAction: boolean = false) {\n        return (event: Event) => {\n            const current = value[index].split(\"=\");\n            const indexToUpdate = isAction ? 1 : 0;\n            current[indexToUpdate] = (event.target as HTMLInputElement).value;\n            value[index] = current.join(\"=\");\n        };\n    }\n</script>\n\n<div class=\"expandable-list\">\n    <div class=\"item-list\" bind:this={scroller}>\n        {#each value as _, i (i)}\n            <div class=\"keybind\" class:selected={selected.includes(i)} onclick={select(i)} onkeypress={() => select(i)} role=\"option\" tabindex=\"0\" aria-selected={selected.includes(i)}>\n                <Text value={value[i].split(\"=\")[0]} blank={true} align=\"left\" change={update(i)} />\n                <Text value={value[i].split(\"=\")[1]} blank={true} change={update(i, true)} />\n            </div>\n        {/each}\n    </div>\n    <div class=\"list-controls\">\n        <button onclick={addNew} type=\"button\" title=\"Add Keybind\">+</button>\n        <button onclick={remove} disabled={selected.length === 0} type=\"button\" title=\"Remove Selected\">-</button>\n    </div>\n</div>\n\n<svelte:document onkeydown={handleKeyPress} />\n\n<style>\n.expandable-list {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n    position: relative;\n    background: var(--bg-level-2);\n    border-radius: var(--radius-level-3);\n    border: 1px solid var(--border-level-2);\n    overflow: hidden;\n}\n\n.list-controls {\n    border-radius: 0 0 var(--radius-level-3) var(--radius-level-3);\n    background: var(--bg-level-4);\n    min-height: 30px;\n    max-height: 30px;\n    border-top: 2px solid var(--border-level-4);\n    display: flex;\n    align-items: center;\n    padding-left: 10px;\n    gap: 10px;\n}\n\n.item-list {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n}\n\n.keybind {\n    display: flex;\n    justify-content: space-between;\n    padding: 8px;\n}\n\n.keybind:nth-of-type(even) {\n    background: rgba(255, 255, 255, 0.05)\n}\n\n.keybind.selected {\n    background: #2457C9;\n}\n\nbutton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 0;\n    background: transparent;\n    color: var(--font-color);\n    font-size: 1.5rem;\n    position: relative;\n}\n/*\nbutton + button {\n    margin-left: 2px;\n} */\n\nbutton + button::before {\n    content: \"\";\n    position: absolute;\n    left: -6px;\n    top: 5px;\n    bottom: 5px;\n    background: var(--border-level-2);\n    width: 2px;\n}\n\nbutton:disabled {\n    opacity: 0.5;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/LinkItem.svelte\n<script lang=\"ts\">\n    // TODO: think of a way to elegantly de-duplicate this with the regular ITEM\n    const {name = \"\", note = \"\", href, icon}: {name?: string, note?: string, href: string, icon?: string} = $props();\n</script>\n\n<a class=\"setting-item\" {href}>\n    <div class=\"row\">\n        <div class=\"setting-name\">\n            {#if icon}<img src={icon} alt={`${name} Submenu`} />{/if}\n            <span>{name}</span>\n        </div>\n        <div class=\"setting\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" fill=\"#e8eaed\"><path d=\"m321-80-71-71 329-329-329-329 71-71 400 400L321-80Z\" /></svg>\n        </div>\n    </div>\n    {#if note}\n        <div class=\"note\">\n            {note}\n        </div>\n    {/if}\n</a>\n\n\n<style>\n.setting-item {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    color: inherit;\n    text-decoration: none!important;\n}\n\n.setting-item .row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-height: 24px;\n}\n\n.setting-name {\n    /* font-weight: 500; */\n    font-size: 1.1rem;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n}\n\n.setting-name img {\n    height: 24px;\n}\n\n.setting {\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n    min-width: none;\n    min-height: none;\n}\n\n.setting svg {\n    height: 16px;\n    fill: #A7A3AA;\n}\n\n.note {\n    color: var(--font-color-muted);\n    font-size: 0.9rem;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Number.svelte\n<script lang=\"ts\">\n    type Props = {\n        value: number;\n        min?: number;\n        max?: number;\n        step?: number;\n        size?: number;\n        range?: boolean;\n    };\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), min, max, step, size, range}: Props = $props();\n\n    const inputType = range ? \"range\" : \"number\";\n    if (!size && !range) size = max ? max.toString().length : value.toString().length + 2;\n</script>\n\n<div class=\"input-wrapper\">\n    {#if range}\n        <div>{value}</div>\n    {/if}\n    <input type={inputType} bind:value {min} {max} {step} {size} />\n</div>\n\n<style>\n/* TODO: make custom component */\n.input-wrapper {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\ninput {\n    background: var(--bg-level-2);\n    border: 1px solid transparent;\n    border-radius: var(--radius-level-5);\n    outline: none;\n    color: inherit;\n    text-align: right;\n    max-width: 175px;\n}\n\ninput[type=\"number\"]:focus {\n    background: var(--bg-input-focus);\n    outline: var(--border-input-focus);\n}\n\n\n/* Chrome is dumb so TODO: add a custom slider */\ninput[type=\"range\"] {\n   border: 0;\n   height: 5px;\n   background-color: var(--bg-separator);\n}\n\ninput[type=\"range\"]::-moz-range-progress {\n   background-color: var(--color-input-accent);\n   border-radius: 5px;\n   height: 5px;\n   width: 100%;\n}\n\ninput[type=\"range\"]::-moz-range-thumb {\n   margin-top: -10px;\n   background-color: #98949B;\n   border-radius: 50%;\n   height: 20px;\n   width: 20px;\n}\n\ninput[type=\"range\"]:focus::-moz-range-thumb {\n    background-color: hsl(from #98949B h s calc(l + 10));\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Palette.svelte\n<script lang=\"ts\">\n    import type {HexColor} from \"$lib/utils/colors\";\n    import Color from \"./Color.svelte\";\n\n\n    const {value = $bindable([]), defaultValue}: {value: HexColor[], defaultValue: HexColor[]} = $props();\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as _, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={value[i]} size={40} label={(i + 1).toString()} />\n        {/each}\n    </div>\n</div>\n\n<style>\n.grid-container {\n    display: flex;\n    align-items: center;\n    flex: 1;\n}\n.color-grid {\n    display: grid;\n    /* width: 100%; */\n    flex: 1;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(32, 1fr);\n    /* grid-column-gap: 30px; */\n    justify-content: space-around;\n    justify-items: center;\n\n    /* align-items: center; */\n    /* align-content: space-evenly; */\n    grid-row-gap: 14px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Separator.svelte\n<div class=\"separator\"></div>\n\n<style>\n.separator {\n    display: flex;\n    height: 2px;\n    width: 100%;\n    background: var(--bg-separator);\n    margin: 12px 0;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Switch.svelte\n<script lang=\"ts\">\n    // eslint-disable-next-line prefer-const\n    let {disabled = false, checked = $bindable(false)}: {disabled?: boolean, checked?: boolean} = $props();\n\n    function change() {\n        checked = !checked;\n    }\n</script>\n\n\n<div class=\"switch\" class:disabled>\n    <input type=\"checkbox\" {disabled} {checked} onchange={change} />\n    <div class=\"switch-body\">\n        <svg class=\"switch-slider\" viewBox=\"0 0 16 16\" preserveAspectRatio=\"xMinYMid meet\">\n            <rect class=\"switch-handle\" fill=\"white\" x=\"0\" y=\"0\" height=\"16\" width=\"16\" rx=\"8\"></rect>\n        </svg>\n    </div>\n</div>\n\n\n<style>\n.switch {\n    position: relative;\n    transition: 250ms cubic-bezier(0, 0.3, 0.7, 1) filter, 250ms cubic-bezier(0, 0.3, 0.7, 1) opacity;\n}\n\n.switch-body {\n    border-radius: 14px;\n    width: 32px;\n    height: 20px;\n    background-color: var(--switch-body-color);\n    transition: 250ms cubic-bezier(0, 0.3, 0.7, 1) background-color, 250ms cubic-bezier(0, 0.3, 0.7, 1) box-shadow;\n    position: relative;\n    box-shadow: 0 0 1px transparent inset;\n}\n\n.switch input:active + .switch-body {\n    background-color: var(--switch-active-body-color);\n}\n\n.switch input:checked + .switch-body {\n    background-color: var(--switch-checked-color);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n}\n\n.switch input:checked:active + .switch-body {\n    background-color: var(--switch-active-checked-color);\n}\n\n.switch input {\n    position: absolute;\n    z-index: 1;\n    opacity: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 100px;\n    cursor: pointer;\n}\n\n.switch-body .switch-slider {\n    display: flex;\n    position: absolute;\n    left: 2px;\n    top: 2px;\n    width: 16px;\n    height: 16px;\n    transition: 250ms cubic-bezier(0, 0.3, 0.7, 1);\n}\n\n.switch input:checked + .switch-body .switch-slider {\n    left: 14px;\n}\n\n.switch-body .switch-slider .switch-handle {\n    transition: 250ms cubic-bezier(0, 0.3, 0.7, 1);\n    position: relative;\n    display: flex;\n}\n\n.disabled {\n    opacity: 0.5;\n    filter: grayscale(1);\n}\n\n.disabled input {\n    cursor: not-allowed;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/components/settings/Text.svelte\n<script lang=\"ts\">\n    interface Props {\n        value: string;\n        blank?: boolean;\n        align?: \"right\" | \"left\";\n        change?: (e: Event) => void;\n    }\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), blank = false, align = \"right\", change}: Props = $props();\n\n    function click(event: MouseEvent) {\n        event.stopPropagation();\n    }\n</script>\n\n<input class:blank class:empty={value === \"\"} class={align} type=\"text\" onclick={click} onchange={change} bind:value />\n\n<style>\ninput {\n    background: var(--bg-level-2);\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    outline: none;\n    color: inherit;\n    text-align: right;\n    max-width: 175px;\n    padding: 0 4px 2px 0;\n}\n\ninput:focus, input.blank:focus {\n    background:var(--bg-input-focus);\n    outline: var(--border-input-focus);\n}\n\ninput.blank {\n    background: none;\n    border-width: 0;\n}\n\ninput.blank.empty {\n    border-width: 1px;\n}\n\ninput.left {\n    text-align: left;\n}\n</style>\n```\n\ndata\n```ts ghostty-config/src/lib/data/settings.ts\nimport config from \"$lib/stores/config.svelte\";\nimport type {HexColor} from \"$lib/utils/colors\";\n\ninterface BaseSettingType {\n    id: string;\n    name: string;\n    note?: string;\n}\n\ninterface Panel extends BaseSettingType {\n    groups: Group[];\n}\n\ninterface Group extends BaseSettingType {\n    settings: (Switch | Text | Number | Dropdown | Color | Palette | Keybinds)[];\n    // type: \"group\";\n}\n\ntype SettingType = \"switch\" | \"number\" | \"dropdown\" | \"text\" | \"color\" | \"palette\" | \"keybinds\";\n\ninterface BaseSettingItem extends BaseSettingType {\n    type: SettingType;\n    value: unknown;\n}\n\ninterface Switch extends BaseSettingItem {\n    type: \"switch\";\n    value: boolean;\n}\n\ninterface Text extends BaseSettingItem {\n    type: \"text\";\n    value: string;\n}\n\ninterface Number extends BaseSettingItem {\n    type: \"number\";\n    value: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    size?: number;\n    range?: boolean;\n}\n\ninterface DropdownOption {\n    name: string;\n    value: string;\n}\n\ninterface Dropdown extends BaseSettingItem {\n    type: \"dropdown\";\n    value: \"string\";\n    options: (DropdownOption | string)[];\n}\n\ninterface Color extends BaseSettingItem {\n    value: HexColor;\n    type: \"color\";\n}\n\ninterface Palette extends BaseSettingItem {\n    value: HexColor[];\n    type: \"palette\";\n}\n\nexport type KeybindString = `${string}=${string}`;\ninterface Keybinds extends BaseSettingItem {\n    value: KeybindString[];\n    type: \"keybinds\";\n}\n\ninterface ThemeResponse {\n  \"type\": string;\n  \"encoding\": string;\n  \"size\": number;\n  \"name\": string;\n  \"path\": string;\n  \"content\": string;\n  \"sha\": string;\n  \"url\": string;\n  \"git_url\": string;\n  \"html_url\": string;\n  \"download_url\": string;\n  \"_links\": {\n    \"git\": string;\n    \"self\": string;\n    \"html\": string;\n  }\n}\n\ninterface ColorScheme {\n  palette: { [key: string]: string };\n  background?: string;\n  foreground?: string;\n  cursorColor?: string;\n  selectionBackground?: string;\n  selectionForeground?: string;\n}\n\nconst fetchThemeFiles = async () => {\n    const apiUrl = \"https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty\";\n\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const themeFiles = await response.json();\n\n    return {themeFiles};\n};\n\n// Function to convert raw string data into a JSON object\nexport const parseColorScheme = (input: string): ColorScheme => {\n  const colorScheme: ColorScheme = {palette: {}};\n\n  // Split input by lines\n  const lines = input.split(\"\\n\");\n\n  lines.forEach((line) => {\n    if (line.startsWith(\"palette\")) {\n      const [, rest] = line.split(\"palette =\").map(part => part.trim());\n\n      if (rest) {\n        const [paletteIndex, color] = rest.split(\"=\");\n        if (paletteIndex && color) {\n          colorScheme.palette[paletteIndex.trim()] = color.trim();\n        }\n      }\n    }\n    else {\n      const [key, value] = line.split(\"=\").map(part => part.trim());\n\n      switch (key) {\n        case \"background\":\n          colorScheme.background = `#${value}`;\n          break;\n        case \"foreground\":\n          colorScheme.foreground = `#${value}`;\n          break;\n        case \"cursor-color\":\n          colorScheme.cursorColor = `#${value}`;\n          break;\n        case \"selection-background\":\n          colorScheme.selectionBackground = `#${value}`;\n          break;\n        case \"selection-foreground\":\n          colorScheme.selectionForeground = `#${value}`;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n\n  return colorScheme;\n};\n\nexport const fetchColorScheme = async (theme: string) => {\n    const apiUrl = `https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty${theme ? \"/\" + theme : \"\"}`;\n\n    const response = await fetch(apiUrl,{\n        headers: {\n            Accept: \"application/vnd.github.raw+json\"\n        }\n    });\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const colorSchemeResponse = await response.text();\n\n    return {colorSchemeResponse};\n};\n\nconst {themeFiles} = await fetchThemeFiles();\nconst themeFileNames = themeFiles && themeFiles.map((file: ThemeResponse) => file.name);\n\n// const {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\n// const colorScheme = parseColorScheme(colorSchemeResponse);\n\nexport default [\n    {\n        id: \"application\",\n        name: \"Application\",\n        note: \"\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                // type: \"group\",\n                settings: [\n                    {id: \"title\", name: \"Static title for all windows\", type: \"text\", value: \"\"},\n                    {id: \"desktopNotifications\", name: \"Allow desktop notifications\", type: \"switch\", value: true},\n                    {id: \"configFile\", name: \"Additional config file\", type: \"text\", value: \"\"},\n                    {id: \"configDefaultFiles\", name: \"Load default config file\", type: \"switch\", value: true},\n                    {id: \"linkUrl\", name: \"Automatically link URLs\", note: \"Matching occurs while holding the control (Linux) or command (macOS) key.\", type: \"switch\", value: true},\n                ]\n            },\n            {\n                id: \"startup\",\n                name: \"Startup\",\n                // type: \"group\",\n                settings: [\n                    {id: \"command\", name: \"Command to run on launch\", type: \"text\", value: \"\"},\n                    {id: \"fullscreen\", name: \"Launch in fullscreen mode\", type: \"switch\", value: false},\n                    {id: \"initialWindow\", name: \"Show a window on startup\", type: \"switch\", value: true},\n                    {id: \"workingDirectory\", name: \"Directory to use after startup\", note: \"Special values of `home` and `inherit` are also allowed here.\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shutdown\",\n                name: \"Shutdown\",\n                // type: \"group\",\n                settings: [\n                    {id: \"waitAfterCommand\", name: \"Wait for input after command\", type: \"switch\", value: false},\n                    {id: \"abnormalCommandExitRuntime\", name: \"Abnormal command exit runtime\", type: \"number\", value: 250, min: 0, size: 5},\n                    {id: \"confirmCloseSurface\", name: \"Confirm when closing a surface\", type: \"switch\", value: true},\n                    {id: \"quitAfterLastWindowClosed\", name: \"Quit after closing last window\", type: \"switch\", value: false},\n                    {id: \"quitAfterLastWindowClosedDelay\", name: \"Delay before auto quitting\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shell\",\n                name: \"Shell Integration\",\n                // type: \"group\",\n                settings: [\n                    {id: \"shellIntegration\", name: \"Shell integration style\", type: \"dropdown\", value: \"detect\", options: [\"none\", \"detect\", \"bash\", \"elvish\", \"fish\", \"zsh\"]},\n                    {id: \"shellIntegrationFeatures\", name: \"Shell integration features\", note: \"The current available features are cursor, sudo, and title. Including one force enables it, prefixing it with `no-` force disables it, omitting it falls back to default.\", type: \"text\", value: \"cursor,no-sudo,title\"},\n                    {id: \"term\", name: \"TERM environment variable\", type: \"text\", value: \"xterm-ghostty\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced\",\n                note: \"You should only touch these settings if you know what you're doing, otherwise you could cause major issues with Ghostty!\",\n                // type: \"group\",\n                settings: [\n                    {id: \"scrollbackLimit\", name: \"Scrollback buffer size (bytes)\", note: \"This buffer exists completely in memory but is allocated lazily.\", type: \"number\", value: 10000000, min: 0, size: 10},\n                    {id: \"customShader\", name: \"Custom shader\", note: \"This matches the API of Shadertoy.\", type: \"text\", value: \"\"},\n                    {id: \"customShaderAnimation\", name: \"Allow shaders to animate\", type: \"dropdown\", value: \"false\", options: [\"false\", \"true\", \"always\"]},\n                    {id: \"enquiryResponse\", name: \"Reponse to ENQ\", type: \"text\", value: \"\"},\n                    {id: \"oscColorReportFormat\", name: \"OSC color report format\", type: \"dropdown\", value: \"16-bit\", options: [\"none\", \"8-bit\", \"16-bit\"]},\n                    {id: \"vtKamAllowed\", name: \"VT kam mode allowed\", note: \"If you don't know what this is, don't touch it!\", type: \"switch\", value: false},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"clipboard\",\n        name: \"Clipboard\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"clipboardRead\", name: \"Allow terminal to read clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"clipboardWrite\", name: \"Allow terminal to write clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"copyOnSelect\", name: \"Copy on select\", type: \"switch\", value: true},\n                    {id: \"clipboardTrimTrailingSpaces\", name: \"Trim trailing space on copy\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteProtection\", name: \"Confirm when pasting unsafely\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteBracketedSafe\", name: \"Mark bracketed paste as safe\", type: \"switch\", value: true},\n                    {id: \"imageStorageLimit\", name: \"Image buffer limit (bytes)\", type: \"number\", value: 320000000, min: 0, max: 4294967295, size: 12},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"window\",\n        name: \"Window\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"windowVsync\", name: \"Enable vsync\", type: \"switch\", value: true},\n                    {id: \"windowInheritWorkingDirectory\", name: \"Inherit working directory\", type: \"switch\", value: true},\n                    {id: \"windowInheritFontSize\", name: \"Inherit font size\", type: \"switch\", value: true},\n                    {id: \"windowColorspace\", name: \"Window colorspace\", type: \"dropdown\", value: \"srgb\", options: [\"srgb\", \"display-p3\"]},\n                    {id: \"windowSaveState\", name: \"Save window state\", type: \"dropdown\", value: \"default\", options: [\"default\", \"never\", \"always\"]},\n                    // maybe move to application?\n                    {id: \"windowNewTabPosition\", name: \"New tab position\", type: \"dropdown\", value: \"current\", options: [\"current\", \"end\"]},\n                ]\n            },\n            {\n                id: \"appearance\",\n                name: \"Appearance\",\n                settings: [\n                    {id: \"windowTheme\", name: \"Window theme\", type: \"dropdown\", value: \"auto\", options: [\"auto\", \"system\", \"light\", \"dark\"]},\n                    {id: \"windowDecoration\", name: \"Enable native frames\", type: \"switch\", value: true},\n                    {id: \"windowPaddingX\", name: \"Horizontal window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingY\", name: \"Vertical window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingBalance\", name: \"Auto-balance window padding\", type: \"switch\", value: false},\n                    {id: \"windowPaddingColor\", name: \"Window padding color\", type: \"dropdown\", value: \"extend\", options: [\"background\", \"extend\", \"extend-always\"]},\n\n                    // maybe move to colors\n                    {id: \"backgroundOpacity\", name: \"Background opacity\", type: \"number\", range: true, value: 1, min: 0, max: 1, step: 0.01},\n                    {id: \"backgroundBlurRadius\", name: \"Background blur radius\", note: \"A value of 20 is reasonable for a good looking blur, going beyond that can cause rendering and performance issues.\", type: \"number\", range: true, value: 0, min: 0, max: 50, step: 1},\n                    {id: \"unfocusedSplitOpacity\", name: \"Unfocused split opacity\", type: \"number\", range: true, value: 0.7, min: 0.15, max: 1, step: 0.01},\n                    {id: \"unfocusedSplitFill\", name: \"Unfocused split fill color\", type: \"color\", value: \"\"},\n                ]\n            },\n            {\n                id: \"resize\",\n                name: \"Sizing & Resizing\",\n                settings: [\n                    {id: \"windowHeight\", name: \"Initial window height\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 4, step: 1, size: 4},\n                    {id: \"windowWidth\", name: \"Initial window width\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 10, step: 1, size: 4},\n                    {id: \"windowStepResize\", name: \"Resize in grid cell increments\", type: \"switch\", value: false},\n                    {id: \"resizeOverlay\", name: \"Show resize overlays\", type: \"dropdown\", value: \"after-first\", options: [\"always\", \"never\", \"after-first\"]},\n                    {id: \"resizeOverlayPosition\", name: \"Resize overlay position\", type: \"dropdown\", value: \"center\", options: [\"center\", \"top-left\", \"top-center\", \"top-right\", \"bottom-left\", \"bottom-center\", \"bottom-right\"]},\n                    {id: \"resizeOverlayDuration\", name: \"Show resize overlay time\", type: \"text\", value: \"750ms\"},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"colors\",\n        name: \"Colors\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                settings: [\n                    {\n                        id: \"theme\",\n                        name: \"Color theme\",\n                        note: \"Any colors selected after setting this will overwrite the theme's colors.\",\n                        type: \"dropdown\",\n                        value: \"\",\n                        options: [\"\", ...themeFileNames]\n                    },\n                    {id: \"boldIsBright\", name: \"Bold text uses bright colors\", type: \"switch\", value: false},\n                    {id: \"minimumContrast\", name: \"Minimum contrast\", type: \"number\", value: 1, range: true, min: 1, max: 21, step: 0.1},\n                ]\n            },\n            {\n                id: \"base\",\n                name: \"Base Colors\",\n                note: \"The preview here shows selected text in the second line of the command output.\",\n                settings: [\n                    {id: \"background\", name: \"Background color\", type: \"color\", value: \"#282c34\"},\n                    {id: \"foreground\", name: \"Foreground color\", type: \"color\", value: \"#ffffff\"},\n                    {id: \"selectionBackground\", name: \"Selection background color\", type: \"color\", value: \"\"},\n                    {id: \"selectionForeground\", name: \"Selection foreground color\", type: \"color\", value: \"\"},\n                    {id: \"selectionInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause selections to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                ]\n            },\n            {\n                id: \"cursor\",\n                name: \"Cursor\",\n                note: \"The cursor in this preview blinks on and off at 1 second intervals for emphasis, it may not match what you see in Ghostty!\",\n                settings: [\n                    {id: \"cursorColor\", name: \"Cursor color\", type: \"color\", value: \"\"},\n                    {id: \"cursorText\", name: \"Text color under cursor\", type: \"color\", value: \"\"},\n                    {id: \"cursorInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause cells under the cursor to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                    {id: \"cursorOpacity\", name: \"Cursor opacity\", type: \"number\", value: 1, range: true, min: 0, max: 1, step: 0.05},\n                    {id: \"cursorStyle\", name: \"Cursor style\", type: \"dropdown\", value: \"block\", options: [\"block\", \"bar\", \"underline\", {value: \"block_hollow\", name: \"hollow block\"}]},\n                    {id: \"cursorStyleBlink\", name: \"Cursor blink style\", note: \"The `default` option defers to DEC mode 12 to determine blinking state.\", type: \"dropdown\", value: \"\", options: [\"true\", \"false\", {value: \"\", name: \"default\"}]},\n                ]\n            },\n            {\n                id: \"palette\",\n                name: \"Color Palette\",\n                note: \"The first 16 colors are the most commonly displayed colors in the terminal.\\n\\nColors 1-8 are typically black, red, green, yellow, blue, magenta, cyan, and white.\\nColors 9-16 are typically \\\"brighter\\\" variants of these colors.\",\n                settings: [\n                    {id: \"palette\", name: \"\", type: \"palette\", value: [\"#1d1f21\",\"#cc6666\",\"#b5bd68\",\"#f0c674\",\"#81a2be\",\"#b294bb\",\"#8abeb7\",\"#c5c8c6\",\"#666666\",\"#d54e53\",\"#b9ca4a\",\"#e7c547\",\"#7aa6da\",\"#c397d8\",\"#70c0b1\",\"#eaeaea\",\"#000000\",\"#00005f\",\"#000087\",\"#0000af\",\"#0000d7\",\"#0000ff\",\"#005f00\",\"#005f5f\",\"#005f87\",\"#005faf\",\"#005fd7\",\"#005fff\",\"#008700\",\"#00875f\",\"#008787\",\"#0087af\",\"#0087d7\",\"#0087ff\",\"#00af00\",\"#00af5f\",\"#00af87\",\"#00afaf\",\"#00afd7\",\"#00afff\",\"#00d700\",\"#00d75f\",\"#00d787\",\"#00d7af\",\"#00d7d7\",\"#00d7ff\",\"#00ff00\",\"#00ff5f\",\"#00ff87\",\"#00ffaf\",\"#00ffd7\",\"#00ffff\",\"#5f0000\",\"#5f005f\",\"#5f0087\",\"#5f00af\",\"#5f00d7\",\"#5f00ff\",\"#5f5f00\",\"#5f5f5f\",\"#5f5f87\",\"#5f5faf\",\"#5f5fd7\",\"#5f5fff\",\"#5f8700\",\"#5f875f\",\"#5f8787\",\"#5f87af\",\"#5f87d7\",\"#5f87ff\",\"#5faf00\",\"#5faf5f\",\"#5faf87\",\"#5fafaf\",\"#5fafd7\",\"#5fafff\",\"#5fd700\",\"#5fd75f\",\"#5fd787\",\"#5fd7af\",\"#5fd7d7\",\"#5fd7ff\",\"#5fff00\",\"#5fff5f\",\"#5fff87\",\"#5fffaf\",\"#5fffd7\",\"#5fffff\",\"#870000\",\"#87005f\",\"#870087\",\"#8700af\",\"#8700d7\",\"#8700ff\",\"#875f00\",\"#875f5f\",\"#875f87\",\"#875faf\",\"#875fd7\",\"#875fff\",\"#878700\",\"#87875f\",\"#878787\",\"#8787af\",\"#8787d7\",\"#8787ff\",\"#87af00\",\"#87af5f\",\"#87af87\",\"#87afaf\",\"#87afd7\",\"#87afff\",\"#87d700\",\"#87d75f\",\"#87d787\",\"#87d7af\",\"#87d7d7\",\"#87d7ff\",\"#87ff00\",\"#87ff5f\",\"#87ff87\",\"#87ffaf\",\"#87ffd7\",\"#87ffff\",\"#af0000\",\"#af005f\",\"#af0087\",\"#af00af\",\"#af00d7\",\"#af00ff\",\"#af5f00\",\"#af5f5f\",\"#af5f87\",\"#af5faf\",\"#af5fd7\",\"#af5fff\",\"#af8700\",\"#af875f\",\"#af8787\",\"#af87af\",\"#af87d7\",\"#af87ff\",\"#afaf00\",\"#afaf5f\",\"#afaf87\",\"#afafaf\",\"#afafd7\",\"#afafff\",\"#afd700\",\"#afd75f\",\"#afd787\",\"#afd7af\",\"#afd7d7\",\"#afd7ff\",\"#afff00\",\"#afff5f\",\"#afff87\",\"#afffaf\",\"#afffd7\",\"#afffff\",\"#d70000\",\"#d7005f\",\"#d70087\",\"#d700af\",\"#d700d7\",\"#d700ff\",\"#d75f00\",\"#d75f5f\",\"#d75f87\",\"#d75faf\",\"#d75fd7\",\"#d75fff\",\"#d78700\",\"#d7875f\",\"#d78787\",\"#d787af\",\"#d787d7\",\"#d787ff\",\"#d7af00\",\"#d7af5f\",\"#d7af87\",\"#d7afaf\",\"#d7afd7\",\"#d7afff\",\"#d7d700\",\"#d7d75f\",\"#d7d787\",\"#d7d7af\",\"#d7d7d7\",\"#d7d7ff\",\"#d7ff00\",\"#d7ff5f\",\"#d7ff87\",\"#d7ffaf\",\"#d7ffd7\",\"#d7ffff\",\"#ff0000\",\"#ff005f\",\"#ff0087\",\"#ff00af\",\"#ff00d7\",\"#ff00ff\",\"#ff5f00\",\"#ff5f5f\",\"#ff5f87\",\"#ff5faf\",\"#ff5fd7\",\"#ff5fff\",\"#ff8700\",\"#ff875f\",\"#ff8787\",\"#ff87af\",\"#ff87d7\",\"#ff87ff\",\"#ffaf00\",\"#ffaf5f\",\"#ffaf87\",\"#ffafaf\",\"#ffafd7\",\"#ffafff\",\"#ffd700\",\"#ffd75f\",\"#ffd787\",\"#ffd7af\",\"#ffd7d7\",\"#ffd7ff\",\"#ffff00\",\"#ffff5f\",\"#ffff87\",\"#ffffaf\",\"#ffffd7\",\"#ffffff\",\"#080808\",\"#121212\",\"#1c1c1c\",\"#262626\",\"#303030\",\"#3a3a3a\",\"#444444\",\"#4e4e4e\",\"#585858\",\"#626262\",\"#6c6c6c\",\"#767676\",\"#808080\",\"#8a8a8a\",\"#949494\",\"#9e9e9e\",\"#a8a8a8\",\"#b2b2b2\",\"#bcbcbc\",\"#c6c6c6\",\"#d0d0d0\",\"#dadada\",\"#e4e4e4\",\"#eeeeee\"]},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"fonts\",\n        name: \"Fonts\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"General Font Settings\",\n                settings: [\n                    {id: \"fontSize\", name: \"Base font size\", type: \"number\", value: 13, min: 4, max: 60, step: 0.5, range: true},\n                    {id: \"fontThicken\", name: \"Thicken fonts\", type: \"switch\", note: \"This currently only affects macOS.\", value: false},\n                    {id: \"fontFeature\", name: \"Font ligature settings\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"family\",\n                name: \"Font Families\",\n                settings: [\n                    {id: \"fontFamily\", name: \"Main font family\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBold\", name: \"Font family for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyItalic\", name: \"Font family for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBoldItalic\", name: \"Font family for bold italic text\", type: \"text\", value: \"\"},\n                    {id: \"windowTitleFontFamily\", name: \"Window title font family\", note: \"This is currently only supported on macOS\", type: \"text\", value: \"\"},\n                    {id: \"fontCodepointMap\", name: \"Unicode-specifc font mapping\", note: \"\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"styles\",\n                name: \"Font Styles\",\n                note: \"Named font styles for the fields above. For example for `Ioveska Heavy` you would use a style of `Heavy`. Alternately you can set the style to `false` to completely disable the style and revert to default style.\",\n                settings: [\n                    {id: \"fontStyle\", name: \"Main font style\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBold\", name: \"Font style for bold text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleItalic\", name: \"Font style for italic text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBoldItalic\", name: \"Font style for bold italic text\", type: \"text\", value: \"default\"},\n                ]\n            },\n            {\n                id: \"variations\",\n                name: \"Font Variations\",\n                note: \"Variable font specific settings, please only touch this if you know what you're doing!\",\n                settings: [\n                    {id: \"fontVariation\", name: \"Main font variant\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBold\", name: \"Font variant for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationItalic\", name: \"Font variant for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBoldItalic\", name: \"Font variant for bold italic text\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced Font & Cell Settings\",\n                note: \"The settings below have very little validation in Ghostty and can cause your terminal to become unusable. Be careful messing with any of these.\",\n                settings: [\n                    {id: \"adjustCellWidth\", name: \"Cell width adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCellHeight\", name: \"Cell height adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustFontBaseline\", name: \"Font baseline adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlinePosition\", name: \"Underline position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlineThickness\", name: \"Underline thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughPosition\", name: \"Strikethrough position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughThickness\", name: \"Strikethrough thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCursorThickness\", name: \"Cursor thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"graphemeWidthMethod\", name: \"Grapheme width calculation method\", type: \"dropdown\", value: \"unicode\", options: [\"unicode\", \"legacy\"]},\n                ]\n            },\n\n        ]\n    },\n    {\n        id: \"keybinds\",\n        name: \"Keybinds\",\n        groups: [\n            {\n                id: \"keybinds\",\n                name: \"\",\n                settings: [\n                    {id: \"keybind\", name: \"\", type: \"keybinds\", value: [\"super+page_up=scroll_page_up\", \"super+physical:four=goto_tab:4\", \"super+shift+down=jump_to_prompt:1\", \"super+shift+w=close_window\", \"super+shift+left_bracket=previous_tab\", \"super+alt+i=inspector:toggle\", \"super+w=close_surface\", \"super+physical:eight=goto_tab:8\", \"super+alt+right=goto_split:right\", \"shift+up=adjust_selection:up\", \"super+enter=toggle_fullscreen\", \"super+t=new_tab\", \"super+c=copy_to_clipboard\", \"super+shift+right_bracket=next_tab\", \"super+physical:one=goto_tab:1\", \"shift+left=adjust_selection:left\", \"super+equal=increase_font_size:1\", \"shift+page_up=adjust_selection:page_up\", \"super+physical:three=goto_tab:3\", \"super+d=new_split:right\", \"super+ctrl+down=resize_split:down,10\", \"shift+end=adjust_selection:end\", \"super+plus=increase_font_size:1\", \"super+q=quit\", \"super+home=scroll_to_top\", \"super+ctrl+left=resize_split:left,10\", \"super+ctrl+up=resize_split:up,10\", \"super+shift+up=jump_to_prompt:-1\", \"shift+right=adjust_selection:right\", \"super+comma=open_config\", \"super+shift+comma=reload_config\", \"super+minus=decrease_font_size:1\", \"shift+page_down=adjust_selection:page_down\", \"super+a=select_all\", \"alt+shift+equal=equalize_splits\", \"super+shift+enter=toggle_split_zoom\", \"super+alt+down=goto_split:bottom\", \"super+ctrl+f=toggle_fullscreen\", \"super+ctrl+right=resize_split:right,10\", \"super+alt+shift+j=write_scrollback_file:open\", \"shift+down=adjust_selection:down\", \"super+n=new_window\", \"super+alt+left=goto_split:left\", \"super+page_down=scroll_page_down\", \"super+alt+shift+w=close_all_windows\", \"super+alt+up=goto_split:top\", \"super+left_bracket=goto_split:previous\", \"super+physical:nine=goto_tab:9\", \"super+right_bracket=goto_split:next\", \"super+end=scroll_to_bottom\", \"super+shift+j=write_scrollback_file:paste\", \"super+shift+d=new_split:down\", \"super+zero=reset_font_size\", \"super+physical:five=goto_tab:5\", \"shift+home=adjust_selection:home\", \"super+physical:seven=goto_tab:7\", \"super+k=clear_screen\", \"super+physical:two=goto_tab:2\", \"super+physical:six=goto_tab:6\", \"super+v=paste_from_clipboard\"]}\n                ]\n            }\n        ]\n    },\n    {\n        id: \"mouse\",\n        name: \"Mouse\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"cursorClickToMove\", name: \"Enable click to move cursor\", type: \"switch\", value: true},\n                    {id: \"mouseHideWhileTyping\", name: \"Hide mouse while typing\", type: \"switch\", value: false},\n                    {id: \"mouseShiftCapture\", name: \"Allow shift with mouse click\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"always\", \"never\"]},\n                    // Technically the values should be min: 0.01, max: 10000, step: 0.01 but those are insane so instead I'll use sane defaults\n                    {id: \"mouseScrollMultiplier\", name: \"Mouse scroll multiplier\", type: \"number\", range: true, value: 1, min: 0.1, max: 10, step: 0.1},\n                    {id: \"focusFollowsMouse\", name: \"Focus splits on mouse move\", type: \"switch\", value: false},\n                    {id: \"clickRepeatInterval\", name: \"Milliseconds between multi-click\", note: \"A value of 0 means to use the operating system's default timing.\", type: \"number\", value: 0, min: 0, size: 4},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"gtk\",\n        name: \"GTK\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"class\", name: \"WM_CLASS class field\", note: \"This defaults to `com.mitchellh.ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"x11InstanceName\", name: \"WM_CLASS instance name\", note: \"This defaults to `ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"gtkSingleInstance\", name: \"Single-instance mode\", type: \"dropdown\", value: \"desktop\", options: [{name: \"detect\", value: \"desktop\"}, \"true\", \"false\"]},\n                    {id: \"gtkTitlebar\", name: \"Show titlebar\", type: \"switch\", value: true},\n                    {id: \"gtkTabsLocation\", name: \"Tab location\", type: \"dropdown\", value: \"top\", options: [\"top\", \"right\", \"bottom\", \"left\"]},\n                    {id: \"gtkWideTabs\", name: \"Use wide tabs\", type: \"switch\", value: true},\n                    {id: \"gtkAdwaita\", name: \"Enable adwaita theme support\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"linux\",\n        name: \"Linux\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"linuxCgroup\", name: \"Use dedicated cgroups\", type: \"dropdown\", value: \"single-instance\", options: [\"single-instance\", \"always\", \"never\"]},\n                    {id: \"linuxCgroupMemoryLimit\", name: \"Memory limit (bytes)\", type: \"number\", min: 0, max: 4294967295, size: 12},\n                    {id: \"linuxCgroupProcessLimit\", name: \"Max number of processes\", type: \"number\", min: 0, size: 5},\n                    {id: \"linuxCgroupHardFail\", name: \"Hard fail on startup\", type: \"switch\", value: false},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"macos\",\n        name: \"macOS\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"macosNonNativeFullscreen\", name: \"Use non-native fullscreen\", note: \"Tabs currently do not work with non-native fullscreen windows\", type: \"dropdown\", value: \"false\", options: [\"visible-menu\", \"true\", \"false\"]},\n                    {id: \"macosTitlebarStyle\", name: \"Titlebar style\", type: \"dropdown\", value: \"transparent\", options: [\"transparent\", \"native\", \"tabs\"]},\n                    {id: \"macosOptionAsAlt\", name: \"Use option key as alt key\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"left\", \"right\"]},\n                    {id: \"macosWindowShadow\", name: \"Show the window shadow\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n] as Panel[];\n```\n```typescript\nimport config from \"$lib/stores/config.svelte\";\n// error: 'config' is defined but never used. Allowed unused vars must match /^_/u.\nimport type {HexColor} from \"$lib/utils/colors\";\n\n```\n\nimages\n```svg ghostty-config/src/lib/images/ghost.svg\n<svg version=\"1.2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 800 800\" width=\"800\" height=\"800\">\n\t<title>flying-ghost-publicdomainvectors</title>\n\t<style>\n\t\t.s0 { fill: #e9eff5 } \n\t\t.s1 { fill: #ffffff } \n\t\t.s2 { fill: #c6d5e3 } \n\t\t.s3 { fill: #091c30 } \n\t\t.s4 { fill: #132e4a } \n\t</style>\n\t<g id=\"publicdomainvectors.org\">\n\t\t<path id=\"&lt;Path&gt;\" class=\"s0\" d=\"m587.1 172.6c60.8 280.5 23.7 242.9 152.7 422.9 5.4 7.6 6.5 19.3 2.6 28.7-3.9 9.4-11.5 13.4-18.6 9.9l-33.9-16.9c-7.2-3.6-14.3-2.3-20.7 3.6-6.4 5.8-10.2 14.7-11.1 25.6l-2.3 28c-1.2 15.5-8.3 27.6-18.5 32-10.3 4.4-20.7-0.4-27.4-12.4l-16.1-28.8c-8.7-15.7-21.6-22.6-35.2-19.2-13.6 3.5-24.1 16.5-28.6 35.6l-10.3 42.9c-4.6 19.1-15 32.1-28.6 35.6-13.6 3.5-26.4-3.5-35.2-19.1l-23.4-41.8c-22.2-39.6-62.8-41.5-86.7-4l-41.3 64.9c-9.6 15-23.1 20.7-36.7 15.4-13.6-5.2-23.4-20-26.6-40l-3-18.6c-2.9-18-11-31.6-22.9-38.3-11.8-6.6-24.1-4.4-34.5 6.2l-48.2 49.2c-9 9.2-20.4 9.3-29.5 0.2-9.1-9.1-13.2-24.7-10.6-40.4l4.2-25.7c3.6-21.4-3.4-42.9-17-52.5-3.2-2.2-5.9-6.1-7.5-11.2-3-9.7-1.2-20.8 4.4-27.6 124.6-148.3 94.5-162.6 131.9-394.1 33.7-208.1 334.3-215.1 378.6-10.1z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s1\" d=\"m587.1 172.6c5.6 25.7 10.3 48.7 14.5 69.5-32.9-121-94.6-221.2-239.2-184.3-203.5 51.9-75.9 274.2-248.4 475l-0.9-1.5c82.2-108.8 62.2-143.2 95.4-348.6 33.7-208.1 334.3-215.1 378.6-10.1z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s2\" d=\"m655.4 466.1c15.8 32 40.5 68.1 84.4 129.4 5.4 7.6 6.5 19.3 2.6 28.7-3.9 9.4-11.5 13.4-18.6 9.9l-33.9-16.9c-7.2-3.6-14.3-2.3-20.7 3.5-6.4 5.9-10.2 14.8-11.1 25.7l-2.3 28c-1.2 15.5-8.3 27.6-18.5 32-10.3 4.4-20.7-0.4-27.4-12.4l-16.1-28.8c-8.7-15.7-21.6-22.6-35.2-19.2-13.6 3.5-24.1 16.5-28.6 35.6l-10.3 42.9c-4.6 19.1-15 32.1-28.6 35.6-13.6 3.5-26.4-3.5-35.2-19.1l-23.4-41.8c-22.2-39.6-62.8-41.5-86.7-4l-41.3 64.9c-9.6 15-23.1 20.7-36.7 15.4-13.6-5.2-23.4-20-26.6-40l-3-18.6c-2.9-18-11-31.6-22.9-38.3-11.8-6.6-24.1-4.4-34.5 6.2l-48.2 49.2c-9 9.2-20.4 9.3-29.5 0.2-9.1-9.1-13.2-24.7-10.6-40.4l4.2-25.7c3.6-21.4-3.4-42.9-17-52.5-3.2-2.2-5.9-6.1-7.5-11.2-3-9.7-1.2-20.8 4.4-27.6 18.5-22 33.5-41 45.9-58.2-23 37.3-42.1 75.1-2.7 75.2-24.5 194.7 80.1 40.1 115-75.5-3.6 208.5 68.8 271.7 132.3-4.3 60.1 145.4 151.1 265.7 158.8-12.2 78.1 166.2 126 178.7 96.3 7.2 86.5 148.1 96.1 87.1 33.2-42.9z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s3\" d=\"m341.6 274.5c18 0 32.7-20.8 32.7-46.3 0-25.6-14.7-46.4-32.7-46.4-18.1 0-32.8 20.8-32.8 46.4 0 25.5 14.7 46.3 32.8 46.3z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s4\" d=\"m374.3 227.5v0.7c0 25.6-14.7 46.3-32.7 46.3-11.4 0-21.4-8.1-27.2-20.5l-0.1-0.7c0-25.6 14.7-46.4 32.8-46.4 11.3 0 21.3 8.2 27.2 20.6z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s3\" d=\"m451.3 274.5c18 0 32.7-20.8 32.7-46.3 0-25.6-14.7-46.4-32.8-46.4-18 0-32.7 20.8-32.7 46.4 0 25.5 14.7 46.3 32.7 46.3z\"/>\n\t\t<path id=\"&lt;Path&gt;\" class=\"s4\" d=\"m418.5 227.5v0.7c0 25.6 14.7 46.3 32.8 46.3 11.3 0 21.3-8.1 27.2-20.5v-0.7c0-25.6-14.7-46.4-32.8-46.4-11.3 0-21.3 8.2-27.2 20.6z\"/>\n\t</g>\n</svg>\n```\n\ntabs\n```svg ghostty-config/src/lib/images/tabs/github.svg\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-3 -3 30 30\">\n\t<path\n\t\tfill-rule=\"evenodd\"\n\t\tclip-rule=\"evenodd\"\n\t\td=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5229 6.47715 22 12 22C17.5229 22 22 17.5229 22 12C22 6.47715 17.5229 2 12 2ZM0 12C0 5.3726 5.3726 0 12 0C18.6274 0 24 5.3726 24 12C24 18.6274 18.6274 24 12 24C5.3726 24 0 18.6274 0 12Z\"\n\t\tfill=\"rgba(0,0,0,0.7)\"\n\t\tstroke=\"none\"\n\t/>\n\t<path\n\t\tfill-rule=\"evenodd\"\n\t\tclip-rule=\"evenodd\"\n\t\td=\"M9.59162 22.7357C9.49492 22.6109 9.49492 21.4986 9.59162 19.399C8.55572 19.4347 7.90122 19.3628 7.62812 19.1833C7.21852 18.9139 6.80842 18.0833 6.44457 17.4979C6.08072 16.9125 5.27312 16.8199 4.94702 16.6891C4.62091 16.5582 4.53905 16.0247 5.84562 16.4282C7.15222 16.8316 7.21592 17.9303 7.62812 18.1872C8.04032 18.4441 9.02572 18.3317 9.47242 18.1259C9.91907 17.9201 9.88622 17.1538 9.96587 16.8503C10.0666 16.5669 9.71162 16.5041 9.70382 16.5018C9.26777 16.5018 6.97697 16.0036 6.34772 13.7852C5.71852 11.5669 6.52907 10.117 6.96147 9.49369C7.24972 9.07814 7.22422 8.19254 6.88497 6.83679C8.11677 6.67939 9.06732 7.06709 9.73672 7.99999C9.73737 8.00534 10.6143 7.47854 12.0001 7.47854C13.386 7.47854 13.8777 7.90764 14.2571 7.99999C14.6365 8.09234 14.94 6.36699 17.2834 6.83679C16.7942 7.79839 16.3844 8.99999 16.6972 9.49369C17.0099 9.98739 18.2372 11.5573 17.4833 13.7852C16.9807 15.2706 15.9927 16.1761 14.5192 16.5018C14.3502 16.5557 14.2658 16.6427 14.2658 16.7627C14.2658 16.9427 14.4942 16.9624 14.8233 17.8058C15.0426 18.368 15.0585 19.9739 14.8708 22.6234C14.3953 22.7445 14.0254 22.8257 13.7611 22.8673C13.2924 22.9409 12.7835 22.9822 12.2834 22.9982C11.7834 23.0141 11.6098 23.0123 10.9185 22.948C10.4577 22.9051 10.0154 22.8343 9.59162 22.7357Z\"\n\t\tfill=\"rgba(0,0,0,0.7)\"\n\t\tstroke=\"none\"\n\t/>\n</svg>\n```\n\n```svg ghostty-config/src/lib/images/tabs/gtk.svg\n<?xml version=\"1.0\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"89\" height=\"96\">\n\t<g stroke=\"#fff\" stroke-width=\"2.12\">\n\t\t<path fill=\"#e40000\" d=\"m3.12,66.17 -2.06,-51.46 32.93,24.7 v55.58 l-30.87,-28.82 z\"/>\n\t\t<path fill=\"#7fe719\" d=\"m34,95 49.4,-20.58 4.12,-51.46 -53.52,16.47 v55.58 z\"/>\n\t\t<path fill=\"#729fcf\" d=\"m1.06,14.71 32.93,24.7 53.52,-16.47 -36.75,-21.88 -49.7,13.65 z\"/>\n\t\t<path stroke-width=\"1.25\" d=\"m50.6,51.3 -47.3,14 z l33,23 z v-50\"/>\n\t</g>\n</svg>\n```\n\nstores\n```ts ghostty-config/src/lib/stores/config.svelte.ts\nimport {dev} from \"$app/environment\";\nimport settings, {type KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"$lib/utils/colors\";\nimport themeHandler from \"$lib/utils/themeHandler\";\n// import defs from \"../data/defaults.json\";\n\n// TODO: find a good way to properly type the config\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaults: Partial<Record<keyof DefaultConfig, any>> = {};\n\nfor (const panel of settings) {\n    for (const group of panel.groups) {\n        for (const setting of group.settings) {\n            defaults[setting.id as keyof typeof defaults] = setting.value;\n        }\n    }\n}\n\nif (dev) {\n    // eslint-disable-next-line no-console\n    console.log(defaults);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\n\nexport function keyToConfig(key: string) {\n    return key.replaceAll(/([A-Z])/g, \"-$1\").toLowerCase();\n}\n\nexport function diff() {\n    // TODO: more elegance\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const output: Partial<Record<keyof typeof defaults|string, any>> = {};\n\n    for (const k in config) {\n        const key = k as keyof DefaultConfig;\n        if (Array.isArray(config[key]) && key === \"keybind\") {\n            const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (Array.isArray(config[key]) && key === \"palette\") {\n            const toAdd = [];\n            for (let p = 0; p < defaults[key].length; p++) {\n                if (config[key][p] === defaults[key][p]) continue;\n                toAdd.push(`${p}=${config[key][p]}`);\n            }\n            // const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (config[key] != defaults[key]) {\n            output[keyToConfig(key)] = config[key];\n        }\n    }\n\n    return output;\n}\n\nexport function load(conf: Partial<typeof config>) {\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n\n            if (key === \"theme\") {\n                themeHandler(conf[key] as string);\n            }\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n        }\n        else if (key === \"palette\") {\n            config.palette = [...conf.palette];\n        }\n    }\n}\n\nexport default config;\n\n\n// TODO: is this useful?\ninterface DefaultConfig {\n    palette: HexColor[];\n    keybind: KeybindString[];\n    fontFamily: string;\n    fontFamilyBold: string;\n    fontFamilyItalic: string;\n    fontFamilyBoldItalic: string;\n    fontStyle: string;\n    fontStyleBold: string;\n    fontStyleItalic: string;\n    fontStyleBoldItalic: string;\n    fontFeature: string;\n    fontSize: number;\n    fontVariation: string;\n    fontVariationBold: string;\n    fontVariationItalic: string;\n    fontVariationBoldItalic: string;\n    fontCodepointMap: string;\n    fontThicken: boolean;\n    adjustCellWidth: string;\n    adjustCellHeight: string;\n    adjustFontBaseline: string;\n    adjustUnderlinePosition: string;\n    adjustUnderlineThickness: string;\n    adjustStrikethroughPosition: string;\n    adjustStrikethroughThickness: string;\n    adjustCursorThickness: string;\n    graphemeWidthMethod: string;\n    theme: string;\n    background: HexColor;\n    foreground: HexColor;\n    selectionForeground: string;\n    selectionBackground: string;\n    selectionInvertFgBg: boolean;\n    minimumContrast: number;\n    cursorColor: string;\n    cursorInvertFgBg: boolean;\n    cursorOpacity: number;\n    cursorStyle: string;\n    cursorStyleBlink: string;\n    cursorText: string;\n    cursorClickToMove: boolean;\n    mouseHideWhileTyping: boolean;\n    mouseShiftCapture: boolean;\n    mouseScrollMultiplier: number;\n    backgroundOpacity: number;\n    backgroundBlurRadius: number;\n    unfocusedSplitOpacity: number;\n    unfocusedSplitFill: string;\n    command: string;\n    waitAfterCommand: boolean;\n    abnormalCommandExitRuntime: number;\n    scrollbackLimit: number;\n    linkUrl: boolean;\n    fullscreen: boolean;\n    title: string;\n    class: string;\n    workingDirectory: string;\n    windowPaddingX: number;\n    windowPaddingY: number;\n    windowPaddingBalance: boolean;\n    windowPaddingColor: string;\n    windowVsync: boolean;\n    windowInheritWorkingDirectory: boolean;\n    windowInheritFontSize: boolean;\n    windowDecoration: boolean;\n    windowTitleFontFamily: string;\n    windowTheme: string;\n    windowColorspace: string;\n    windowHeight: number;\n    windowWidth: number;\n    windowSaveState: string;\n    windowStepResize: boolean;\n    windowNewTabPosition: string;\n    resizeOverlay: string;\n    resizeOverlayPosition: string;\n    resizeOverlayDuration: string;\n    focusFollowsMouse: boolean;\n    clipboardRead: string;\n    clipboardWrite: string;\n    clipboardTrimTrailingSpaces: boolean;\n    clipboardPasteProtection: boolean;\n    clipboardPasteBracketedSafe: boolean;\n    imageStorageLimit: number;\n    copyOnSelect: boolean;\n    clickRepeatInterval: number;\n    configFile: string;\n    configDefaultFiles: boolean;\n    confirmCloseSurface: boolean;\n    quitAfterLastWindowClosed: boolean;\n    quitAfterLastWindowClosedDelay: string;\n    initialWindow: boolean;\n    shellIntegration: string;\n    shellIntegrationFeatures: string;\n    oscColorReportFormat: string;\n    vtKamAllowed: boolean;\n    customShader: string;\n    customShaderAnimation: boolean;\n    macosNonNativeFullscreen: boolean;\n    macosTitlebarStyle: string;\n    macosOptionAsAlt: boolean;\n    macosWindowShadow: boolean;\n    linuxCgroup: string;\n    linuxCgroupMemoryLimit: string;\n    linuxCgroupProcessesLimit: string;\n    linuxCgroupHardFail: boolean;\n    gtkSingleInstance: string;\n    gtkTitlebar: boolean;\n    gtkTabsLocation: string;\n    gtkWideTabs: boolean;\n    gtkAdwaita: boolean;\n    desktopNotifications: boolean;\n    boldIsBright: boolean;\n    term: string;\n    enquiryResponse: string;\n}\n```\n\n```ts ghostty-config/src/lib/stores/history.svelte.ts\nimport type {OnNavigate} from \"@sveltejs/kit\";\n\nlet stack: string[] = $state([window.location.pathname]);\nlet index = $state(0);\n\nexport function canGoBack() {\n    return index > 0;\n}\n\nexport function canGoForward() {\n    return index < stack.length - 1;\n}\n\nexport function processNavigation(navEvent: OnNavigate) {\n    if (navEvent.type !== \"link\" && navEvent.type !== \"popstate\") return;\n\n    if (navEvent.type === \"link\") {\n        if (!navEvent?.to?.url) return; // Sanity check\n        if (index === stack.length - 1) {\n            stack = [...stack, navEvent.to.url.pathname];\n        }\n        else {\n            const substack = stack.slice(0, index + 1);\n            stack = [...substack, navEvent.to.url.pathname];\n        }\n\n        index = stack.length - 1;\n    }\n\n    if (navEvent.type === \"popstate\") {\n        index += navEvent.delta!;\n\n        // Clamp values if the user uses browser history\n        // to navigate beyond our stack\n        if (index < 0) {\n            index = 0;\n            stack = [window.location.pathname];\n        }\n        if (index > stack.length - 1) {\n            index = stack.length - 1;\n        }\n    }\n}\n```\n\n```ts ghostty-config/src/lib/stores/state.svelte.ts\ninterface AppState {\n    title: string;\n}\n\nconst app: AppState = $state({\n    title: \"Home\"\n});\n\nexport default app;\n```\n\nutils\n```ts ghostty-config/src/lib/utils/colors.ts\nexport type HexColor = `#${string}`;\nexport type RgbArray = [number, number, number];\nexport type HsvArray = [number, number, number];\nexport type HsvObj = {hue: number, saturation: number, value: number};\n\nexport function luminosity(color: HexColor) {\n    const int = parseInt(color.substring(1), 16);\n    const red = int >> 16 & 0xFF;\n    const green = int >> 8 & 0xFF;\n    const blue = int >> 0 & 0xFF;\n\n    return (0.2126 * red) + (0.7152 * green) + (0.0722 * blue);\n}\n\n\nexport function isDark(color: HexColor) {\n    return luminosity(color) < 128;\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n */\nexport function hsvToRgb(hue: number, saturation: number, value: number): RgbArray {\n    const i = Math.floor(hue * 6);\n    const f = hue * 6 - i;\n    const p = value * (1 - saturation);\n    const q = value * (1 - f * saturation);\n    const t = value * (1 - (1 - f) * saturation);\n\n    let r, g, b;\n    switch (i % 6) {\n        /* eslint-disable no-sequences, @typescript-eslint/no-unused-expressions */\n        case 0: r = value, g = t, b = p; break;\n        case 1: r = q, g = value, b = p; break;\n        case 2: r = p, g = value, b = t; break;\n        case 3: r = p, g = q, b = value; break;\n        case 4: r = t, g = p, b = value; break;\n        default:\n        case 5: r = value, g = p, b = q; break;\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n}\n\nexport function rgbToHsv(red: number, green: number, blue: number): HsvObj {\n    const percentRed = red / 255;\n    const percentGreen = green / 255;\n    const percentBlue = blue / 255;\n    const cMax = Math.max(percentRed, percentGreen, percentBlue);\n    const cMin = Math.min(percentRed, percentGreen, percentBlue);\n    const delta = cMax - cMin;\n\n    let newHue = 0;\n    if (percentRed === cMax) newHue = 60 * (((percentGreen - percentBlue) / delta) % 6) / 360;\n    else if (percentGreen === cMax) newHue = 60 * (((percentBlue - percentRed) / delta) + 2) / 360;\n    else if (percentBlue === cMax) newHue = 60 * (((percentRed - percentGreen) / delta) + 4) / 360;\n    if (newHue < 0) newHue += 6;\n\n    const hue = delta === 0 ? 0 : newHue;\n    const saturation = cMax === 0 ? 0 : delta / cMax;\n    const value = cMax;\n    return {hue, saturation, value};\n}\n\n\nexport function rgbToHex(red: number, green: number, blue: number): HexColor {\n    const get = (color: number) => color.toString(16).padStart(2, \"0\").toUpperCase();\n    return `#${get(red)}${get(green)}${get(blue)}`;\n}\n\nexport function hexToRgb(string: HexColor): RgbArray {\n    const hex = string.slice(1);\n    const get = (s: number, e: number) => parseInt(hex.substring(s, e), 16);\n    return [get(0, 2), get(2, 4), get(4,6)];\n}\n```\n\n```ts ghostty-config/src/lib/utils/parse.ts\nimport type {KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"./colors\";\n\nconst re = /^\\s*([a-z-]+)[\\s]*=\\s*(.*)\\s*$/;\n\nexport default function(configString: string) {\n    const lines = configString.split(\"\\n\");\n\n    const results = {\n        palette: Array(256),\n        keybind: [] as Array<string>\n    } as {palette: (HexColor|\"\")[], keybind: KeybindString[], [key: string]: string|string[]};\n\n    for (let p = 0; p < 256; p++) results.palette[p] = \"\";\n\n    for (const l of lines) {\n        const line = l.trim();\n        const match = re.exec(line);\n        if (!match) continue;\n        const key = match[1].trim();\n        const value = match[2].trim();\n\n        if (key === \"palette\") {\n            const split = value.split(\"=\");\n            const num = parseInt(split[0].trim());\n            const color = split[1].trim() as HexColor; // TODO: perform validation\n            if (num < 0 || num > 255) continue;\n            results.palette[num] = color;\n        }\n        else if (key === \"keybind\") {\n            results.keybind.push(value as KeybindString); // TODO: perform validation\n        }\n        else {\n            const split = key.split(\"-\");\n            let newKey = split[0].trim();\n            for (let s = 1; s < split.length; s++) {\n                newKey += split[s].charAt(0).toUpperCase();\n                newKey += split[s].substring(1);\n            }\n            results[newKey] = value;\n        }\n    }\n\n    return results;\n};\n\n```\n\n```ts ghostty-config/src/lib/utils/themeHandler.ts\n/* eslint-disable no-console */\nimport type {HexColor} from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport {fetchColorScheme, parseColorScheme} from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    try {\n        console.log(\"Applying theme:\", themeName);\n        const {colorSchemeResponse} = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        console.log(\"Parsed color scheme:\", colorScheme);\n\n        const colorProperties = [\n            \"background\",\n            \"foreground\",\n            \"selectionBackground\",\n            \"selectionForeground\",\n            \"cursorColor\"\n        ] as const;\n\n        colorProperties.forEach((prop) => {\n            if (colorScheme[prop]) {\n                config[prop] = colorScheme[prop] as HexColor;\n                console.log(`Updated ${prop}:`, config[prop]);\n            }\n        });\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill(\"#000000\") as HexColor[];\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[+index] = color as HexColor;\n            }\n            config.palette = [...newPalette]; // Create a new array reference to trigger reactivity\n            console.log(\"Updated palette:\", config.palette);\n        }\n\n        // Force a re-render by updating the theme property\n        config.theme = themeName;\n        console.log(\"Theme application complete\");\n\n        // Dispatch a custom event to notify that the theme has been applied\n        window.dispatchEvent(new CustomEvent(\"themeApplied\", {detail: {theme: themeName}}));\n    } catch (error) {\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n```typescript\n        // Dispatch a custom event to notify that the theme has been applied\n        window.dispatchEvent(new CustomEvent(\"themeApplied\", {detail: {theme: themeName}}));\n    } catch (error) {\n// error: Closing curly brace appears on the same line as the subsequent block.\n        console.error(\"Error applying theme:\", error);\n    }\n```\n\nviews\n```svelte ghostty-config/src/lib/views/BaseColorPreview.svelte\n<script lang=\"ts\">\n    /* eslint-disable svelte/prefer-style-directive */\n    // TODO: fix above with preview component\n</script>\n\n<div class=\"preview\">\n    <div class=\"row prompt\">\n        <span style=\"color: var(--config-palette-2)\">John</span>\n        <span style=\"color: var(--config-palette-6)\">@</span>\n        <span style=\"color: var(--config-palette-4)\">doe-pc</span>\n        <span style=\"color: var(--config-palette-1)\" style:font-weight=\"700\">$</span>\n        cat file.txt\n    </div>\n\n    <div class=\"row\">&nbsp;</div>\n    <div class=\"row\">Lorem ipsum dolor sit amet, consectetur adipiscing</div>\n    <div class=\"row\">elit. Maecenas <span style=\"color: var(--config-selection-fg); background-color: var(--config-selection-bg)\">tempus massa ac mauris maximus, at</span></div>\n    <div class=\"row\">blandit diam vestibulum.</div>\n\n</div>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    max-height: 200px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n}\n\n.preview .row,\n.prompt {\n    display: flex;\n    white-space: pre;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/views/CursorPreview.svelte\n<script lang=\"ts\">\n    import config from \"$lib/stores/config.svelte\";\n    import {onMount} from \"svelte\";\n\n    let isCursorVisible = $state(true);\n\n    onMount(() => {\n        const interval = setInterval(() => {\n            if (config.cursorStyleBlink !== \"false\") isCursorVisible = !isCursorVisible;\n            else isCursorVisible = true;\n        }, 1000);\n        return () => clearInterval(interval);\n    });\n\n    // TODO: make less gross with less ternaries\n    const cursorColor = $derived(config.cursorInvertFgBg ? config.foreground : (config.cursorColor || config.foreground));\n    const cursorText = $derived(isCursorVisible ? config.cursorInvertFgBg ? config.background : (config.cursorText || config.background) : config.foreground);\n    const cursorOpacity = $derived(isCursorVisible ? Math.round(config.cursorOpacity * 255).toString(16) : \"00\");\n</script>\n\n<div class=\"preview\">\n    <div class=\"row prompt\">\n        <span style:color=\"var(--config-palette-2)\">john</span>\n        <span style:color=\"var(--config-palette-6)\">@</span>\n        <span style:color=\"var(--config-palette-4)\">doe-pc</span>\n        <span style:color=\"var(--config-palette-1)\" style:font-weight=\"700\">$</span>\n        git commit -m \"<span class=\"cursor {config.cursorStyle}\" style:color={cursorText} style:border-color=\"{cursorColor}{cursorOpacity}\" style:background-color=\"{cursorColor}{cursorOpacity}\">\"</span>\n    </div>\n</div>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    max-height: 60px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n}\n\n.preview .row,\n.prompt {\n    display: flex;\n    white-space: pre;\n}\n\n.cursor {\n    margin-left: 1px;\n}\n\n.cursor.bar,\n.cursor.underline,\n.cursor.block_hollow {\n    background-color: transparent!important;\n    color: inherit !important;\n}\n\n.cursor.bar {\n    border-left: 1px solid transparent;\n    margin-left: 0;\n}\n\n.cursor.underline {\n    border-bottom: 1px solid transparent;\n}\n\n.cursor.block_hollow {\n    border: 1px solid transparent;\n    margin-top: -1px;\n    margin-left: 0;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/views/FontPreview.svelte\n<script lang=\"ts\">\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n    import Switch from \"$lib/components/settings/Switch.svelte\";\n    import Text from \"$lib/components/settings/Text.svelte\";\n    import Number from \"$lib/components/settings/Number.svelte\";\n\n    let fontFamily = $state(\"monospace\");\n    let fontSize = $state(13);\n    let bold = $state(false);\n    let italic = $state(false);\n\n    /* eslint-disable svelte/prefer-style-directive */\n    // TODO: fix above with preview component\n</script>\n\n\n<!-- eslint-disable-next-line svelte/no-useless-mustaches -->\n<Group title=\"Font Playground\" note={\"Use this section to test your fonts as they may look in the terminal along with colors and glyphs.\\n\\nNote: this playground does not set any actual settings.\"}>\n    <div class=\"preview\" style=\"font-family: {fontFamily}; font-size: {fontSize + \"px\"}; font-style: {italic ? \"italic\" : \"normal\"}; font-weight: {bold ? 700 : 400};\">\n    <div class=\"row prompt\">\n        <span style=\"color: var(--config-palette-2);\">john</span>\n        <span style=\"color: var(--config-palette-6);\">@</span>\n        <span style=\"color: var(--config-palette-4);\">doe-pc</span>\n        <span style=\"color: var(--config-palette-1); font-weight: 700;\">$</span>\n        ls\n    </div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-3); font-weight: 700;\">Documents</span></div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-0); background: var(--config-palette-2); font-weight: 700;\">Downloads</span></div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-0); background: var(--config-palette-8); font-weight: 700;\">Pictures</span></div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-12); font-weight: 700;\">Music</span></div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-2);\">実行可能ファイル</span></div>\n    <div class=\"row\">-rwxr-xr-x 1 root <span style=\"color: var(--config-palette-6);\">sym</span> -> <span style=\"color: var(--config-palette-1);\">link</span></div>\n    <div class=\"row\">Icons:     <span style=\"background-color: var(--config-palette-1); color: var(--config-bg);\"> Powerline</span><span style=\"color: var(--config-palette-1);\"></span></div>\n    </div>\n    <Separator />\n    <Item name=\"Font family\" note=\"Due to cross-browser limitations, you'll need to manually type in a font-face currently on your system that you want to try out.\"><Text bind:value={fontFamily} /></Item>\n    <Separator />\n    <Item name=\"Font size\"><Number bind:value={fontSize} range={true} min={4} max={60} step={0.5} /></Item>\n    <Separator />\n    <Item name=\"Bold\"><Switch bind:checked={bold} /></Item>\n    <Separator />\n    <Item name=\"Italic\"><Switch bind:checked={italic} /></Item>\n    <!-- Add ligature options -->\n</Group>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    color: var(--config-fg);\n    height: 160px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n}\n\n.preview .row,\n.prompt {\n    display: flex;\n    white-space: pre;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/views/Page.svelte\n<script lang=\"ts\">\n    import {onNavigate} from \"$app/navigation\";\n    import {fly} from \"svelte/transition\";\n    import History from \"$lib/components/History.svelte\";\n    import app from \"$lib/stores/state.svelte\";\n    import type {Snippet} from \"svelte\";\n\n    interface Props {\n        children: Snippet;\n        title?: string;\n    }\n\n    const {children, title = \"Ghostty Config\"}: Props = $props();\n\n    $effect(() => {app.title = title;});\n\n    let isScrolling = $state(false);\n    let bufferHeight = $state(53);\n\n    function containerScroll(event: Event) {\n        isScrolling = (event.target as HTMLDivElement).scrollTop > 0;\n        const scrollerPos = (event.target as HTMLDivElement).scrollTop;\n        if (scrollerPos >= 53) {\n            bufferHeight = 0;\n        }\n        else {\n            bufferHeight = 53 - scrollerPos;\n        }\n    }\n\n    let scroller: HTMLDivElement|undefined = $state();\n    onNavigate(() => {\n        isScrolling = false;\n        bufferHeight = 53;\n        if (scroller) scroller.scrollTop = 0;\n    });\n</script>\n\n\n\n<div class=\"content-page\">\n    <div class=\"content-header\" class:scrolling={isScrolling}>\n        <History /><h1>{app.title}</h1>\n    </div>\n    {#key app.title}\n    <div class=\"content-container\" in:fly={{y: 30, duration: 200}} bind:this={scroller} style:margin-top=\"{bufferHeight}px\" onscroll={containerScroll}>\n        {@render children()}\n    </div>\n    {/key}\n</div>\n\n\n<style>\n.content-page {\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    flex: 1;\n}\n\n.content-header {\n    display: flex;\n    align-items: center;\n    font-size: 16pt;\n    gap: 10px;\n    padding: 10px 20px 5px 20px;\n    background: rgba(44, 39, 51, 0.9);\n    /* not top: #2E2932 */\n    backdrop-filter: blur(20px);\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 1;\n}\n\n.content-header.scrolling {\n    background: rgba(46, 41, 50, 0.9);\n    border-bottom: 1px solid black;\n}\n\n.content-header h1 {\n    font-size: 1.3rem;\n    margin: 8px 0;\n    font-weight: 600;\n}\n\n.content-container {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    padding: 8px 20px 10px 20px;\n    flex: 1;\n}\n</style>\n```\n\n```svelte ghostty-config/src/lib/views/PalettePreview.svelte\n<script lang=\"ts\">\n    // TODO: make each preview row a component with columns\n    // this will make it more versatile and easy to customize\n    // ideally add checkboxes underneath the preview letting\n    // users hide parts of the preview\n\n    // TODO: also extract out the preview window generally\n    // I've used it like 4 times now\n</script>\n\n\n<div class=\"preview\">\n    <div class=\"row prompt\">\n        <span class=\"p2 bold\">ghostty@macos</span>\n        <span class=\"fg\">:</span>\n        <span class=\"p6\">~</span>\n        <span class=\"fg\">$</span>\n        eza -la --color=always --icons\n    </div>\n    <div class=\"row\">&nbsp;</div>\n    <div class=\"row\">\n        <span class=\"p12\">d</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p10\">x</span>\n        <span class=\"p8\">------</span>\n        <span class=\"p8\">&nbsp;&nbsp;&nbsp;&nbsp;-</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">22 Aug 13:42</span>\n        <span>&nbsp;</span>\n        <span class=\"p4\"> .cache</span>\n    </div>\n    <div class=\"row\">\n        <span class=\"p12\">d</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p10\">x</span>\n        <span class=\"p8\">------</span>\n        <span class=\"p8\">&nbsp;&nbsp;&nbsp;&nbsp;-</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">22 Aug 13:42</span>\n        <span>&nbsp;</span>\n        <span class=\"p4\"> .config</span>\n    </div>\n    <div class=\"row\">\n        <span class=\"p7\">.</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p2\">&nbsp;&nbsp&nbsp;&nbsp;0</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">&nbsp;7 May 11:11</span>\n        <span>&nbsp;</span>\n        <span class=\"p7\"> .hushlogin</span>\n    </div>\n    <div class=\"row\">\n        <span class=\"p7\">.</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p8\">-------</span>\n        <span class=\"p10\">&nbsp;2.5k</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">&nbsp;2 Mar 02:49</span>\n        <span>&nbsp;</span>\n        <span class=\"p7\"> .viminfo</span>\n    </div>\n    <div class=\"row\">\n        <span class=\"p12\">l</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p10\">x</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p1\">w</span>\n        <span class=\"p2\">x</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p1\">w</span>\n        <span class=\"p2\">x</span>\n        <span class=\"p8\">&nbsp;&nbsp;&nbsp;&nbsp;-</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">&nbsp;9 Feb 20:32</span>\n        <span>&nbsp;</span>\n        <span class=\"p6\"> etc -> /etc</span>\n    </div>\n    <div class=\"row\">\n        <span class=\"p7\">.</span>\n        <span class=\"p11\">r</span>\n        <span class=\"p9\">w</span>\n        <span class=\"p10\">x</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p2\">x</span>\n        <span class=\"p3\">r</span>\n        <span class=\"p8\">-</span>\n        <span class=\"p2\">x</span>\n        <span class=\"p2\">&nbsp;&nbsp;12k</span>\n        <span>&nbsp;</span>\n        <span class=\"p11\">ghostty</span>\n        <span>&nbsp;</span>\n        <span class=\"date p4\">15 Jun 10:45</span>\n        <span>&nbsp;</span>\n        <span class=\"p10\"> lsix</span>\n    </div>\n</div>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    max-height: 200px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n}\n\n.preview .row,\n.prompt,\n.date {\n    display: flex;\n    white-space: pre;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n\n.bold {font-weight: 700;}\n\n.fg {color: var(--config-fg);}\n\n/* .p0 {color: var(--config-palette-0);} */\n.p1 {color: var(--config-palette-1);}\n.p2 {color: var(--config-palette-2);}\n.p3 {color: var(--config-palette-3);}\n.p4 {color: var(--config-palette-4);}\n/* .p5 {color: var(--config-palette-5);} */\n.p6 {color: var(--config-palette-6);}\n.p7 {color: var(--config-palette-7);}\n.p8 {color: var(--config-palette-8);}\n.p9 {color: var(--config-palette-9);}\n.p10 {color: var(--config-palette-10);}\n.p11 {color: var(--config-palette-11);}\n.p12 {color: var(--config-palette-12);}\n/* .p13 {color: var(--config-palette-13);}\n.p14 {color: var(--config-palette-14);}\n.p15 {color: var(--config-palette-15);} */\n</style>\n```\n\nroutes\n```svelte ghostty-config/src/routes/+layout.svelte\n<script lang=\"ts\">\n    import Gap from \"$lib/components/Gap.svelte\";\n    import Tab from \"$lib/components/Tab.svelte\";\n    import User from \"$lib/components/User.svelte\";\n    import \"../app.css\";\n\n    import application from \"$lib/images/tabs/application.webp\";\n    import clipboard from \"$lib/images/tabs/clipboard.webp\";\n    import window from \"$lib/images/tabs/window.webp\";\n\n    import colors from \"$lib/images/tabs/colors.webp\";\n    import fonts from \"$lib/images/tabs/fonts.webp\";\n\n    import keybinds from \"$lib/images/tabs/keybinds.webp\";\n    import mouse from \"$lib/images/tabs/mouse.webp\";\n\n    import gtk from \"$lib/images/tabs/gtk.svg\";\n    import linux from \"$lib/images/tabs/linux.webp\";\n    import macos from \"$lib/images/tabs/macos.webp\";\n\n    import github from \"$lib/images/tabs/github.svg\";\n    import ghostty from \"$lib/images/tabs/ghostty.webp\";\n\n    import config from \"$lib/stores/config.svelte\";\n    import app from \"$lib/stores/state.svelte\";\n\n    const cssConfigVars = $derived.by(() => {\n        let str = \"\";\n\n        const add = (key: string, val: string) => str += `--config-${key}: ${val};`;\n\n        // Add the base colors\n        add(\"bg\", config.background);\n        add(\"fg\", config.foreground);\n        add(\"selection-bg\", config.selectionInvertFgBg ? config.foreground : config.selectionBackground || config.foreground);\n        add(\"selection-fg\", config.selectionInvertFgBg ? config.background : config.selectionForeground || config.background);\n\n        // Add the palette colors\n        const paletteSize = 16; // config.palette.length;\n        for (let c = 0; c < paletteSize; c++) add(`palette-${c}`, config.palette[c]);\n\n        // TODO: consider honoring separate fonts for bold/italic and such in previews\n        // Add font settings\n        add(\"font-family\", config.fontFamily || \"monospace\");\n        add(\"font-size\", `${config.fontSize}px`);\n\n        return str;\n    });\n\n    const {children} = $props();\n\n\n\n\n    const htmlTitle = $derived.by(() => {\n        const name = app.title === \"Ghostty Config\" ? \"\" : app.title;\n        let title = \"Ghostty Config\";\n        if (name) title = `${title} - ${name}`;\n        return title;\n    });\n</script>\n\n<svelte:head>\n    <title>{htmlTitle}</title>\n</svelte:head>\n\n<!-- eslint-disable-next-line svelte/require-optimized-style-attribute -->\n<div class=\"app-window\" style={cssConfigVars}>\n    <div id=\"sidebar\">\n        <div class=\"sidebar-header\">\n            <div class=\"window-actions-container\">\n                <div class=\"window-actions\">\n                    <div class=\"window-dot\"><span>×</span></div>\n                    <div class=\"window-dot\"><span>-</span></div>\n                    <div class=\"window-dot\"><span>+</span></div>\n                </div>\n            </div>\n        </div>\n        <nav id=\"categories\">\n            <User route=\"/\" />\n            <Gap />\n            <Tab route=\"/settings/application\">\n                {#snippet icon()}<img src={application} alt=\"Application Settings\" />{/snippet}\n                Application\n            </Tab>\n            <Tab route=\"/settings/clipboard\">\n                {#snippet icon()}<img src={clipboard} alt=\"Clipboard Settings\" />{/snippet}\n                Clipboard\n            </Tab>\n            <Tab route=\"/settings/window\">\n                {#snippet icon()}<img src={window} alt=\"Window Settings\" />{/snippet}\n                Window\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/colors\">\n                {#snippet icon()}<img src={colors} alt=\"Color Settings\" />{/snippet}\n                Colors\n            </Tab>\n            <Tab route=\"/settings/fonts\">\n                {#snippet icon()}<img src={fonts} alt=\"Font Settings\" />{/snippet}\n                Fonts\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/keybinds\">\n                {#snippet icon()}<img src={keybinds} alt=\"Keybind Settings\" />{/snippet}\n                Keybinds\n            </Tab>\n            <Tab route=\"/settings/mouse\">\n                {#snippet icon()}<img src={mouse} alt=\"Mouse Settings\" />{/snippet}\n                Mouse\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/gtk\">\n                {#snippet icon()}<div class=\"icon-wrapper\"><img src={gtk} alt=\"GTK Settings\" /></div>{/snippet}\n                GTK\n            </Tab>\n            <Tab route=\"/settings/linux\">\n                {#snippet icon()}<img src={linux} alt=\"Linux Settings\" />{/snippet}\n                Linux\n            </Tab>\n            <Tab route=\"/settings/macos\">\n                {#snippet icon()}<img src={macos} alt=\"MacOS Settings\" />{/snippet}\n                macOS\n            </Tab>\n            <Gap expand={true} />\n            <Tab route=\"https://github.com/zerebos/ghostty-config\">\n                {#snippet icon()}<div class=\"icon-wrapper github\"><img src={github} alt=\"Ghostty Config GitHub\" /></div>{/snippet}\n                GitHub\n            </Tab>\n            <Tab route=\"https://github.com/ghostty-org\">\n                {#snippet icon()}<img src={ghostty} alt=\"Ghostty GitHub\" />{/snippet}\n                Ghostty\n            </Tab>\n        </nav>\n    </div>\n    <div id=\"content-view\">\n        {@render children()}\n    </div>\n\n</div>\n\n<!-- <svelte:window onmouseup={onMouseUp} onmousemove={onMouseMove} /> -->\n\n<style>\n.app-window {\n    user-select: none;\n    /* cursor: move; */\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    height: 100%;\n    /* margin: 20px auto; */\n    width: 90%;\n    max-width: var(--app-width);\n    height: var(--app-height);\n    border: 1px solid var(--border-level-1);\n    /* box-shadow: 0 0 1px white inset; */\n    box-shadow: 0 0 20px -1px rgba(0,0,0,0.7);\n    border-radius: var(--radius-level-1);\n    overflow: hidden;\n}\n\n/* .app-window .draggable {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 50px;\n    cursor: move;\n    z-index: 10;\n} */\n\n/* TODO: try this without pseudoelement using outline */\n.app-window::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    box-shadow: 0 0 1px white inset;\n    border-radius: inherit;\n    z-index: 2;\n    pointer-events: none;\n}\n\n#sidebar {\n    width: var(--sidebar-width);\n    /* black: #272329; white: #544F57; */\n    background: rgba(50, 46, 52, 0.7);\n    backdrop-filter: blur(10px);\n    padding: 5px;\n    border-right: 2px solid var(--border-level-1);\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebar-header {\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebar-header .window-actions-container {\n    display: flex;\n    padding: 15px 0 0 15px;\n    margin-bottom: 20px;\n}\n\n.sidebar-header .window-actions {\n    display: flex;\n    gap: 8px;\n}\n\n.app-window .window-dot {\n    border-radius: 50%;\n    /* display: inline-block; */\n    height: 12px;\n    /* margin-right: 6px; */\n    /* margin-top: 4px; */\n    width: 12px;\n    border: 0;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    color: rgba(0, 0, 0, 0);\n}\n\n.window-dot span {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: -3px;\n    margin-right: -1px;\n}\n\n.app-window .window-actions:hover .window-dot {\n    /* background: white!important; */\n    /* cursor: pointer; */\n    color: rgba(0, 0, 0, 0.5);\n}\n\n.window-dot {\n    background-color: var(--color-warning);\n}\n\n.window-dot:first-of-type {\n    background-color: var(--color-danger);\n}\n\n.window-dot:last-of-type {\n    background-color: var(--color-success);\n}\n\n#content-view {\n    background: var(--bg-level-1);\n    flex: 1;\n    display: flex;\n    min-width: 0;\n}\n\n\n\n#categories {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    padding: 10px;\n}\n\n#categories img {\n    width: 100%;\n}\n\n#categories .icon-wrapper {\n    background: linear-gradient(#D3E3E9, #908F8C);\n    width: 20px;\n    height: 20px;\n    border-radius: var(--radius-level-4);\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#categories .icon-wrapper img {\n    height: 14px;\n    width: 14px;\n}\n\n#categories .icon-wrapper.github {\n    background: linear-gradient(#9C45A9, #3B1E68);\n}\n\n#categories .icon-wrapper.github img {\n    filter: invert(100%);\n    height: 18px;\n    width: 18px;\n}\n</style>\n```\n\n```ts ghostty-config/src/routes/+layout.ts\nexport const ssr = false;\n```\n\n```svelte ghostty-config/src/routes/+page.svelte\n<script lang=\"ts\">\n    import Page from \"$lib/views/Page.svelte\";\n    import logo from \"$lib/images/ghost.svg\";\n    import sync from \"$lib/images/tabs/sync.webp\";\n    import Admonition from \"$lib/components/Admonition.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import LinkItem from \"$lib/components/settings/LinkItem.svelte\";\n</script>\n\n\n<Page title=\"Ghostty Config\">\n<section>\n    <div class=\"user\">\n        <div class=\"user-avatar\">\n            <img src={logo} alt=\"Ghostty Logo\" />\n        </div>\n        <div class=\"user-label\">\n            <div class=\"user-name\">Ghostty Config<sup>𝛼</sup></div>\n            <div class=\"user-subtext\">Unofficial Tool</div>\n        </div>\n    </div>\n    <Admonition>\n        This tool is still in an alpha stage so there <em>will</em> be bugs! If you run into any, please report them <a href=\"https://github.com/zerebos/ghostty-config/issues\" target=\"_blank\" rel=\"noopener noreferrer\">on GitHub</a>.\n    </Admonition>\n    <Group>\n        <LinkItem name=\"Import & Export\" href=\"/app/import-export\" icon={sync} />\n    </Group>\n    <Group title=\"Known Issues\">\n        <ul>\n            <li>Importing and exporting from clipboard give very little user feedback.</li>\n            <li>For most settings, the UI does not allow for setting multiple entries like having multiple <code>font-family</code> entries for fallback fonts.</li>\n        </ul>\n    </Group>\n    <div class=\"group-wrapper\">\n        <Group title=\"Roadmap\" flex={1}>\n            <ul>\n                <li>Validation of keybindings</li>\n                <li>Help documentation</li>\n                <li>Allow manual color input</li>\n                <li>Add theme presets</li>\n                <li>Unit testing import/export</li>\n                <li>Unify color scheme</li>\n                <li>Refactor & cleanup code</li>\n            </ul>\n        </Group>\n        <Group title=\"Potential Ideas\">\n            <ul>\n                <li>Custom setting types to more closely match Ghostty's config</li>\n                <li>Add a way to reset individual settings</li>\n                <li>Change color picker to be popover style instead of modal style</li>\n                <li>Add a more detailed terminal preview and playground</li>\n            </ul>\n        </Group>\n    </div>\n</section>\n</Page>\n\n<style>\n    section {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        flex: 0.6;\n    }\n\n    .user {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        gap: 8px;\n        margin: 20px 0;\n    }\n\n    .user-avatar img {\n        height: 80%;\n        width: 80%;\n    }\n\n    .user-avatar {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        background: linear-gradient(#03028F, #09043A);\n        height: 100px;\n        width: 100px;\n        border-radius: 50%;\n        /* border: 2px solid black; */\n        /* box-shadow: 0 0 0 2px white; */\n    }\n\n    .user-label {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        gap: 5px;\n    }\n\n    .user-name {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        font-size: 1.3rem;\n        color: var(--font-color);\n        font-weight: 600;\n    }\n\n    sup {\n        position: absolute;\n        color: var(--font-color-accent);\n        right: -11px;\n        top: -5px;\n    }\n\n    .user-subtext {\n        display: flex;\n        justify-content: center;\n        font-size: 1.1rem;\n    }\n\n    .group-wrapper {\n        display: flex;\n        width: 100%;\n        gap: 12px;\n    }\n\n    ul,\n    .group-wrapper ul {\n        /* list-style: \"↪ \"; */\n        list-style: \"🠶 \";\n        padding-left: 15px;\n        margin: 0;\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        justify-content: space-evenly;\n    }\n\n    code {\n        background: var(--bg-input-focus);\n        padding: 2px 4px;\n        border: 1px solid var(--border-input);\n        border-radius: var(--radius-level-4);\n    }\n</style>\n```\n\n```ts ghostty-config/src/routes/+page.ts\n// since there's no dynamic data here, we can prerender\n// it so that it gets served as a static asset in production\nexport const prerender = true;\n```\n\napp/import-export\n```svelte ghostty-config/src/routes/app/import-export/+page.svelte\n<script lang=\"ts\">\n    import Page from \"$lib/views/Page.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n    import {diff, load} from \"$lib/stores/config.svelte\";\n    import parse from \"$lib/utils/parse\";\n\n    let pasteConfigText = $state(\"Clipboard\");\n    let copyConfigText = $state(\"Clipboard\");\n\n\n    // TODO: move alert() to real modals\n    function loadConfig(candidate: string) {\n        let parsed;\n        try {\n            parsed = parse(candidate);\n        }\n        catch (parseError) {\n            // eslint-disable-next-line no-console\n            console.error(parseError);\n            alert(\"Something went wrong trying to parse your config. Please open an issue on GitHub!\");\n            return;\n        }\n\n        try {\n            load(parsed);\n        }\n        catch (loadError) {\n            // eslint-disable-next-line no-console\n            console.error(loadError);\n            alert(\"Something went wrong trying to load your parsed config. Please open an issue on GitHub!\");\n            return;\n        }\n    }\n\n    function pasteConfig() {\n        if (pasteConfigText === \"Pasted!\") return;\n        window.navigator.clipboard.readText().then(text => {\n            pasteConfigText = \"Pasted!\";\n            setTimeout(() => (pasteConfigText = \"Clipboard\"), 3000);\n            loadConfig(text);\n        });\n    }\n\n    let filePicker: HTMLInputElement;\n    function openFilePicker() {\n        filePicker.click();\n    }\n\n    function selectFile() {\n        const file = filePicker.files![0];\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", (event) => {\n            const loadedText = event.target?.result?.toString();\n            if (loadedText) loadConfig(loadedText);\n        });\n        reader.readAsText(file);\n    }\n\n    // Move to module\n    function stringifyConfig() {\n        const config = diff();\n        const lines = [\"# Config generated by Ghostty Config\\n\"];\n        for (const key in config) {\n            if (!Array.isArray(config[key])) {\n                lines.push(`${key} = ${config[key]}`);\n            }\n            else {\n                for (let i = 0; i < config[key].length; i++) {\n                    lines.push(`${key} = ${config[key][i]}`);\n                }\n            }\n        }\n\n        return lines.join(\"\\n\");\n    }\n\n    function copyConfig() {\n        if (copyConfigText === \"Copied!\") return;\n        const config = stringifyConfig();\n        window.navigator.clipboard.writeText(config).then(() => {\n            copyConfigText = \"Copied!\";\n            setTimeout(() => (copyConfigText = \"Clipboard\"), 3000);\n        });\n    }\n\n    function downloadConfig() {\n        const file = new File([stringifyConfig()], \"config\", {type: \"text/plain\"});\n        const link = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        link.href = url;\n        link.download = file.name;\n        link.style.display = \"none\";\n        document.body.append(link);\n        link.click();\n        link.remove();\n        URL.revokeObjectURL(url);\n    }\n</script>\n\n<Page title=\"Import & Export\">\n    <Group flex={1}>\n        <div class=\"preview\">\n            <div class=\"row p2\"># You can preview the config here</div>\n            <div class=\"row\">&nbsp;</div>\n\n            {#each Object.entries(diff()) as [key, value], i (i)}\n                {#if Array.isArray(value)}\n                    {#each value as val, v (v)}\n                    <div class=\"row\"><span class=\"p4\">{key}</span> = <span class=\"p5\">{val}</span></div>\n                    {/each}\n                {:else}\n                    <div class=\"row\"><span class=\"p4\">{key}</span> = <span class=\"p5\">{value}</span></div>\n                {/if}\n            {/each}\n        </div>\n        <Separator />\n        <Item name=\"Import\">\n            <div class=\"button-group\">\n                <button type=\"button\" onclick={pasteConfig} title=\"Paste\">{pasteConfigText}</button>\n                <input id=\"config-input\" type=\"file\" onchange={selectFile} bind:this={filePicker} />\n                <button type=\"button\" onclick={openFilePicker} title=\"Upload\">File...</button>\n            </div>\n        </Item>\n        <Separator />\n        <Item name=\"Export\">\n            <div class=\"button-group\">\n                <button type=\"button\" onclick={copyConfig} title=\"Copy\">{copyConfigText}</button>\n                <button type=\"button\" onclick={downloadConfig} title=\"Download\">File...</button>\n            </div>\n        </Item>\n    </Group>\n</Page>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    min-height: 200px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n    flex: 1;\n    user-select: text;\n}\n\n.preview .row {\n    display: flex;\n    white-space: pre;\n    flex: 1;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n\n/* .bold {font-weight: 700;} */\n\n/* .fg {color: var(--config-fg);} */\n\n/* .p0 {color: var(--config-palette-0);} */\n/* .p1 {color: var(--config-palette-1);} */\n.p2 {color: var(--config-palette-2);}\n/* .p3 {color: var(--config-palette-3);} */\n.p4 {color: var(--config-palette-4);}\n.p5 {color: var(--config-palette-5);}\n/* .p6 {color: var(--config-palette-6);}\n.p7 {color: var(--config-palette-7);}\n.p8 {color: var(--config-palette-8);}\n.p9 {color: var(--config-palette-9);}\n.p10 {color: var(--config-palette-10);}\n.p11 {color: var(--config-palette-11);}\n.p12 {color: var(--config-palette-12);} */\n/* .p13 {color: var(--config-palette-13);}\n.p14 {color: var(--config-palette-14);}\n.p15 {color: var(--config-palette-15);} */\n\n\n#config-input {\n    display: none;\n}\n\n.button-group {\n    display: flex;\n    gap: 12px;\n}\n\n/* TODO: extract to a separate component for usage elsewhere */\nbutton {\n    background: var(--bg-basic-button);\n    border-radius: var(--radius-level-4);\n    border: 0;\n    color: inherit;\n    padding: 2px 10px;\n    font-size: 1.1rem;\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0.5);\n}\n\nbutton:active {\n    filter: brightness(115%);\n}\n</style>\n```\n\nsettings\n[category]\n```svelte ghostty-config/src/routes/settings/[category]/+page.svelte\n<script lang=\"ts\">\n    import {onMount} from \"svelte\";\n\n    import Page from \"$lib/views/Page.svelte\";\n\n    import {page} from \"$app/stores\";\n    import Switch from \"$lib/components/settings/Switch.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n\n    import settings from \"$lib/data/settings\";\n    import config from \"$lib/stores/config.svelte\";\n    import Text from \"$lib/components/settings/Text.svelte\";\n    import Number from \"$lib/components/settings/Number.svelte\";\n    import Dropdown from \"$lib/components/settings/Dropdown.svelte\";\n    import Color from \"$lib/components/settings/Color.svelte\";\n    import Palette from \"$lib/components/settings/Palette.svelte\";\n    import FontPreview from \"$lib/views/FontPreview.svelte\";\n    import BaseColorPreview from \"$lib/views/BaseColorPreview.svelte\";\n    import CursorPreview from \"$lib/views/CursorPreview.svelte\";\n    import PalettePreview from \"$lib/views/PalettePreview.svelte\";\n    import Admonition from \"$lib/components/Admonition.svelte\";\n\n\n    const category = $derived(settings.find(c => c.id === $page.params.category));\n    const title = $derived(category?.name ?? $page.params.category);\n\n    interface ThemeAppliedEvent extends CustomEvent {\n        detail: { theme: string };\n    }\n\n    onMount(() => {\n        const handleThemeApplied = (event: ThemeAppliedEvent) => {\n            // eslint-disable-next-line no-console\n            console.log(\"Theme applied:\", event.detail.theme);\n        };\n\n        window.addEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n\n        return () => {\n            window.removeEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n        };\n    });\n</script>\n\n\n<Page {title}>\n    {#if category}\n        {#if category.id === \"fonts\"}\n            <FontPreview />\n        {:else if category.id === \"colors\"}\n            <Admonition size=\"1.5rem\">You can reset a color to its default value by right clicking!</Admonition>\n        {/if}\n        {#each category.groups as group (group.id)}\n            <Group title={group.name} note={group.note}>\n                {#if category.id === \"colors\" && group.id === \"base\"}\n                    <BaseColorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"cursor\"}\n                    <CursorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"palette\"}\n                    <PalettePreview />\n                    <Separator />\n                {/if}\n                {#each group.settings as setting, i (setting.id)}\n                    {#if i !== 0}<Separator />{/if}\n                    <Item name={setting.name} note={setting.note}>\n                        {#if setting.type === \"switch\"}\n                            <Switch bind:checked={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"text\"}\n                            <Text bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"number\"}\n                            <Number bind:value={config[setting.id as keyof typeof config]} range={setting.range} min={setting.min} max={setting.max} step={setting.step} size={setting.size} />\n                        {:else if setting.type === \"dropdown\"}\n                            <Dropdown bind:value={config[setting.id as keyof typeof config]} options={setting.options} />\n                        {:else if setting.type === \"color\"}\n                            <Color defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"palette\"}\n                            <Palette defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {/if}\n                    </Item>\n                {/each}\n            </Group>\n        {/each}\n    {:else}\n        <h1>What Happened?</h1>\n        <p>You shouldn't be here! If you followed a link, please report the bug on GitHub. Otherwise, go ahead and start browsing on the left.</p>\n    {/if}\n</Page>\n```\n\nkeybinds\n```svelte ghostty-config/src/routes/settings/keybinds/+page.svelte\n<script lang=\"ts\">\n    import Page from \"$lib/views/Page.svelte\";\n    import config from \"$lib/stores/config.svelte\";\n    import Keybinds from \"$lib/components/settings/Keybinds.svelte\";\n</script>\n\n<Page title=\"Keybinds\">\n    <Keybinds bind:value={config.keybind} />\n</Page>\n```\n\n\n\n\n\n```svelte ghostty-config/src/lib/components/settings/Color.svelte\n<script lang=\"ts\">\n    import {fade, fly} from \"svelte/transition\";\n    import {luminosity, isDark, type HexColor} from \"$lib/utils/colors\";\n    import ColorPicker from \"$lib/components/ColorPicker.svelte\";\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), size = 20, label = \"\", defaultValue}: {value: HexColor, size?: number, label?: string, defaultValue?: HexColor} = $props();\n    const borderColor = $derived(`rgba(255, 255, 255, ${luminosity(value) * 0.0027451 + 0.3})`);\n    const labelColor = $derived(isDark(value) ? `var(--font-color)` : \"black\");\n    let popoutOpen = $state(false);\n\n    function click(event: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n        popoutOpen = !popoutOpen;\n    }\n\n    function reset(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (defaultValue !== undefined) value = defaultValue;\n    }\n\n    function keydown(event: KeyboardEvent) {\n        if (!popoutOpen) return;\n        if (event.key === \"Escape\") click(event);\n    }\n</script>\n\n\n<svelte:document onkeydown={keydown} />\n\n<div class=\"color-wrap\" style:width=\"{size}px\" style:height=\"{size}px\" style:background-color={value} style:border-color={borderColor}>\n    {#if label}<span class=\"label\" style:color={labelColor}>{label}</span>{/if}\n    <input type=\"color\" bind:value style:width=\"{size}px\" style:height=\"{size}px\" onclick={click} oncontextmenu={reset} />\n</div>\n\n{#if popoutOpen}\n<div class=\"shadow\" onclick={click} transition:fade={{duration: 200}} role=\"none\"></div>\n<div class=\"picker-container\" transition:fly={{y: 32, duration: 200}}>\n    <ColorPicker bind:value />\n    <button class=\"close\" onclick={click} type=\"button\" title=\"Close\"><span>×</span></button>\n</div>\n{/if}\n\n\n<style>\n/* .color-wrap-container {\n    position: relative;\n} */\n.shadow {\n    background: rgba(0, 0, 0, 0.3);\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    z-index: 1;\n}\n\n.picker-container {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n}\n.picker-container .close {\n    background: var(--color-danger);\n    color: white;\n    position: absolute;\n    top: -4px;\n    right: -4px;\n    border-radius: 50%;\n    height: 16px;\n    width: 16px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.1rem;\n    padding: 0;\n    cursor: pointer;\n    border: 0;\n    outline: 0;\n}\n\n.picker-container .close span {\n    margin-top: -1.5px;\n}\n\n.color-wrap {\n    position: relative;\n    display: flex;\n    border-radius: 50%;\n    width: 20px;\n    height: 20px;\n    outline: none;\n    overflow: hidden;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    /* box-shadow: 0 0 1px 0px rgba(255, 255, 255, 0.5) inset; */\n    box-shadow: 0 0 3px 0px black;\n    justify-content: center;\n    align-items: center;\n}\n\ninput {\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    width: 20px;\n    height: 20px;\n    border: 0;\n    padding: 0;\n    outline: none;\n    box-shadow: none;\n    opacity: 0;\n}\n\ninput:focus {\n    outline: var(--border-input-focus);\n}\n\n.label {\n    /* text-shadow: 0 0 5px black; */\n    font-weight: 600;\n}\n</style>\n```\n\n\n```svelte ghostty-config/src/lib/components/settings/Dropdown.svelte\n<script lang=\"ts\">\n    type Props = {\n        value: string;\n        options: (string | {name: string, value: string})[]\n    };\n\n    // eslint-disable-next-line prefer-const\n    let {value = $bindable(), options}: Props = $props();\n</script>\n\n<select bind:value>\n    {#each options as option, i (i)}\n        {#if typeof(option) === \"string\"}\n            <option value={option}>{option}</option>\n        {:else}\n            <option value={option.value}>{option.name}</option>\n        {/if}\n    {/each}\n</select>\n\n<style>\nselect {\n    background: var(--bg-level-2);\n    border: 0px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    outline: none;\n    color: inherit;\n    text-align: right;\n    max-width: 175px;\n}\n\nselect:focus {\n    background: var(--bg-input-focus);\n    outline: var(--border-input-focus);\n}\n</style>\n```\n\n\n```svelte ghostty-config/src/lib/components/settings/Palette.svelte\n<script lang=\"ts\">\n    import type {HexColor} from \"$lib/utils/colors\";\n    import Color from \"./Color.svelte\";\n\n\n    const {value = $bindable([]), defaultValue}: {value: HexColor[], defaultValue: HexColor[]} = $props();\n</script>\n\n<div class=\"grid-container\">\n    <div class=\"color-grid\">\n        {#each value as _, i (i)}\n            <Color defaultValue={defaultValue[i]} bind:value={value[i]} size={40} label={(i + 1).toString()} />\n        {/each}\n    </div>\n</div>\n\n<style>\n.grid-container {\n    display: flex;\n    align-items: center;\n    flex: 1;\n}\n.color-grid {\n    display: grid;\n    /* width: 100%; */\n    flex: 1;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(32, 1fr);\n    /* grid-column-gap: 30px; */\n    justify-content: space-around;\n    justify-items: center;\n\n    /* align-items: center; */\n    /* align-content: space-evenly; */\n    grid-row-gap: 14px;\n    margin-bottom: 12px;\n}\n</style>\n```\n\n\n```svelte ghostty-config/src/lib/components/ColorPicker.svelte\n<script lang=\"ts\">\n    import {hexToRgb, hsvToRgb, rgbToHex, rgbToHsv, luminosity, type HexColor} from \"$lib/utils/colors\";\n\n\n    // eslint-disable-next-line prefer-const\n    let {defaultValue = \"#408080\", value = $bindable(defaultValue)}: {defaultValue?: HexColor, value?: HexColor|\"\"} = $props();\n\n    let {hue, saturation, value: brightness} = $state(rgbToHsv(...hexToRgb(value || defaultValue)));\n    const [red, green, blue] = $derived.by(() => hsvToRgb(hue, saturation, brightness));\n    const hueField = $derived(`rgb(${hsvToRgb(hue, 1, 1).join(\", \")})`);\n    const csgTop = $derived((1 - brightness) * 100);\n    const csgLeft = $derived(saturation * 100);\n    const hgLeft = $derived(hue * 100);\n    const hexValue = $derived(rgbToHex(...hsvToRgb(hue, saturation, brightness)));\n    const borderColor = $derived(`rgba(255, 255, 255, ${luminosity(value || defaultValue) * 0.0027451 + 0.3})`);\n    const isEmpty = $derived(value === \"\");\n\n    let tracked: HTMLDivElement|null;\n\n    function moveGrabber(event: MouseEvent) {\n        if (!tracked) return;\n\n        const mouseX = event.clientX;\n        const mouseY = event.clientY;\n        const trackedPos = tracked.getBoundingClientRect();\n\n        let xPercentage = (mouseX - trackedPos.x) / trackedPos.width * 100;\n        let yPercentage = (mouseY - trackedPos.y) / trackedPos.height * 100;\n\n        if (xPercentage > 100) xPercentage = 100;\n        if (xPercentage < 0) xPercentage = 0;\n        if (yPercentage > 100) yPercentage = 100;\n        if (yPercentage < 0) yPercentage = 0;\n\n        if (tracked.id === \"colorspace\") {\n            saturation = xPercentage / 100;\n            brightness = 1 - yPercentage / 100;\n        }\n        else if (tracked.id === \"huespace\") {\n            hue = xPercentage / 100;\n        }\n\n        // Update the customColor which should be bound for change\n        value = hexValue;\n    }\n\n    function mouseMove(event: MouseEvent) {\n        if (!tracked) return;\n        moveGrabber(event);\n    }\n\n    function mouseDown(event: MouseEvent) {\n        tracked = event.currentTarget as HTMLDivElement;\n        moveGrabber(event);\n    }\n</script>\n\n<svelte:document onmouseup={() => tracked = null} onmousemove={mouseMove} />\n\n<div class=\"picker-container\">\n    <div id=\"colorspace\" style:background={hueField} onmousedown={mouseDown} role=\"slider\" aria-valuenow={saturation} tabindex=\"0\">\n        <div class=\"colorspace-grabber\" style:top={csgTop + \"%\"} style:left={csgLeft + \"%\"}></div>\n    </div>\n\n    <div id=\"huespace\" onmousedown={mouseDown} role=\"slider\" aria-valuenow={hue} tabindex=\"0\">\n        <div class=\"huespace-grabber\" style:left={hgLeft + \"%\"}></div>\n    </div>\n\n    <div class=\"color-info\">\n        <div class=\"info-split\">\n            <div class=\"color-picked\" class:empty={isEmpty} style:background=\"rgb({red}, {green}, {blue})\" style:border-color={borderColor}></div>\n\n            <div class=\"color-values\">\n                <div class=\"hex-value\">{isEmpty ? \"-\" : hexValue}</div>\n\n                <div class=\"rgb-values\">\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : red}</div>\n                        <div>R</div>\n                    </div>\n\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : green}</div>\n                        <div>G</div>\n                    </div>\n\n                    <div class=\"rgb-value\">\n                        <div class=\"value\">{isEmpty ? \"-\" : blue}</div>\n                        <div>B</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<style>\n.picker-container {\n    position: relative;\n    background: var(--bg-modal);\n    border: 1px solid black;\n    box-shadow: 0 0 20px -1px rgba(0,0,0,0.7);\n    padding: 12px;\n    border-radius: var(--radius-level-2);\n    overflow: hidden;\n}\n\n.picker-container::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    box-shadow: 0 0 1px white inset;\n    border-radius: inherit;\n    z-index: 2;\n    pointer-events: none;\n}\n\n#colorspace {\n    width: 240px;\n    height: 160px;\n    position: relative;\n    overflow: hidden;\n    border-radius: var(--radius-level-3);\n    border: 1px solid var(--border-input);\n    box-shadow: 0 0 3px 0px black;\n}\n\n#colorspace::before,\n#colorspace::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n#colorspace::before {\n    background: linear-gradient(to right, rgb(255, 255, 255), rgba(255, 255, 255, 0));\n    z-index: 1;\n}\n\n#colorspace::after {\n    background: linear-gradient(to top, rgb(0, 0, 0), rgba(0, 0, 0, 0));\n    z-index: 2;\n}\n\n.colorspace-grabber {\n    margin: 0;\n    padding: 0;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid black;\n    background: white;\n    position: relative;\n    transform: translate(-50%, -50%);\n    left: 100%;\n    pointer-events: none;\n    z-index: 3;\n}\n\n#huespace {\n    background: linear-gradient(to right, #ff0000 0%, #ffff00 17%, #00ff00 33%, #00ffff 50%, #0000ff 67%, #ff00ff 83%, #ff0000 100%);\n    margin: 15px 10px 10px 10px;\n    border-radius: 10px;\n    height: 10px;\n}\n\n.huespace-grabber {\n    background: white;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid black;\n    transform: translate(-50%, -1px);\n    left: 0%;\n    position: relative;\n    cursor: default;\n    pointer-events: none;\n}\n\n.color-info {\n    display: flex;\n    padding: 10px;\n    /* padding-top: 10px; */\n    width: 100%;\n    position: relative;\n}\n\n.info-split {\n    display: flex;\n    width: 100%;\n    gap: 20px;\n}\n\n.color-picked {\n    display: flex;\n    flex: 1 1 50%;\n    min-height: 100%;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 1);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 1) inset;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    box-shadow: 0 0 3px 0px black;\n}\n\n.color-values {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex: 50%;\n    gap: 12px;\n}\n\n.hex-value {\n    display: flex;\n    justify-content: center;\n    background: var(--bg-input-focus);\n    padding: 2px;\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    width: 100%;\n}\n\n.rgb-values {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n}\n\n.rgb-value {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 6px;\n}\n\n.value {\n    display: flex;\n    justify-content: center;\n    background: var(--bg-input-focus);\n    padding: 2px;\n    border: 1px solid var(--border-input);\n    border-radius: var(--radius-level-5);\n    width: 30px;\n}\n\n\n.color-picked.empty {\n    background: var(--bg-input-focus)!important;\n    border-color: var(--border-input)!important;\n    box-shadow: none!important;\n    background: linear-gradient(to top left,\n             rgba(0,0,0,0) 0%,\n             rgba(0,0,0,0) calc(50% - 1px),\n             var(--color-danger) 50%,\n             rgba(0,0,0,0) calc(50% + 1px),\n             rgba(0,0,0,0) 100%),\n         linear-gradient(to top right,\n             rgba(0,0,0,0) 0%,\n             rgba(0,0,0,0) calc(50% - 1px),\n             var(--color-danger) 50%,\n             rgba(0,0,0,0) calc(50% + 1px),\n             rgba(0,0,0,0) 100%) var(--bg-input-focus)!important;\n    /* opacity: 0; */\n}\n\n/* .empty .hex-value, */\n/* .empty .value {\n    color: transparent;\n} */\n</style>\n```\n\n\n```ts ghostty-config/src/lib/data/settings.ts\nimport config from \"$lib/stores/config.svelte\";\nimport type {HexColor} from \"$lib/utils/colors\";\n\ninterface BaseSettingType {\n    id: string;\n    name: string;\n    note?: string;\n}\n\ninterface Panel extends BaseSettingType {\n    groups: Group[];\n}\n\ninterface Group extends BaseSettingType {\n    settings: (Switch | Text | Number | Dropdown | Color | Palette | Keybinds)[];\n    // type: \"group\";\n}\n\ntype SettingType = \"switch\" | \"number\" | \"dropdown\" | \"text\" | \"color\" | \"palette\" | \"keybinds\";\n\ninterface BaseSettingItem extends BaseSettingType {\n    type: SettingType;\n    value: unknown;\n}\n\ninterface Switch extends BaseSettingItem {\n    type: \"switch\";\n    value: boolean;\n}\n\ninterface Text extends BaseSettingItem {\n    type: \"text\";\n    value: string;\n}\n\ninterface Number extends BaseSettingItem {\n    type: \"number\";\n    value: number;\n    min?: number;\n    max?: number;\n    step?: number;\n    size?: number;\n    range?: boolean;\n}\n\ninterface DropdownOption {\n    name: string;\n    value: string;\n}\n\ninterface Dropdown extends BaseSettingItem {\n    type: \"dropdown\";\n    value: \"string\";\n    options: (DropdownOption | string)[];\n}\n\ninterface Color extends BaseSettingItem {\n    value: HexColor;\n    type: \"color\";\n}\n\ninterface Palette extends BaseSettingItem {\n    value: HexColor[];\n    type: \"palette\";\n}\n\nexport type KeybindString = `${string}=${string}`;\ninterface Keybinds extends BaseSettingItem {\n    value: KeybindString[];\n    type: \"keybinds\";\n}\n\ninterface ThemeResponse {\n  \"type\": string;\n  \"encoding\": string;\n  \"size\": number;\n  \"name\": string;\n  \"path\": string;\n  \"content\": string;\n  \"sha\": string;\n  \"url\": string;\n  \"git_url\": string;\n  \"html_url\": string;\n  \"download_url\": string;\n  \"_links\": {\n    \"git\": string;\n    \"self\": string;\n    \"html\": string;\n  }\n}\n\ninterface ColorScheme {\n  palette: { [key: string]: string };\n  background?: string;\n  foreground?: string;\n  cursorColor?: string;\n  selectionBackground?: string;\n  selectionForeground?: string;\n}\n\nconst fetchThemeFiles = async () => {\n    const apiUrl = \"https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty\";\n\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const themeFiles = await response.json();\n\n    return {themeFiles};\n};\n\n// Function to convert raw string data into a JSON object\nexport const parseColorScheme = (input: string): ColorScheme => {\n  const colorScheme: ColorScheme = {palette: {}};\n\n  // Split input by lines\n  const lines = input.split(\"\\n\");\n\n  lines.forEach((line) => {\n    if (line.startsWith(\"palette\")) {\n      const [, rest] = line.split(\"palette =\").map(part => part.trim());\n\n      if (rest) {\n        const [paletteIndex, color] = rest.split(\"=\");\n        if (paletteIndex && color) {\n          colorScheme.palette[paletteIndex.trim()] = color.trim();\n        }\n      }\n    }\n    else {\n      const [key, value] = line.split(\"=\").map(part => part.trim());\n\n      switch (key) {\n        case \"background\":\n          colorScheme.background = `#${value}`;\n          break;\n        case \"foreground\":\n          colorScheme.foreground = `#${value}`;\n          break;\n        case \"cursor-color\":\n          colorScheme.cursorColor = `#${value}`;\n          break;\n        case \"selection-background\":\n          colorScheme.selectionBackground = `#${value}`;\n          break;\n        case \"selection-foreground\":\n          colorScheme.selectionForeground = `#${value}`;\n          break;\n        default:\n          break;\n      }\n    }\n  });\n\n  return colorScheme;\n};\n\nexport const fetchColorScheme = async (theme: string) => {\n    const apiUrl = `https://api.github.com/repos/mbadolato/iTerm2-Color-Schemes/contents/ghostty${theme ? \"/\" + theme : \"\"}`;\n\n    const response = await fetch(apiUrl,{\n        headers: {\n            Accept: \"application/vnd.github.raw+json\"\n        }\n    });\n\n    if (!response.ok) {\n        throw new Error(`Error fetching data: ${response.statusText}`);\n    }\n\n    const colorSchemeResponse = await response.text();\n\n    return {colorSchemeResponse};\n};\n\nconst {themeFiles} = await fetchThemeFiles();\nconst themeFileNames = themeFiles && themeFiles.map((file: ThemeResponse) => file.name);\n\n// const {colorSchemeResponse} = await fetchColorScheme(config ? config.theme : \"\");\n// const colorScheme = parseColorScheme(colorSchemeResponse);\n\nexport default [\n    {\n        id: \"application\",\n        name: \"Application\",\n        note: \"\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                // type: \"group\",\n                settings: [\n                    {id: \"title\", name: \"Static title for all windows\", type: \"text\", value: \"\"},\n                    {id: \"desktopNotifications\", name: \"Allow desktop notifications\", type: \"switch\", value: true},\n                    {id: \"configFile\", name: \"Additional config file\", type: \"text\", value: \"\"},\n                    {id: \"configDefaultFiles\", name: \"Load default config file\", type: \"switch\", value: true},\n                    {id: \"linkUrl\", name: \"Automatically link URLs\", note: \"Matching occurs while holding the control (Linux) or command (macOS) key.\", type: \"switch\", value: true},\n                ]\n            },\n            {\n                id: \"startup\",\n                name: \"Startup\",\n                // type: \"group\",\n                settings: [\n                    {id: \"command\", name: \"Command to run on launch\", type: \"text\", value: \"\"},\n                    {id: \"fullscreen\", name: \"Launch in fullscreen mode\", type: \"switch\", value: false},\n                    {id: \"initialWindow\", name: \"Show a window on startup\", type: \"switch\", value: true},\n                    {id: \"workingDirectory\", name: \"Directory to use after startup\", note: \"Special values of `home` and `inherit` are also allowed here.\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shutdown\",\n                name: \"Shutdown\",\n                // type: \"group\",\n                settings: [\n                    {id: \"waitAfterCommand\", name: \"Wait for input after command\", type: \"switch\", value: false},\n                    {id: \"abnormalCommandExitRuntime\", name: \"Abnormal command exit runtime\", type: \"number\", value: 250, min: 0, size: 5},\n                    {id: \"confirmCloseSurface\", name: \"Confirm when closing a surface\", type: \"switch\", value: true},\n                    {id: \"quitAfterLastWindowClosed\", name: \"Quit after closing last window\", type: \"switch\", value: false},\n                    {id: \"quitAfterLastWindowClosedDelay\", name: \"Delay before auto quitting\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"shell\",\n                name: \"Shell Integration\",\n                // type: \"group\",\n                settings: [\n                    {id: \"shellIntegration\", name: \"Shell integration style\", type: \"dropdown\", value: \"detect\", options: [\"none\", \"detect\", \"bash\", \"elvish\", \"fish\", \"zsh\"]},\n                    {id: \"shellIntegrationFeatures\", name: \"Shell integration features\", note: \"The current available features are cursor, sudo, and title. Including one force enables it, prefixing it with `no-` force disables it, omitting it falls back to default.\", type: \"text\", value: \"cursor,no-sudo,title\"},\n                    {id: \"term\", name: \"TERM environment variable\", type: \"text\", value: \"xterm-ghostty\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced\",\n                note: \"You should only touch these settings if you know what you're doing, otherwise you could cause major issues with Ghostty!\",\n                // type: \"group\",\n                settings: [\n                    {id: \"scrollbackLimit\", name: \"Scrollback buffer size (bytes)\", note: \"This buffer exists completely in memory but is allocated lazily.\", type: \"number\", value: 10000000, min: 0, size: 10},\n                    {id: \"customShader\", name: \"Custom shader\", note: \"This matches the API of Shadertoy.\", type: \"text\", value: \"\"},\n                    {id: \"customShaderAnimation\", name: \"Allow shaders to animate\", type: \"dropdown\", value: \"false\", options: [\"false\", \"true\", \"always\"]},\n                    {id: \"enquiryResponse\", name: \"Reponse to ENQ\", type: \"text\", value: \"\"},\n                    {id: \"oscColorReportFormat\", name: \"OSC color report format\", type: \"dropdown\", value: \"16-bit\", options: [\"none\", \"8-bit\", \"16-bit\"]},\n                    {id: \"vtKamAllowed\", name: \"VT kam mode allowed\", note: \"If you don't know what this is, don't touch it!\", type: \"switch\", value: false},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"clipboard\",\n        name: \"Clipboard\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"clipboardRead\", name: \"Allow terminal to read clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"clipboardWrite\", name: \"Allow terminal to write clipboard\", type: \"dropdown\", value: \"ask\", options: [\"ask\", \"allow\", \"deny\"]},\n                    {id: \"copyOnSelect\", name: \"Copy on select\", type: \"switch\", value: true},\n                    {id: \"clipboardTrimTrailingSpaces\", name: \"Trim trailing space on copy\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteProtection\", name: \"Confirm when pasting unsafely\", type: \"switch\", value: true},\n                    {id: \"clipboardPasteBracketedSafe\", name: \"Mark bracketed paste as safe\", type: \"switch\", value: true},\n                    {id: \"imageStorageLimit\", name: \"Image buffer limit (bytes)\", type: \"number\", value: 320000000, min: 0, max: 4294967295, size: 12},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"window\",\n        name: \"Window\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"windowVsync\", name: \"Enable vsync\", type: \"switch\", value: true},\n                    {id: \"windowInheritWorkingDirectory\", name: \"Inherit working directory\", type: \"switch\", value: true},\n                    {id: \"windowInheritFontSize\", name: \"Inherit font size\", type: \"switch\", value: true},\n                    {id: \"windowColorspace\", name: \"Window colorspace\", type: \"dropdown\", value: \"srgb\", options: [\"srgb\", \"display-p3\"]},\n                    {id: \"windowSaveState\", name: \"Save window state\", type: \"dropdown\", value: \"default\", options: [\"default\", \"never\", \"always\"]},\n                    // maybe move to application?\n                    {id: \"windowNewTabPosition\", name: \"New tab position\", type: \"dropdown\", value: \"current\", options: [\"current\", \"end\"]},\n                ]\n            },\n            {\n                id: \"appearance\",\n                name: \"Appearance\",\n                settings: [\n                    {id: \"windowTheme\", name: \"Window theme\", type: \"dropdown\", value: \"auto\", options: [\"auto\", \"system\", \"light\", \"dark\"]},\n                    {id: \"windowDecoration\", name: \"Enable native frames\", type: \"switch\", value: true},\n                    {id: \"windowPaddingX\", name: \"Horizontal window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingY\", name: \"Vertical window padding\", type: \"text\", value: \"2\"},\n                    {id: \"windowPaddingBalance\", name: \"Auto-balance window padding\", type: \"switch\", value: false},\n                    {id: \"windowPaddingColor\", name: \"Window padding color\", type: \"dropdown\", value: \"extend\", options: [\"background\", \"extend\", \"extend-always\"]},\n\n                    // maybe move to colors\n                    {id: \"backgroundOpacity\", name: \"Background opacity\", type: \"number\", range: true, value: 1, min: 0, max: 1, step: 0.01},\n                    {id: \"backgroundBlurRadius\", name: \"Background blur radius\", note: \"A value of 20 is reasonable for a good looking blur, going beyond that can cause rendering and performance issues.\", type: \"number\", range: true, value: 0, min: 0, max: 50, step: 1},\n                    {id: \"unfocusedSplitOpacity\", name: \"Unfocused split opacity\", type: \"number\", range: true, value: 0.7, min: 0.15, max: 1, step: 0.01},\n                    {id: \"unfocusedSplitFill\", name: \"Unfocused split fill color\", type: \"color\", value: \"\"},\n                ]\n            },\n            {\n                id: \"resize\",\n                name: \"Sizing & Resizing\",\n                settings: [\n                    {id: \"windowHeight\", name: \"Initial window height\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 4, step: 1, size: 4},\n                    {id: \"windowWidth\", name: \"Initial window width\", note: \"This size is not in pixels but in number of terminal grid cells\", type: \"number\", value: 0, min: 10, step: 1, size: 4},\n                    {id: \"windowStepResize\", name: \"Resize in grid cell increments\", type: \"switch\", value: false},\n                    {id: \"resizeOverlay\", name: \"Show resize overlays\", type: \"dropdown\", value: \"after-first\", options: [\"always\", \"never\", \"after-first\"]},\n                    {id: \"resizeOverlayPosition\", name: \"Resize overlay position\", type: \"dropdown\", value: \"center\", options: [\"center\", \"top-left\", \"top-center\", \"top-right\", \"bottom-left\", \"bottom-center\", \"bottom-right\"]},\n                    {id: \"resizeOverlayDuration\", name: \"Show resize overlay time\", type: \"text\", value: \"750ms\"},\n                ]\n            },\n        ]\n    },\n    {\n        id: \"colors\",\n        name: \"Colors\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"\",\n                settings: [\n                    {\n                        id: \"theme\",\n                        name: \"Color theme\",\n                        note: \"Any colors selected after setting this will overwrite the theme's colors.\",\n                        type: \"dropdown\",\n                        value: \"\",\n                        options: [\"\", ...themeFileNames]\n                    },\n                    {id: \"boldIsBright\", name: \"Bold text uses bright colors\", type: \"switch\", value: false},\n                    {id: \"minimumContrast\", name: \"Minimum contrast\", type: \"number\", value: 1, range: true, min: 1, max: 21, step: 0.1},\n                ]\n            },\n            {\n                id: \"base\",\n                name: \"Base Colors\",\n                note: \"The preview here shows selected text in the second line of the command output.\",\n                settings: [\n                    {id: \"background\", name: \"Background color\", type: \"color\", value: \"#282c34\"},\n                    {id: \"foreground\", name: \"Foreground color\", type: \"color\", value: \"#ffffff\"},\n                    {id: \"selectionBackground\", name: \"Selection background color\", type: \"color\", value: \"\"},\n                    {id: \"selectionForeground\", name: \"Selection foreground color\", type: \"color\", value: \"\"},\n                    {id: \"selectionInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause selections to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                ]\n            },\n            {\n                id: \"cursor\",\n                name: \"Cursor\",\n                note: \"The cursor in this preview blinks on and off at 1 second intervals for emphasis, it may not match what you see in Ghostty!\",\n                settings: [\n                    {id: \"cursorColor\", name: \"Cursor color\", type: \"color\", value: \"\"},\n                    {id: \"cursorText\", name: \"Text color under cursor\", type: \"color\", value: \"\"},\n                    {id: \"cursorInvertFgBg\", name: \"Invert selection colors\", note: \"Enabling this will cause cells under the cursor to be the inverse of their current colors. This ignores the two selection colors above.\", type: \"switch\", value: false},\n                    {id: \"cursorOpacity\", name: \"Cursor opacity\", type: \"number\", value: 1, range: true, min: 0, max: 1, step: 0.05},\n                    {id: \"cursorStyle\", name: \"Cursor style\", type: \"dropdown\", value: \"block\", options: [\"block\", \"bar\", \"underline\", {value: \"block_hollow\", name: \"hollow block\"}]},\n                    {id: \"cursorStyleBlink\", name: \"Cursor blink style\", note: \"The `default` option defers to DEC mode 12 to determine blinking state.\", type: \"dropdown\", value: \"\", options: [\"true\", \"false\", {value: \"\", name: \"default\"}]},\n                ]\n            },\n            {\n                id: \"palette\",\n                name: \"Color Palette\",\n                note: \"The first 16 colors are the most commonly displayed colors in the terminal.\\n\\nColors 1-8 are typically black, red, green, yellow, blue, magenta, cyan, and white.\\nColors 9-16 are typically \\\"brighter\\\" variants of these colors.\",\n                settings: [\n                    {id: \"palette\", name: \"\", type: \"palette\", value: [\"#1d1f21\",\"#cc6666\",\"#b5bd68\",\"#f0c674\",\"#81a2be\",\"#b294bb\",\"#8abeb7\",\"#c5c8c6\",\"#666666\",\"#d54e53\",\"#b9ca4a\",\"#e7c547\",\"#7aa6da\",\"#c397d8\",\"#70c0b1\",\"#eaeaea\",\"#000000\",\"#00005f\",\"#000087\",\"#0000af\",\"#0000d7\",\"#0000ff\",\"#005f00\",\"#005f5f\",\"#005f87\",\"#005faf\",\"#005fd7\",\"#005fff\",\"#008700\",\"#00875f\",\"#008787\",\"#0087af\",\"#0087d7\",\"#0087ff\",\"#00af00\",\"#00af5f\",\"#00af87\",\"#00afaf\",\"#00afd7\",\"#00afff\",\"#00d700\",\"#00d75f\",\"#00d787\",\"#00d7af\",\"#00d7d7\",\"#00d7ff\",\"#00ff00\",\"#00ff5f\",\"#00ff87\",\"#00ffaf\",\"#00ffd7\",\"#00ffff\",\"#5f0000\",\"#5f005f\",\"#5f0087\",\"#5f00af\",\"#5f00d7\",\"#5f00ff\",\"#5f5f00\",\"#5f5f5f\",\"#5f5f87\",\"#5f5faf\",\"#5f5fd7\",\"#5f5fff\",\"#5f8700\",\"#5f875f\",\"#5f8787\",\"#5f87af\",\"#5f87d7\",\"#5f87ff\",\"#5faf00\",\"#5faf5f\",\"#5faf87\",\"#5fafaf\",\"#5fafd7\",\"#5fafff\",\"#5fd700\",\"#5fd75f\",\"#5fd787\",\"#5fd7af\",\"#5fd7d7\",\"#5fd7ff\",\"#5fff00\",\"#5fff5f\",\"#5fff87\",\"#5fffaf\",\"#5fffd7\",\"#5fffff\",\"#870000\",\"#87005f\",\"#870087\",\"#8700af\",\"#8700d7\",\"#8700ff\",\"#875f00\",\"#875f5f\",\"#875f87\",\"#875faf\",\"#875fd7\",\"#875fff\",\"#878700\",\"#87875f\",\"#878787\",\"#8787af\",\"#8787d7\",\"#8787ff\",\"#87af00\",\"#87af5f\",\"#87af87\",\"#87afaf\",\"#87afd7\",\"#87afff\",\"#87d700\",\"#87d75f\",\"#87d787\",\"#87d7af\",\"#87d7d7\",\"#87d7ff\",\"#87ff00\",\"#87ff5f\",\"#87ff87\",\"#87ffaf\",\"#87ffd7\",\"#87ffff\",\"#af0000\",\"#af005f\",\"#af0087\",\"#af00af\",\"#af00d7\",\"#af00ff\",\"#af5f00\",\"#af5f5f\",\"#af5f87\",\"#af5faf\",\"#af5fd7\",\"#af5fff\",\"#af8700\",\"#af875f\",\"#af8787\",\"#af87af\",\"#af87d7\",\"#af87ff\",\"#afaf00\",\"#afaf5f\",\"#afaf87\",\"#afafaf\",\"#afafd7\",\"#afafff\",\"#afd700\",\"#afd75f\",\"#afd787\",\"#afd7af\",\"#afd7d7\",\"#afd7ff\",\"#afff00\",\"#afff5f\",\"#afff87\",\"#afffaf\",\"#afffd7\",\"#afffff\",\"#d70000\",\"#d7005f\",\"#d70087\",\"#d700af\",\"#d700d7\",\"#d700ff\",\"#d75f00\",\"#d75f5f\",\"#d75f87\",\"#d75faf\",\"#d75fd7\",\"#d75fff\",\"#d78700\",\"#d7875f\",\"#d78787\",\"#d787af\",\"#d787d7\",\"#d787ff\",\"#d7af00\",\"#d7af5f\",\"#d7af87\",\"#d7afaf\",\"#d7afd7\",\"#d7afff\",\"#d7d700\",\"#d7d75f\",\"#d7d787\",\"#d7d7af\",\"#d7d7d7\",\"#d7d7ff\",\"#d7ff00\",\"#d7ff5f\",\"#d7ff87\",\"#d7ffaf\",\"#d7ffd7\",\"#d7ffff\",\"#ff0000\",\"#ff005f\",\"#ff0087\",\"#ff00af\",\"#ff00d7\",\"#ff00ff\",\"#ff5f00\",\"#ff5f5f\",\"#ff5f87\",\"#ff5faf\",\"#ff5fd7\",\"#ff5fff\",\"#ff8700\",\"#ff875f\",\"#ff8787\",\"#ff87af\",\"#ff87d7\",\"#ff87ff\",\"#ffaf00\",\"#ffaf5f\",\"#ffaf87\",\"#ffafaf\",\"#ffafd7\",\"#ffafff\",\"#ffd700\",\"#ffd75f\",\"#ffd787\",\"#ffd7af\",\"#ffd7d7\",\"#ffd7ff\",\"#ffff00\",\"#ffff5f\",\"#ffff87\",\"#ffffaf\",\"#ffffd7\",\"#ffffff\",\"#080808\",\"#121212\",\"#1c1c1c\",\"#262626\",\"#303030\",\"#3a3a3a\",\"#444444\",\"#4e4e4e\",\"#585858\",\"#626262\",\"#6c6c6c\",\"#767676\",\"#808080\",\"#8a8a8a\",\"#949494\",\"#9e9e9e\",\"#a8a8a8\",\"#b2b2b2\",\"#bcbcbc\",\"#c6c6c6\",\"#d0d0d0\",\"#dadada\",\"#e4e4e4\",\"#eeeeee\"]},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"fonts\",\n        name: \"Fonts\",\n        groups: [\n            {\n                id: \"general\",\n                name: \"General Font Settings\",\n                settings: [\n                    {id: \"fontSize\", name: \"Base font size\", type: \"number\", value: 13, min: 4, max: 60, step: 0.5, range: true},\n                    {id: \"fontThicken\", name: \"Thicken fonts\", type: \"switch\", note: \"This currently only affects macOS.\", value: false},\n                    {id: \"fontFeature\", name: \"Font ligature settings\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"family\",\n                name: \"Font Families\",\n                settings: [\n                    {id: \"fontFamily\", name: \"Main font family\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBold\", name: \"Font family for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyItalic\", name: \"Font family for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontFamilyBoldItalic\", name: \"Font family for bold italic text\", type: \"text\", value: \"\"},\n                    {id: \"windowTitleFontFamily\", name: \"Window title font family\", note: \"This is currently only supported on macOS\", type: \"text\", value: \"\"},\n                    {id: \"fontCodepointMap\", name: \"Unicode-specifc font mapping\", note: \"\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"styles\",\n                name: \"Font Styles\",\n                note: \"Named font styles for the fields above. For example for `Ioveska Heavy` you would use a style of `Heavy`. Alternately you can set the style to `false` to completely disable the style and revert to default style.\",\n                settings: [\n                    {id: \"fontStyle\", name: \"Main font style\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBold\", name: \"Font style for bold text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleItalic\", name: \"Font style for italic text\", type: \"text\", value: \"default\"},\n                    {id: \"fontStyleBoldItalic\", name: \"Font style for bold italic text\", type: \"text\", value: \"default\"},\n                ]\n            },\n            {\n                id: \"variations\",\n                name: \"Font Variations\",\n                note: \"Variable font specific settings, please only touch this if you know what you're doing!\",\n                settings: [\n                    {id: \"fontVariation\", name: \"Main font variant\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBold\", name: \"Font variant for bold text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationItalic\", name: \"Font variant for italic text\", type: \"text\", value: \"\"},\n                    {id: \"fontVariationBoldItalic\", name: \"Font variant for bold italic text\", type: \"text\", value: \"\"},\n                ]\n            },\n            {\n                id: \"advanced\",\n                name: \"Advanced Font & Cell Settings\",\n                note: \"The settings below have very little validation in Ghostty and can cause your terminal to become unusable. Be careful messing with any of these.\",\n                settings: [\n                    {id: \"adjustCellWidth\", name: \"Cell width adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCellHeight\", name: \"Cell height adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustFontBaseline\", name: \"Font baseline adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlinePosition\", name: \"Underline position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustUnderlineThickness\", name: \"Underline thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughPosition\", name: \"Strikethrough position adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustStrikethroughThickness\", name: \"Strikethrough thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"adjustCursorThickness\", name: \"Cursor thickness adjustment\", type: \"text\", value: \"\"},\n                    {id: \"graphemeWidthMethod\", name: \"Grapheme width calculation method\", type: \"dropdown\", value: \"unicode\", options: [\"unicode\", \"legacy\"]},\n                ]\n            },\n\n        ]\n    },\n    {\n        id: \"keybinds\",\n        name: \"Keybinds\",\n        groups: [\n            {\n                id: \"keybinds\",\n                name: \"\",\n                settings: [\n                    {id: \"keybind\", name: \"\", type: \"keybinds\", value: [\"super+page_up=scroll_page_up\", \"super+physical:four=goto_tab:4\", \"super+shift+down=jump_to_prompt:1\", \"super+shift+w=close_window\", \"super+shift+left_bracket=previous_tab\", \"super+alt+i=inspector:toggle\", \"super+w=close_surface\", \"super+physical:eight=goto_tab:8\", \"super+alt+right=goto_split:right\", \"shift+up=adjust_selection:up\", \"super+enter=toggle_fullscreen\", \"super+t=new_tab\", \"super+c=copy_to_clipboard\", \"super+shift+right_bracket=next_tab\", \"super+physical:one=goto_tab:1\", \"shift+left=adjust_selection:left\", \"super+equal=increase_font_size:1\", \"shift+page_up=adjust_selection:page_up\", \"super+physical:three=goto_tab:3\", \"super+d=new_split:right\", \"super+ctrl+down=resize_split:down,10\", \"shift+end=adjust_selection:end\", \"super+plus=increase_font_size:1\", \"super+q=quit\", \"super+home=scroll_to_top\", \"super+ctrl+left=resize_split:left,10\", \"super+ctrl+up=resize_split:up,10\", \"super+shift+up=jump_to_prompt:-1\", \"shift+right=adjust_selection:right\", \"super+comma=open_config\", \"super+shift+comma=reload_config\", \"super+minus=decrease_font_size:1\", \"shift+page_down=adjust_selection:page_down\", \"super+a=select_all\", \"alt+shift+equal=equalize_splits\", \"super+shift+enter=toggle_split_zoom\", \"super+alt+down=goto_split:bottom\", \"super+ctrl+f=toggle_fullscreen\", \"super+ctrl+right=resize_split:right,10\", \"super+alt+shift+j=write_scrollback_file:open\", \"shift+down=adjust_selection:down\", \"super+n=new_window\", \"super+alt+left=goto_split:left\", \"super+page_down=scroll_page_down\", \"super+alt+shift+w=close_all_windows\", \"super+alt+up=goto_split:top\", \"super+left_bracket=goto_split:previous\", \"super+physical:nine=goto_tab:9\", \"super+right_bracket=goto_split:next\", \"super+end=scroll_to_bottom\", \"super+shift+j=write_scrollback_file:paste\", \"super+shift+d=new_split:down\", \"super+zero=reset_font_size\", \"super+physical:five=goto_tab:5\", \"shift+home=adjust_selection:home\", \"super+physical:seven=goto_tab:7\", \"super+k=clear_screen\", \"super+physical:two=goto_tab:2\", \"super+physical:six=goto_tab:6\", \"super+v=paste_from_clipboard\"]}\n                ]\n            }\n        ]\n    },\n    {\n        id: \"mouse\",\n        name: \"Mouse\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"cursorClickToMove\", name: \"Enable click to move cursor\", type: \"switch\", value: true},\n                    {id: \"mouseHideWhileTyping\", name: \"Hide mouse while typing\", type: \"switch\", value: false},\n                    {id: \"mouseShiftCapture\", name: \"Allow shift with mouse click\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"always\", \"never\"]},\n                    // Technically the values should be min: 0.01, max: 10000, step: 0.01 but those are insane so instead I'll use sane defaults\n                    {id: \"mouseScrollMultiplier\", name: \"Mouse scroll multiplier\", type: \"number\", range: true, value: 1, min: 0.1, max: 10, step: 0.1},\n                    {id: \"focusFollowsMouse\", name: \"Focus splits on mouse move\", type: \"switch\", value: false},\n                    {id: \"clickRepeatInterval\", name: \"Milliseconds between multi-click\", note: \"A value of 0 means to use the operating system's default timing.\", type: \"number\", value: 0, min: 0, size: 4},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"gtk\",\n        name: \"GTK\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"class\", name: \"WM_CLASS class field\", note: \"This defaults to `com.mitchellh.ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"x11InstanceName\", name: \"WM_CLASS instance name\", note: \"This defaults to `ghostty`\", type: \"text\", value: \"\"},\n                    {id: \"gtkSingleInstance\", name: \"Single-instance mode\", type: \"dropdown\", value: \"desktop\", options: [{name: \"detect\", value: \"desktop\"}, \"true\", \"false\"]},\n                    {id: \"gtkTitlebar\", name: \"Show titlebar\", type: \"switch\", value: true},\n                    {id: \"gtkTabsLocation\", name: \"Tab location\", type: \"dropdown\", value: \"top\", options: [\"top\", \"right\", \"bottom\", \"left\"]},\n                    {id: \"gtkWideTabs\", name: \"Use wide tabs\", type: \"switch\", value: true},\n                    {id: \"gtkAdwaita\", name: \"Enable adwaita theme support\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"linux\",\n        name: \"Linux\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"linuxCgroup\", name: \"Use dedicated cgroups\", type: \"dropdown\", value: \"single-instance\", options: [\"single-instance\", \"always\", \"never\"]},\n                    {id: \"linuxCgroupMemoryLimit\", name: \"Memory limit (bytes)\", type: \"number\", min: 0, max: 4294967295, size: 12},\n                    {id: \"linuxCgroupProcessLimit\", name: \"Max number of processes\", type: \"number\", min: 0, size: 5},\n                    {id: \"linuxCgroupHardFail\", name: \"Hard fail on startup\", type: \"switch\", value: false},\n                ]\n            }\n        ]\n    },\n    {\n        id: \"macos\",\n        name: \"macOS\",\n        groups: [\n            {\n                id: \"main\",\n                name: \"\",\n                settings: [\n                    {id: \"macosNonNativeFullscreen\", name: \"Use non-native fullscreen\", note: \"Tabs currently do not work with non-native fullscreen windows\", type: \"dropdown\", value: \"false\", options: [\"visible-menu\", \"true\", \"false\"]},\n                    {id: \"macosTitlebarStyle\", name: \"Titlebar style\", type: \"dropdown\", value: \"transparent\", options: [\"transparent\", \"native\", \"tabs\"]},\n                    {id: \"macosOptionAsAlt\", name: \"Use option key as alt key\", type: \"dropdown\", value: \"false\", options: [\"true\", \"false\", \"left\", \"right\"]},\n                    {id: \"macosWindowShadow\", name: \"Show the window shadow\", type: \"switch\", value: true},\n                ]\n            }\n        ]\n    },\n] as Panel[];\n```\n```typescript\nimport config from \"$lib/stores/config.svelte\";\n// error: 'config' is defined but never used. Allowed unused vars must match /^_/u.\nimport type {HexColor} from \"$lib/utils/colors\";\n\n```\n\n\n```ts ghostty-config/src/lib/stores/config.svelte.ts\nimport {dev} from \"$app/environment\";\nimport settings, {type KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"$lib/utils/colors\";\nimport themeHandler from \"$lib/utils/themeHandler\";\n// import defs from \"../data/defaults.json\";\n\n// TODO: find a good way to properly type the config\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaults: Partial<Record<keyof DefaultConfig, any>> = {};\n\nfor (const panel of settings) {\n    for (const group of panel.groups) {\n        for (const setting of group.settings) {\n            defaults[setting.id as keyof typeof defaults] = setting.value;\n        }\n    }\n}\n\nif (dev) {\n    // eslint-disable-next-line no-console\n    console.log(defaults);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst config = $state(Object.assign({}, defaults)) as Record<keyof DefaultConfig, any>;\n\n\nexport function keyToConfig(key: string) {\n    return key.replaceAll(/([A-Z])/g, \"-$1\").toLowerCase();\n}\n\nexport function diff() {\n    // TODO: more elegance\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const output: Partial<Record<keyof typeof defaults|string, any>> = {};\n\n    for (const k in config) {\n        const key = k as keyof DefaultConfig;\n        if (Array.isArray(config[key]) && key === \"keybind\") {\n            const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (Array.isArray(config[key]) && key === \"palette\") {\n            const toAdd = [];\n            for (let p = 0; p < defaults[key].length; p++) {\n                if (config[key][p] === defaults[key][p]) continue;\n                toAdd.push(`${p}=${config[key][p]}`);\n            }\n            // const toAdd = config[key].filter(c => !defaults[key].includes(c));\n            if (toAdd.length) output[keyToConfig(key)] = toAdd;\n        }\n        else if (config[key] != defaults[key]) {\n            output[keyToConfig(key)] = config[key];\n        }\n    }\n\n    return output;\n}\n\nexport function load(conf: Partial<typeof config>) {\n    for (const key in conf) {\n        if (!(key in config)) continue;\n        if (key !== \"keybind\" && key !== \"palette\") {\n            config[key as keyof typeof config] = conf[key as keyof typeof config];\n\n            if (key === \"theme\") {\n                themeHandler(conf[key] as string);\n            }\n        }\n        else if (key === \"keybind\") {\n            config.keybind = [...config.keybind, ...conf.keybind];\n        }\n        else if (key === \"palette\") {\n            config.palette = [...conf.palette];\n        }\n    }\n}\n\nexport default config;\n\n\n// TODO: is this useful?\ninterface DefaultConfig {\n    palette: HexColor[];\n    keybind: KeybindString[];\n    fontFamily: string;\n    fontFamilyBold: string;\n    fontFamilyItalic: string;\n    fontFamilyBoldItalic: string;\n    fontStyle: string;\n    fontStyleBold: string;\n    fontStyleItalic: string;\n    fontStyleBoldItalic: string;\n    fontFeature: string;\n    fontSize: number;\n    fontVariation: string;\n    fontVariationBold: string;\n    fontVariationItalic: string;\n    fontVariationBoldItalic: string;\n    fontCodepointMap: string;\n    fontThicken: boolean;\n    adjustCellWidth: string;\n    adjustCellHeight: string;\n    adjustFontBaseline: string;\n    adjustUnderlinePosition: string;\n    adjustUnderlineThickness: string;\n    adjustStrikethroughPosition: string;\n    adjustStrikethroughThickness: string;\n    adjustCursorThickness: string;\n    graphemeWidthMethod: string;\n    theme: string;\n    background: HexColor;\n    foreground: HexColor;\n    selectionForeground: string;\n    selectionBackground: string;\n    selectionInvertFgBg: boolean;\n    minimumContrast: number;\n    cursorColor: string;\n    cursorInvertFgBg: boolean;\n    cursorOpacity: number;\n    cursorStyle: string;\n    cursorStyleBlink: string;\n    cursorText: string;\n    cursorClickToMove: boolean;\n    mouseHideWhileTyping: boolean;\n    mouseShiftCapture: boolean;\n    mouseScrollMultiplier: number;\n    backgroundOpacity: number;\n    backgroundBlurRadius: number;\n    unfocusedSplitOpacity: number;\n    unfocusedSplitFill: string;\n    command: string;\n    waitAfterCommand: boolean;\n    abnormalCommandExitRuntime: number;\n    scrollbackLimit: number;\n    linkUrl: boolean;\n    fullscreen: boolean;\n    title: string;\n    class: string;\n    workingDirectory: string;\n    windowPaddingX: number;\n    windowPaddingY: number;\n    windowPaddingBalance: boolean;\n    windowPaddingColor: string;\n    windowVsync: boolean;\n    windowInheritWorkingDirectory: boolean;\n    windowInheritFontSize: boolean;\n    windowDecoration: boolean;\n    windowTitleFontFamily: string;\n    windowTheme: string;\n    windowColorspace: string;\n    windowHeight: number;\n    windowWidth: number;\n    windowSaveState: string;\n    windowStepResize: boolean;\n    windowNewTabPosition: string;\n    resizeOverlay: string;\n    resizeOverlayPosition: string;\n    resizeOverlayDuration: string;\n    focusFollowsMouse: boolean;\n    clipboardRead: string;\n    clipboardWrite: string;\n    clipboardTrimTrailingSpaces: boolean;\n    clipboardPasteProtection: boolean;\n    clipboardPasteBracketedSafe: boolean;\n    imageStorageLimit: number;\n    copyOnSelect: boolean;\n    clickRepeatInterval: number;\n    configFile: string;\n    configDefaultFiles: boolean;\n    confirmCloseSurface: boolean;\n    quitAfterLastWindowClosed: boolean;\n    quitAfterLastWindowClosedDelay: string;\n    initialWindow: boolean;\n    shellIntegration: string;\n    shellIntegrationFeatures: string;\n    oscColorReportFormat: string;\n    vtKamAllowed: boolean;\n    customShader: string;\n    customShaderAnimation: boolean;\n    macosNonNativeFullscreen: boolean;\n    macosTitlebarStyle: string;\n    macosOptionAsAlt: boolean;\n    macosWindowShadow: boolean;\n    linuxCgroup: string;\n    linuxCgroupMemoryLimit: string;\n    linuxCgroupProcessesLimit: string;\n    linuxCgroupHardFail: boolean;\n    gtkSingleInstance: string;\n    gtkTitlebar: boolean;\n    gtkTabsLocation: string;\n    gtkWideTabs: boolean;\n    gtkAdwaita: boolean;\n    desktopNotifications: boolean;\n    boldIsBright: boolean;\n    term: string;\n    enquiryResponse: string;\n}\n```\n\n\n```ts ghostty-config/src/lib/utils/colors.ts\nexport type HexColor = `#${string}`;\nexport type RgbArray = [number, number, number];\nexport type HsvArray = [number, number, number];\nexport type HsvObj = {hue: number, saturation: number, value: number};\n\nexport function luminosity(color: HexColor) {\n    const int = parseInt(color.substring(1), 16);\n    const red = int >> 16 & 0xFF;\n    const green = int >> 8 & 0xFF;\n    const blue = int >> 0 & 0xFF;\n\n    return (0.2126 * red) + (0.7152 * green) + (0.0722 * blue);\n}\n\n\nexport function isDark(color: HexColor) {\n    return luminosity(color) < 128;\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n */\nexport function hsvToRgb(hue: number, saturation: number, value: number): RgbArray {\n    const i = Math.floor(hue * 6);\n    const f = hue * 6 - i;\n    const p = value * (1 - saturation);\n    const q = value * (1 - f * saturation);\n    const t = value * (1 - (1 - f) * saturation);\n\n    let r, g, b;\n    switch (i % 6) {\n        /* eslint-disable no-sequences, @typescript-eslint/no-unused-expressions */\n        case 0: r = value, g = t, b = p; break;\n        case 1: r = q, g = value, b = p; break;\n        case 2: r = p, g = value, b = t; break;\n        case 3: r = p, g = q, b = value; break;\n        case 4: r = t, g = p, b = value; break;\n        default:\n        case 5: r = value, g = p, b = q; break;\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n}\n\nexport function rgbToHsv(red: number, green: number, blue: number): HsvObj {\n    const percentRed = red / 255;\n    const percentGreen = green / 255;\n    const percentBlue = blue / 255;\n    const cMax = Math.max(percentRed, percentGreen, percentBlue);\n    const cMin = Math.min(percentRed, percentGreen, percentBlue);\n    const delta = cMax - cMin;\n\n    let newHue = 0;\n    if (percentRed === cMax) newHue = 60 * (((percentGreen - percentBlue) / delta) % 6) / 360;\n    else if (percentGreen === cMax) newHue = 60 * (((percentBlue - percentRed) / delta) + 2) / 360;\n    else if (percentBlue === cMax) newHue = 60 * (((percentRed - percentGreen) / delta) + 4) / 360;\n    if (newHue < 0) newHue += 6;\n\n    const hue = delta === 0 ? 0 : newHue;\n    const saturation = cMax === 0 ? 0 : delta / cMax;\n    const value = cMax;\n    return {hue, saturation, value};\n}\n\n\nexport function rgbToHex(red: number, green: number, blue: number): HexColor {\n    const get = (color: number) => color.toString(16).padStart(2, \"0\").toUpperCase();\n    return `#${get(red)}${get(green)}${get(blue)}`;\n}\n\nexport function hexToRgb(string: HexColor): RgbArray {\n    const hex = string.slice(1);\n    const get = (s: number, e: number) => parseInt(hex.substring(s, e), 16);\n    return [get(0, 2), get(2, 4), get(4,6)];\n}\n```\n\n\n```ts ghostty-config/src/lib/utils/parse.ts\nimport type {KeybindString} from \"$lib/data/settings\";\nimport type {HexColor} from \"./colors\";\n\nconst re = /^\\s*([a-z-]+)[\\s]*=\\s*(.*)\\s*$/;\n\nexport default function(configString: string) {\n    const lines = configString.split(\"\\n\");\n\n    const results = {\n        palette: Array(256),\n        keybind: [] as Array<string>\n    } as {palette: (HexColor|\"\")[], keybind: KeybindString[], [key: string]: string|string[]};\n\n    for (let p = 0; p < 256; p++) results.palette[p] = \"\";\n\n    for (const l of lines) {\n        const line = l.trim();\n        const match = re.exec(line);\n        if (!match) continue;\n        const key = match[1].trim();\n        const value = match[2].trim();\n\n        if (key === \"palette\") {\n            const split = value.split(\"=\");\n            const num = parseInt(split[0].trim());\n            const color = split[1].trim() as HexColor; // TODO: perform validation\n            if (num < 0 || num > 255) continue;\n            results.palette[num] = color;\n        }\n        else if (key === \"keybind\") {\n            results.keybind.push(value as KeybindString); // TODO: perform validation\n        }\n        else {\n            const split = key.split(\"-\");\n            let newKey = split[0].trim();\n            for (let s = 1; s < split.length; s++) {\n                newKey += split[s].charAt(0).toUpperCase();\n                newKey += split[s].substring(1);\n            }\n            results[newKey] = value;\n        }\n    }\n\n    return results;\n};\n\n```\n\n\n```ts ghostty-config/src/lib/utils/themeHandler.ts\n/* eslint-disable no-console */\nimport type {HexColor} from \"$lib/utils/colors\";\nimport config from \"$lib/stores/config.svelte\";\nimport {fetchColorScheme, parseColorScheme} from \"$lib/data/settings\";\n\nexport default async function themeHandler(themeName: string) {\n    try {\n        console.log(\"Applying theme:\", themeName);\n        const {colorSchemeResponse} = await fetchColorScheme(themeName);\n        const colorScheme = parseColorScheme(colorSchemeResponse);\n\n        console.log(\"Parsed color scheme:\", colorScheme);\n\n        const colorProperties = [\n            \"background\",\n            \"foreground\",\n            \"selectionBackground\",\n            \"selectionForeground\",\n            \"cursorColor\"\n        ] as const;\n\n        colorProperties.forEach((prop) => {\n            if (colorScheme[prop]) {\n                config[prop] = colorScheme[prop] as HexColor;\n                console.log(`Updated ${prop}:`, config[prop]);\n            }\n        });\n\n        if (colorScheme.palette) {\n            const newPalette = Array(256).fill(\"#000000\") as HexColor[];\n            for (const [index, color] of Object.entries(colorScheme.palette)) {\n                newPalette[+index] = color as HexColor;\n            }\n            config.palette = [...newPalette]; // Create a new array reference to trigger reactivity\n            console.log(\"Updated palette:\", config.palette);\n        }\n\n        // Force a re-render by updating the theme property\n        config.theme = themeName;\n        console.log(\"Theme application complete\");\n\n        // Dispatch a custom event to notify that the theme has been applied\n        window.dispatchEvent(new CustomEvent(\"themeApplied\", {detail: {theme: themeName}}));\n    } catch (error) {\n        console.error(\"Error applying theme:\", error);\n    }\n}\n```\n```typescript\n        // Dispatch a custom event to notify that the theme has been applied\n        window.dispatchEvent(new CustomEvent(\"themeApplied\", {detail: {theme: themeName}}));\n    } catch (error) {\n// error: Closing curly brace appears on the same line as the subsequent block.\n        console.error(\"Error applying theme:\", error);\n    }\n```\n\n\n```svelte ghostty-config/src/routes/app/import-export/+page.svelte\n<script lang=\"ts\">\n    import Page from \"$lib/views/Page.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n    import {diff, load} from \"$lib/stores/config.svelte\";\n    import parse from \"$lib/utils/parse\";\n\n    let pasteConfigText = $state(\"Clipboard\");\n    let copyConfigText = $state(\"Clipboard\");\n\n\n    // TODO: move alert() to real modals\n    function loadConfig(candidate: string) {\n        let parsed;\n        try {\n            parsed = parse(candidate);\n        }\n        catch (parseError) {\n            // eslint-disable-next-line no-console\n            console.error(parseError);\n            alert(\"Something went wrong trying to parse your config. Please open an issue on GitHub!\");\n            return;\n        }\n\n        try {\n            load(parsed);\n        }\n        catch (loadError) {\n            // eslint-disable-next-line no-console\n            console.error(loadError);\n            alert(\"Something went wrong trying to load your parsed config. Please open an issue on GitHub!\");\n            return;\n        }\n    }\n\n    function pasteConfig() {\n        if (pasteConfigText === \"Pasted!\") return;\n        window.navigator.clipboard.readText().then(text => {\n            pasteConfigText = \"Pasted!\";\n            setTimeout(() => (pasteConfigText = \"Clipboard\"), 3000);\n            loadConfig(text);\n        });\n    }\n\n    let filePicker: HTMLInputElement;\n    function openFilePicker() {\n        filePicker.click();\n    }\n\n    function selectFile() {\n        const file = filePicker.files![0];\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", (event) => {\n            const loadedText = event.target?.result?.toString();\n            if (loadedText) loadConfig(loadedText);\n        });\n        reader.readAsText(file);\n    }\n\n    // Move to module\n    function stringifyConfig() {\n        const config = diff();\n        const lines = [\"# Config generated by Ghostty Config\\n\"];\n        for (const key in config) {\n            if (!Array.isArray(config[key])) {\n                lines.push(`${key} = ${config[key]}`);\n            }\n            else {\n                for (let i = 0; i < config[key].length; i++) {\n                    lines.push(`${key} = ${config[key][i]}`);\n                }\n            }\n        }\n\n        return lines.join(\"\\n\");\n    }\n\n    function copyConfig() {\n        if (copyConfigText === \"Copied!\") return;\n        const config = stringifyConfig();\n        window.navigator.clipboard.writeText(config).then(() => {\n            copyConfigText = \"Copied!\";\n            setTimeout(() => (copyConfigText = \"Clipboard\"), 3000);\n        });\n    }\n\n    function downloadConfig() {\n        const file = new File([stringifyConfig()], \"config\", {type: \"text/plain\"});\n        const link = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        link.href = url;\n        link.download = file.name;\n        link.style.display = \"none\";\n        document.body.append(link);\n        link.click();\n        link.remove();\n        URL.revokeObjectURL(url);\n    }\n</script>\n\n<Page title=\"Import & Export\">\n    <Group flex={1}>\n        <div class=\"preview\">\n            <div class=\"row p2\"># You can preview the config here</div>\n            <div class=\"row\">&nbsp;</div>\n\n            {#each Object.entries(diff()) as [key, value], i (i)}\n                {#if Array.isArray(value)}\n                    {#each value as val, v (v)}\n                    <div class=\"row\"><span class=\"p4\">{key}</span> = <span class=\"p5\">{val}</span></div>\n                    {/each}\n                {:else}\n                    <div class=\"row\"><span class=\"p4\">{key}</span> = <span class=\"p5\">{value}</span></div>\n                {/if}\n            {/each}\n        </div>\n        <Separator />\n        <Item name=\"Import\">\n            <div class=\"button-group\">\n                <button type=\"button\" onclick={pasteConfig} title=\"Paste\">{pasteConfigText}</button>\n                <input id=\"config-input\" type=\"file\" onchange={selectFile} bind:this={filePicker} />\n                <button type=\"button\" onclick={openFilePicker} title=\"Upload\">File...</button>\n            </div>\n        </Item>\n        <Separator />\n        <Item name=\"Export\">\n            <div class=\"button-group\">\n                <button type=\"button\" onclick={copyConfig} title=\"Copy\">{copyConfigText}</button>\n                <button type=\"button\" onclick={downloadConfig} title=\"Download\">File...</button>\n            </div>\n        </Item>\n    </Group>\n</Page>\n\n<style>\n.preview {\n    background: var(--config-bg);\n    font-family: var(--config-font-family);\n    font-size: var(--config-font-size);\n    color: var(--config-fg);\n    min-height: 200px;\n    overflow-y: auto;\n    padding: 8px;\n    border-radius: var(--radius-level-3);\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5) inset;\n    flex: 1;\n    user-select: text;\n}\n\n.preview .row {\n    display: flex;\n    white-space: pre;\n    flex: 1;\n    /* width: 100%; */\n    /* overflow: hidden; */\n}\n\n/* .bold {font-weight: 700;} */\n\n/* .fg {color: var(--config-fg);} */\n\n/* .p0 {color: var(--config-palette-0);} */\n/* .p1 {color: var(--config-palette-1);} */\n.p2 {color: var(--config-palette-2);}\n/* .p3 {color: var(--config-palette-3);} */\n.p4 {color: var(--config-palette-4);}\n.p5 {color: var(--config-palette-5);}\n/* .p6 {color: var(--config-palette-6);}\n.p7 {color: var(--config-palette-7);}\n.p8 {color: var(--config-palette-8);}\n.p9 {color: var(--config-palette-9);}\n.p10 {color: var(--config-palette-10);}\n.p11 {color: var(--config-palette-11);}\n.p12 {color: var(--config-palette-12);} */\n/* .p13 {color: var(--config-palette-13);}\n.p14 {color: var(--config-palette-14);}\n.p15 {color: var(--config-palette-15);} */\n\n\n#config-input {\n    display: none;\n}\n\n.button-group {\n    display: flex;\n    gap: 12px;\n}\n\n/* TODO: extract to a separate component for usage elsewhere */\nbutton {\n    background: var(--bg-basic-button);\n    border-radius: var(--radius-level-4);\n    border: 0;\n    color: inherit;\n    padding: 2px 10px;\n    font-size: 1.1rem;\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0.5);\n}\n\nbutton:active {\n    filter: brightness(115%);\n}\n</style>\n```\n\n\n```svelte ghostty-config/src/routes/settings/[category]/+page.svelte\n<script lang=\"ts\">\n    import {onMount} from \"svelte\";\n\n    import Page from \"$lib/views/Page.svelte\";\n\n    import {page} from \"$app/stores\";\n    import Switch from \"$lib/components/settings/Switch.svelte\";\n    import Item from \"$lib/components/settings/Item.svelte\";\n    import Group from \"$lib/components/settings/Group.svelte\";\n    import Separator from \"$lib/components/settings/Separator.svelte\";\n\n    import settings from \"$lib/data/settings\";\n    import config from \"$lib/stores/config.svelte\";\n    import Text from \"$lib/components/settings/Text.svelte\";\n    import Number from \"$lib/components/settings/Number.svelte\";\n    import Dropdown from \"$lib/components/settings/Dropdown.svelte\";\n    import Color from \"$lib/components/settings/Color.svelte\";\n    import Palette from \"$lib/components/settings/Palette.svelte\";\n    import FontPreview from \"$lib/views/FontPreview.svelte\";\n    import BaseColorPreview from \"$lib/views/BaseColorPreview.svelte\";\n    import CursorPreview from \"$lib/views/CursorPreview.svelte\";\n    import PalettePreview from \"$lib/views/PalettePreview.svelte\";\n    import Admonition from \"$lib/components/Admonition.svelte\";\n\n\n    const category = $derived(settings.find(c => c.id === $page.params.category));\n    const title = $derived(category?.name ?? $page.params.category);\n\n    interface ThemeAppliedEvent extends CustomEvent {\n        detail: { theme: string };\n    }\n\n    onMount(() => {\n        const handleThemeApplied = (event: ThemeAppliedEvent) => {\n            // eslint-disable-next-line no-console\n            console.log(\"Theme applied:\", event.detail.theme);\n        };\n\n        window.addEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n\n        return () => {\n            window.removeEventListener(\"themeApplied\", handleThemeApplied as (event: Event) => void);\n        };\n    });\n</script>\n\n\n<Page {title}>\n    {#if category}\n        {#if category.id === \"fonts\"}\n            <FontPreview />\n        {:else if category.id === \"colors\"}\n            <Admonition size=\"1.5rem\">You can reset a color to its default value by right clicking!</Admonition>\n        {/if}\n        {#each category.groups as group (group.id)}\n            <Group title={group.name} note={group.note}>\n                {#if category.id === \"colors\" && group.id === \"base\"}\n                    <BaseColorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"cursor\"}\n                    <CursorPreview />\n                    <Separator />\n                {:else if category.id === \"colors\" && group.id === \"palette\"}\n                    <PalettePreview />\n                    <Separator />\n                {/if}\n                {#each group.settings as setting, i (setting.id)}\n                    {#if i !== 0}<Separator />{/if}\n                    <Item name={setting.name} note={setting.note}>\n                        {#if setting.type === \"switch\"}\n                            <Switch bind:checked={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"text\"}\n                            <Text bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"number\"}\n                            <Number bind:value={config[setting.id as keyof typeof config]} range={setting.range} min={setting.min} max={setting.max} step={setting.step} size={setting.size} />\n                        {:else if setting.type === \"dropdown\"}\n                            <Dropdown bind:value={config[setting.id as keyof typeof config]} options={setting.options} />\n                        {:else if setting.type === \"color\"}\n                            <Color defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {:else if setting.type === \"palette\"}\n                            <Palette defaultValue={setting.value} bind:value={config[setting.id as keyof typeof config]} />\n                        {/if}\n                    </Item>\n                {/each}\n            </Group>\n        {/each}\n    {:else}\n        <h1>What Happened?</h1>\n        <p>You shouldn't be here! If you followed a link, please report the bug on GitHub. Otherwise, go ahead and start browsing on the left.</p>\n    {/if}\n</Page>\n```\n\n\n```svelte ghostty-config/src/routes/+layout.svelte\n<script lang=\"ts\">\n    import Gap from \"$lib/components/Gap.svelte\";\n    import Tab from \"$lib/components/Tab.svelte\";\n    import User from \"$lib/components/User.svelte\";\n    import \"../app.css\";\n\n    import application from \"$lib/images/tabs/application.webp\";\n    import clipboard from \"$lib/images/tabs/clipboard.webp\";\n    import window from \"$lib/images/tabs/window.webp\";\n\n    import colors from \"$lib/images/tabs/colors.webp\";\n    import fonts from \"$lib/images/tabs/fonts.webp\";\n\n    import keybinds from \"$lib/images/tabs/keybinds.webp\";\n    import mouse from \"$lib/images/tabs/mouse.webp\";\n\n    import gtk from \"$lib/images/tabs/gtk.svg\";\n    import linux from \"$lib/images/tabs/linux.webp\";\n    import macos from \"$lib/images/tabs/macos.webp\";\n\n    import github from \"$lib/images/tabs/github.svg\";\n    import ghostty from \"$lib/images/tabs/ghostty.webp\";\n\n    import config from \"$lib/stores/config.svelte\";\n    import app from \"$lib/stores/state.svelte\";\n\n    const cssConfigVars = $derived.by(() => {\n        let str = \"\";\n\n        const add = (key: string, val: string) => str += `--config-${key}: ${val};`;\n\n        // Add the base colors\n        add(\"bg\", config.background);\n        add(\"fg\", config.foreground);\n        add(\"selection-bg\", config.selectionInvertFgBg ? config.foreground : config.selectionBackground || config.foreground);\n        add(\"selection-fg\", config.selectionInvertFgBg ? config.background : config.selectionForeground || config.background);\n\n        // Add the palette colors\n        const paletteSize = 16; // config.palette.length;\n        for (let c = 0; c < paletteSize; c++) add(`palette-${c}`, config.palette[c]);\n\n        // TODO: consider honoring separate fonts for bold/italic and such in previews\n        // Add font settings\n        add(\"font-family\", config.fontFamily || \"monospace\");\n        add(\"font-size\", `${config.fontSize}px`);\n\n        return str;\n    });\n\n    const {children} = $props();\n\n\n\n\n    const htmlTitle = $derived.by(() => {\n        const name = app.title === \"Ghostty Config\" ? \"\" : app.title;\n        let title = \"Ghostty Config\";\n        if (name) title = `${title} - ${name}`;\n        return title;\n    });\n</script>\n\n<svelte:head>\n    <title>{htmlTitle}</title>\n</svelte:head>\n\n<!-- eslint-disable-next-line svelte/require-optimized-style-attribute -->\n<div class=\"app-window\" style={cssConfigVars}>\n    <div id=\"sidebar\">\n        <div class=\"sidebar-header\">\n            <div class=\"window-actions-container\">\n                <div class=\"window-actions\">\n                    <div class=\"window-dot\"><span>×</span></div>\n                    <div class=\"window-dot\"><span>-</span></div>\n                    <div class=\"window-dot\"><span>+</span></div>\n                </div>\n            </div>\n        </div>\n        <nav id=\"categories\">\n            <User route=\"/\" />\n            <Gap />\n            <Tab route=\"/settings/application\">\n                {#snippet icon()}<img src={application} alt=\"Application Settings\" />{/snippet}\n                Application\n            </Tab>\n            <Tab route=\"/settings/clipboard\">\n                {#snippet icon()}<img src={clipboard} alt=\"Clipboard Settings\" />{/snippet}\n                Clipboard\n            </Tab>\n            <Tab route=\"/settings/window\">\n                {#snippet icon()}<img src={window} alt=\"Window Settings\" />{/snippet}\n                Window\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/colors\">\n                {#snippet icon()}<img src={colors} alt=\"Color Settings\" />{/snippet}\n                Colors\n            </Tab>\n            <Tab route=\"/settings/fonts\">\n                {#snippet icon()}<img src={fonts} alt=\"Font Settings\" />{/snippet}\n                Fonts\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/keybinds\">\n                {#snippet icon()}<img src={keybinds} alt=\"Keybind Settings\" />{/snippet}\n                Keybinds\n            </Tab>\n            <Tab route=\"/settings/mouse\">\n                {#snippet icon()}<img src={mouse} alt=\"Mouse Settings\" />{/snippet}\n                Mouse\n            </Tab>\n            <Gap />\n            <Tab route=\"/settings/gtk\">\n                {#snippet icon()}<div class=\"icon-wrapper\"><img src={gtk} alt=\"GTK Settings\" /></div>{/snippet}\n                GTK\n            </Tab>\n            <Tab route=\"/settings/linux\">\n                {#snippet icon()}<img src={linux} alt=\"Linux Settings\" />{/snippet}\n                Linux\n            </Tab>\n            <Tab route=\"/settings/macos\">\n                {#snippet icon()}<img src={macos} alt=\"MacOS Settings\" />{/snippet}\n                macOS\n            </Tab>\n            <Gap expand={true} />\n            <Tab route=\"https://github.com/zerebos/ghostty-config\">\n                {#snippet icon()}<div class=\"icon-wrapper github\"><img src={github} alt=\"Ghostty Config GitHub\" /></div>{/snippet}\n                GitHub\n            </Tab>\n            <Tab route=\"https://github.com/ghostty-org\">\n                {#snippet icon()}<img src={ghostty} alt=\"Ghostty GitHub\" />{/snippet}\n                Ghostty\n            </Tab>\n        </nav>\n    </div>\n    <div id=\"content-view\">\n        {@render children()}\n    </div>\n\n</div>\n\n<!-- <svelte:window onmouseup={onMouseUp} onmousemove={onMouseMove} /> -->\n\n<style>\n.app-window {\n    user-select: none;\n    /* cursor: move; */\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    height: 100%;\n    /* margin: 20px auto; */\n    width: 90%;\n    max-width: var(--app-width);\n    height: var(--app-height);\n    border: 1px solid var(--border-level-1);\n    /* box-shadow: 0 0 1px white inset; */\n    box-shadow: 0 0 20px -1px rgba(0,0,0,0.7);\n    border-radius: var(--radius-level-1);\n    overflow: hidden;\n}\n\n/* .app-window .draggable {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 50px;\n    cursor: move;\n    z-index: 10;\n} */\n\n/* TODO: try this without pseudoelement using outline */\n.app-window::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    box-shadow: 0 0 1px white inset;\n    border-radius: inherit;\n    z-index: 2;\n    pointer-events: none;\n}\n\n#sidebar {\n    width: var(--sidebar-width);\n    /* black: #272329; white: #544F57; */\n    background: rgba(50, 46, 52, 0.7);\n    backdrop-filter: blur(10px);\n    padding: 5px;\n    border-right: 2px solid var(--border-level-1);\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebar-header {\n    display: flex;\n    flex-direction: column;\n}\n\n.sidebar-header .window-actions-container {\n    display: flex;\n    padding: 15px 0 0 15px;\n    margin-bottom: 20px;\n}\n\n.sidebar-header .window-actions {\n    display: flex;\n    gap: 8px;\n}\n\n.app-window .window-dot {\n    border-radius: 50%;\n    /* display: inline-block; */\n    height: 12px;\n    /* margin-right: 6px; */\n    /* margin-top: 4px; */\n    width: 12px;\n    border: 0;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    color: rgba(0, 0, 0, 0);\n}\n\n.window-dot span {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: -3px;\n    margin-right: -1px;\n}\n\n.app-window .window-actions:hover .window-dot {\n    /* background: white!important; */\n    /* cursor: pointer; */\n    color: rgba(0, 0, 0, 0.5);\n}\n\n.window-dot {\n    background-color: var(--color-warning);\n}\n\n.window-dot:first-of-type {\n    background-color: var(--color-danger);\n}\n\n.window-dot:last-of-type {\n    background-color: var(--color-success);\n}\n\n#content-view {\n    background: var(--bg-level-1);\n    flex: 1;\n    display: flex;\n    min-width: 0;\n}\n\n\n\n#categories {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    padding: 10px;\n}\n\n#categories img {\n    width: 100%;\n}\n\n#categories .icon-wrapper {\n    background: linear-gradient(#D3E3E9, #908F8C);\n    width: 20px;\n    height: 20px;\n    border-radius: var(--radius-level-4);\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#categories .icon-wrapper img {\n    height: 14px;\n    width: 14px;\n}\n\n#categories .icon-wrapper.github {\n    background: linear-gradient(#9C45A9, #3B1E68);\n}\n\n#categories .icon-wrapper.github img {\n    filter: invert(100%);\n    height: 18px;\n    width: 18px;\n}\n</style>\n```\n\n\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7778}}},{"id":{"replica_id":0,"value":61},"start":37109,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7779}}},{"id":{"replica_id":0,"value":62},"start":39520,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7780}}},{"id":{"replica_id":0,"value":117},"start":39547,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7781}}},{"id":{"replica_id":0,"value":118},"start":42849,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7782}}},{"id":{"replica_id":0,"value":157},"start":42886,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7783}}},{"id":{"replica_id":0,"value":158},"start":46187,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7784}}},{"id":{"replica_id":0,"value":327},"start":84598,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7785}}},{"id":{"replica_id":0,"value":328},"start":87681,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7786}}},{"id":{"replica_id":0,"value":632},"start":125837,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7787}}},{"id":{"replica_id":0,"value":633},"start":129094,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7788}}},{"id":{"replica_id":0,"value":857},"start":129138,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7789}}},{"id":{"replica_id":0,"value":858},"start":133576,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7790}}},{"id":{"replica_id":0,"value":1064},"start":189122,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7791}}},{"id":{"replica_id":0,"value":1065},"start":193337,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7792}}},{"id":{"replica_id":0,"value":1549},"start":298173,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7793}}},{"id":{"replica_id":0,"value":1550},"start":302047,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7794}}},{"id":{"replica_id":0,"value":1639},"start":302078,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7795}}},{"id":{"replica_id":0,"value":1640},"start":305590,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7796}}},{"id":{"replica_id":0,"value":1853},"start":312336,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7797}}},{"id":{"replica_id":0,"value":1854},"start":314294,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7798}}},{"id":{"replica_id":0,"value":2004},"start":319138,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7799}}},{"id":{"replica_id":0,"value":2005},"start":320780,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7800}}},{"id":{"replica_id":0,"value":2146},"start":326059,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7801}}},{"id":{"replica_id":0,"value":2147},"start":328131,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7802}}},{"id":{"replica_id":0,"value":2324},"start":328420,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7803}}},{"id":{"replica_id":0,"value":2325},"start":330385,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7804}}},{"id":{"replica_id":0,"value":2651},"start":330415,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7805}}},{"id":{"replica_id":0,"value":2652},"start":332544,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7806}}},{"id":{"replica_id":0,"value":3408},"start":332645,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7807}}},{"id":{"replica_id":0,"value":3409},"start":336330,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7808}}},{"id":{"replica_id":0,"value":3784},"start":342772,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7809}}},{"id":{"replica_id":0,"value":3785},"start":345916,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7810}}},{"id":{"replica_id":0,"value":4514},"start":350381,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":7811}}},{"id":{"replica_id":0,"value":5506},"start":355766,"metadata":{"role":"assistant","status":{"Error":"cloud language model completion failed with status 400 Bad Request: messages: final assistant content cannot end with trailing whitespace"},"timestamp":{"replica_id":0,"value":7812}}},{"id":{"replica_id":0,"value":5507},"start":355767,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7813}}},{"id":{"replica_id":0,"value":5654},"start":677899,"metadata":{"role":"assistant","status":{"Error":"cloud language model completion failed with status 400 Bad Request: prompt is too long: 201128 tokens > 199999 maximum"},"timestamp":{"replica_id":0,"value":7814}}},{"id":{"replica_id":0,"value":5655},"start":677900,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7815}}},{"id":{"replica_id":0,"value":5810},"start":805352,"metadata":{"role":"assistant","status":{"Error":"cloud language model completion failed with status 400 Bad Request: prompt is too long: 201128 tokens > 199999 maximum"},"timestamp":{"replica_id":0,"value":7816}}},{"id":{"replica_id":0,"value":5811},"start":805353,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7817}}},{"id":{"replica_id":0,"value":7776},"start":880978,"metadata":{"role":"assistant","status":{"Error":"cloud language model completion failed with status 400 Bad Request: prompt is too long: 201128 tokens > 199999 maximum"},"timestamp":{"replica_id":0,"value":7820}}},{"id":{"replica_id":0,"value":7777},"start":880979,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":7819}}}],"summary":"Theme selection and color scheme application","slash_command_output_sections":[{"range":{"start":114,"end":6375},"icon":"File","label":"ghostty-config/src/lib/stores/config.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/config.svelte.ts"}},{"range":{"start":6376,"end":37106},"icon":"File","label":"ghostty-config/src/lib/data/settings.ts","metadata":{"path":"ghostty-config/src/lib/data/settings.ts"}},{"range":{"start":36830,"end":37105},"icon":"XCircle","label":"'colorScheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":46222,"end":53850},"icon":"File","label":"ghostty-config/src/lib/stores/config.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/config.svelte.ts"}},{"range":{"start":52687,"end":52964},"icon":"XCircle","label":"'themeWatcher' is assigned a value but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":52965,"end":53206},"icon":"XCircle","label":"Cannot find name 'derived'. Did you mean '$derived'?","metadata":null},{"range":{"start":53207,"end":53421},"icon":"XCircle","label":"'derived' is not defined.","metadata":null},{"range":{"start":53422,"end":53636},"icon":"XCircle","label":"Parameter 'theme' implicitly has an 'any' type.","metadata":null},{"range":{"start":53637,"end":53849},"icon":"XCircle","label":"Parameter 'set' implicitly has an 'any' type.","metadata":null},{"range":{"start":53852,"end":84596},"icon":"File","label":"ghostty-config/src/lib/data/settings.ts","metadata":{"path":"ghostty-config/src/lib/data/settings.ts"}},{"range":{"start":84320,"end":84595},"icon":"XCircle","label":"'colorScheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":87773,"end":118447},"icon":"File","label":"ghostty-config/src/lib/data/settings.ts","metadata":{"path":"ghostty-config/src/lib/data/settings.ts"}},{"range":{"start":118247,"end":118446},"icon":"XCircle","label":"'config' is defined but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":118449,"end":124863},"icon":"File","label":"ghostty-config/src/lib/stores/config.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/config.svelte.ts"}},{"range":{"start":124865,"end":125835},"icon":"File","label":"ghostty-config/src/lib/utils/themeHandler.ts","metadata":{"path":"ghostty-config/src/lib/utils/themeHandler.ts"}},{"range":{"start":133577,"end":136880},"icon":"File","label":"ghostty-config/src/lib/components/settings/Color.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Color.svelte"}},{"range":{"start":136882,"end":137889},"icon":"File","label":"ghostty-config/src/lib/components/settings/Palette.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Palette.svelte"}},{"range":{"start":137891,"end":138805},"icon":"File","label":"ghostty-config/src/lib/components/settings/Dropdown.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Dropdown.svelte"}},{"range":{"start":138807,"end":169481},"icon":"File","label":"ghostty-config/src/lib/data/settings.ts","metadata":{"path":"ghostty-config/src/lib/data/settings.ts"}},{"range":{"start":169281,"end":169480},"icon":"XCircle","label":"'config' is defined but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":169483,"end":175770},"icon":"File","label":"ghostty-config/src/lib/stores/config.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/config.svelte.ts"}},{"range":{"start":175772,"end":177092},"icon":"File","label":"ghostty-config/src/lib/utils/themeHandler.ts","metadata":{"path":"ghostty-config/src/lib/utils/themeHandler.ts"}},{"range":{"start":177094,"end":178623},"icon":"File","label":"ghostty-config/src/lib/utils/parse.ts","metadata":{"path":"ghostty-config/src/lib/utils/parse.ts"}},{"range":{"start":178625,"end":181547},"icon":"File","label":"ghostty-config/src/lib/utils/colors.ts","metadata":{"path":"ghostty-config/src/lib/utils/colors.ts"}},{"range":{"start":181549,"end":189120},"icon":"File","label":"ghostty-config/src/lib/components/ColorPicker.svelte","metadata":{"path":"ghostty-config/src/lib/components/ColorPicker.svelte"}},{"range":{"start":193338,"end":197164},"icon":"File","label":"ghostty-config/src/routes/settings/[category]/+page.svelte","metadata":{"path":"ghostty-config/src/routes/settings/[category]/+page.svelte"}},{"range":{"start":197166,"end":198486},"icon":"File","label":"ghostty-config/src/lib/utils/themeHandler.ts","metadata":{"path":"ghostty-config/src/lib/utils/themeHandler.ts"}},{"range":{"start":198488,"end":200017},"icon":"File","label":"ghostty-config/src/lib/utils/parse.ts","metadata":{"path":"ghostty-config/src/lib/utils/parse.ts"}},{"range":{"start":200019,"end":202941},"icon":"File","label":"ghostty-config/src/lib/utils/colors.ts","metadata":{"path":"ghostty-config/src/lib/utils/colors.ts"}},{"range":{"start":202943,"end":209230},"icon":"File","label":"ghostty-config/src/lib/stores/config.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/config.svelte.ts"}},{"range":{"start":209232,"end":239906},"icon":"File","label":"ghostty-config/src/lib/data/settings.ts","metadata":{"path":"ghostty-config/src/lib/data/settings.ts"}},{"range":{"start":239706,"end":239905},"icon":"XCircle","label":"'config' is defined but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":239908,"end":247479},"icon":"File","label":"ghostty-config/src/lib/components/ColorPicker.svelte","metadata":{"path":"ghostty-config/src/lib/components/ColorPicker.svelte"}},{"range":{"start":247481,"end":248488},"icon":"File","label":"ghostty-config/src/lib/components/settings/Palette.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Palette.svelte"}},{"range":{"start":248490,"end":249404},"icon":"File","label":"ghostty-config/src/lib/components/settings/Dropdown.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Dropdown.svelte"}},{"range":{"start":249406,"end":252709},"icon":"File","label":"ghostty-config/src/lib/components/settings/Color.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Color.svelte"}},{"range":{"start":252711,"end":283385},"icon":"File","label":"ghostty-config/src/lib/data/settings.ts","metadata":{"path":"ghostty-config/src/lib/data/settings.ts"}},{"range":{"start":283185,"end":283384},"icon":"XCircle","label":"'config' is defined but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":283387,"end":289802},"icon":"File","label":"ghostty-config/src/routes/app/import-export/+page.svelte","metadata":{"path":"ghostty-config/src/routes/app/import-export/+page.svelte"}},{"range":{"start":289804,"end":298171},"icon":"File","label":"ghostty-config/src/routes/+layout.svelte","metadata":{"path":"ghostty-config/src/routes/+layout.svelte"}},{"range":{"start":305591,"end":312334},"icon":"File","label":"ghostty-config/src/routes/settings/[category]/+page.svelte","metadata":{"path":"ghostty-config/src/routes/settings/[category]/+page.svelte"}},{"range":{"start":309799,"end":310008},"icon":"XCircle","label":"Unexpected console statement.","metadata":null},{"range":{"start":310009,"end":311165},"icon":"XCircle","label":"No overload matches this call.\n  Overload 1 of 2, '(type: keyof WindowEventMap, listener: (this: Window, ev: Event | UIEvent | DeviceMotionEvent | DeviceOrientationEvent | ... 25 more ... | StorageEvent) => any, options?: boolean | ... 1 more ... | undefined): void', gave the following error.\n    Argument of type '\"themeApplied\"' is not assignable to parameter of type 'keyof WindowEventMap'.\n  Overload 2 of 2, '(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void', gave the following error.\n    Argument of type '(event: CustomEvent) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.\n      Type '(event: CustomEvent) => void' is not assignable to type 'EventListener'.\n        Types of parameters 'event' and 'evt' are incompatible.\n          Type 'Event' is missing the following properties from type 'CustomEvent<any>': detail, initCustomEvent","metadata":null},{"range":{"start":311166,"end":312333},"icon":"XCircle","label":"No overload matches this call.\n  Overload 1 of 2, '(type: keyof WindowEventMap, listener: (this: Window, ev: Event | UIEvent | DeviceMotionEvent | DeviceOrientationEvent | ... 25 more ... | StorageEvent) => any, options?: boolean | ... 1 more ... | undefined): void', gave the following error.\n    Argument of type '\"themeApplied\"' is not assignable to parameter of type 'keyof WindowEventMap'.\n  Overload 2 of 2, '(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void', gave the following error.\n    Argument of type '(event: CustomEvent) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'.\n      Type '(event: CustomEvent) => void' is not assignable to type 'EventListener'.\n        Types of parameters 'event' and 'evt' are incompatible.\n          Type 'Event' is missing the following properties from type 'CustomEvent<any>': detail, initCustomEvent","metadata":null},{"range":{"start":314295,"end":319136},"icon":"File","label":"ghostty-config/src/routes/settings/[category]/+page.svelte","metadata":{"path":"ghostty-config/src/routes/settings/[category]/+page.svelte"}},{"range":{"start":318738,"end":318927},"icon":"XCircle","label":"'EventListener' is not defined.","metadata":null},{"range":{"start":318928,"end":319135},"icon":"XCircle","label":"'EventListener' is not defined.","metadata":null},{"range":{"start":320781,"end":326057},"icon":"File","label":"ghostty-config/src/lib/components/settings/Palette.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Palette.svelte"}},{"range":{"start":321823,"end":322088},"icon":"XCircle","label":"'HexColor' is defined but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":322089,"end":322323},"icon":"XCircle","label":"`$:` is not allowed in runes mode, use `$derived` or `$effect` instead","metadata":null},{"range":{"start":322324,"end":323344},"icon":"XCircle","label":"Cannot use 'config' as a store. 'config' needs to be an object with a subscribe method on it.\n\nNo overload matches this call.\n  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.\n    Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n      Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.\n  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.\n    Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n      Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.","metadata":null},{"range":{"start":323345,"end":324312},"icon":"XCircle","label":"Cannot use 'config' as a store. 'config' needs to be an object with a subscribe method on it.\n\nNo overload matches this call.\n  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.\n    Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n      Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.\n  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.\n    Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n      Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.","metadata":null},{"range":{"start":324313,"end":324643},"icon":"XCircle","label":"'color' is defined but never used. Allowed unused args must match /^_/u.","metadata":null},{"range":{"start":324644,"end":324959},"icon":"XCircle","label":"Destructure palette from $config for better change tracking & fewer redraws","metadata":null},{"range":{"start":324960,"end":326056},"icon":"XCircle","label":"Cannot use 'config' as a store. 'config' needs to be an object with a subscribe method on it.\n\nNo overload matches this call.\n  Overload 1 of 2, '(store: SvelteStore<any>): any', gave the following error.\n    Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n      Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.\n  Overload 2 of 2, '(store: SvelteStore<any> | null | undefined): any', gave the following error.\n    Argument of type 'Record<keyof DefaultConfig, any>' is not assignable to parameter of type 'SvelteStore<any>'.\n      Property 'subscribe' is missing in type 'Record<keyof DefaultConfig, any>' but required in type 'SvelteStore<any>'.","metadata":null},{"range":{"start":336331,"end":342746},"icon":"File","label":"ghostty-config/src/routes/app/import-export/+page.svelte","metadata":{"path":"ghostty-config/src/routes/app/import-export/+page.svelte"}},{"range":{"start":345966,"end":350379},"icon":"File","label":"ghostty-config/src/routes/settings/[category]/+page.svelte","metadata":{"path":"ghostty-config/src/routes/settings/[category]/+page.svelte"}},{"range":{"start":355768,"end":677897},"icon":"Folder","label":"ghostty-config/","metadata":null},{"range":{"start":355784,"end":356785},"icon":"Folder","label":".github/workflows","metadata":null},{"range":{"start":355802,"end":356785},"icon":"File","label":"ghostty-config/.github/workflows/deploy.yml","metadata":{"path":"ghostty-config/.github/workflows/deploy.yml"}},{"range":{"start":356786,"end":357032},"icon":"File","label":"ghostty-config/.gitignore","metadata":{"path":"ghostty-config/.gitignore"}},{"range":{"start":357033,"end":357133},"icon":"File","label":"ghostty-config/.prettierignore","metadata":{"path":"ghostty-config/.prettierignore"}},{"range":{"start":357134,"end":357487},"icon":"File","label":"ghostty-config/.prettierrc","metadata":{"path":"ghostty-config/.prettierrc"}},{"range":{"start":357488,"end":368855},"icon":"File","label":"ghostty-config/LICENSE","metadata":{"path":"ghostty-config/LICENSE"}},{"range":{"start":368856,"end":369827},"icon":"File","label":"ghostty-config/README.md","metadata":{"path":"ghostty-config/README.md"}},{"range":{"start":369828,"end":378034},"icon":"File","label":"ghostty-config/eslint.config.js","metadata":{"path":"ghostty-config/eslint.config.js"}},{"range":{"start":378035,"end":546503},"icon":"File","label":"ghostty-config/package-lock.json","metadata":{"path":"ghostty-config/package-lock.json"}},{"range":{"start":546504,"end":548039},"icon":"File","label":"ghostty-config/package.json","metadata":{"path":"ghostty-config/package.json"}},{"range":{"start":548040,"end":675473},"icon":"Folder","label":"src","metadata":null},{"range":{"start":548044,"end":550934},"icon":"File","label":"ghostty-config/src/app.css","metadata":{"path":"ghostty-config/src/app.css"}},{"range":{"start":550935,"end":551278},"icon":"File","label":"ghostty-config/src/app.d.ts","metadata":{"path":"ghostty-config/src/app.d.ts"}},{"range":{"start":551279,"end":553172},"icon":"File","label":"ghostty-config/src/app.html","metadata":{"path":"ghostty-config/src/app.html"}},{"range":{"start":553173,"end":651363},"icon":"Folder","label":"lib","metadata":null},{"range":{"start":553177,"end":586127},"icon":"Folder","label":"components","metadata":null},{"range":{"start":553188,"end":554673},"icon":"File","label":"ghostty-config/src/lib/components/Admonition.svelte","metadata":{"path":"ghostty-config/src/lib/components/Admonition.svelte"}},{"range":{"start":554674,"end":562245},"icon":"File","label":"ghostty-config/src/lib/components/ColorPicker.svelte","metadata":{"path":"ghostty-config/src/lib/components/ColorPicker.svelte"}},{"range":{"start":562246,"end":562519},"icon":"File","label":"ghostty-config/src/lib/components/Gap.svelte","metadata":{"path":"ghostty-config/src/lib/components/Gap.svelte"}},{"range":{"start":562520,"end":564169},"icon":"File","label":"ghostty-config/src/lib/components/History.svelte","metadata":{"path":"ghostty-config/src/lib/components/History.svelte"}},{"range":{"start":564170,"end":566153},"icon":"File","label":"ghostty-config/src/lib/components/Tab.svelte","metadata":{"path":"ghostty-config/src/lib/components/Tab.svelte"}},{"range":{"start":566154,"end":567938},"icon":"File","label":"ghostty-config/src/lib/components/User.svelte","metadata":{"path":"ghostty-config/src/lib/components/User.svelte"}},{"range":{"start":567939,"end":586127},"icon":"Folder","label":"settings","metadata":null},{"range":{"start":567948,"end":571251},"icon":"File","label":"ghostty-config/src/lib/components/settings/Color.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Color.svelte"}},{"range":{"start":571252,"end":572166},"icon":"File","label":"ghostty-config/src/lib/components/settings/Dropdown.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Dropdown.svelte"}},{"range":{"start":572167,"end":573493},"icon":"File","label":"ghostty-config/src/lib/components/settings/Group.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Group.svelte"}},{"range":{"start":573494,"end":574394},"icon":"File","label":"ghostty-config/src/lib/components/settings/Item.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Item.svelte"}},{"range":{"start":574395,"end":578385},"icon":"File","label":"ghostty-config/src/lib/components/settings/Keybinds.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Keybinds.svelte"}},{"range":{"start":578386,"end":579900},"icon":"File","label":"ghostty-config/src/lib/components/settings/LinkItem.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/LinkItem.svelte"}},{"range":{"start":579901,"end":581591},"icon":"File","label":"ghostty-config/src/lib/components/settings/Number.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Number.svelte"}},{"range":{"start":581592,"end":582599},"icon":"File","label":"ghostty-config/src/lib/components/settings/Palette.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Palette.svelte"}},{"range":{"start":582600,"end":582847},"icon":"File","label":"ghostty-config/src/lib/components/settings/Separator.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Separator.svelte"}},{"range":{"start":582848,"end":585029},"icon":"File","label":"ghostty-config/src/lib/components/settings/Switch.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Switch.svelte"}},{"range":{"start":585030,"end":586127},"icon":"File","label":"ghostty-config/src/lib/components/settings/Text.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Text.svelte"}},{"range":{"start":586128,"end":616807},"icon":"Folder","label":"data","metadata":null},{"range":{"start":586133,"end":616807},"icon":"File","label":"ghostty-config/src/lib/data/settings.ts","metadata":{"path":"ghostty-config/src/lib/data/settings.ts"}},{"range":{"start":616607,"end":616806},"icon":"XCircle","label":"'config' is defined but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":616808,"end":622167},"icon":"Folder","label":"images","metadata":null},{"range":{"start":616815,"end":619823},"icon":"File","label":"ghostty-config/src/lib/images/ghost.svg","metadata":{"path":"ghostty-config/src/lib/images/ghost.svg"}},{"range":{"start":619824,"end":622167},"icon":"Folder","label":"tabs","metadata":null},{"range":{"start":619829,"end":621640},"icon":"File","label":"ghostty-config/src/lib/images/tabs/github.svg","metadata":{"path":"ghostty-config/src/lib/images/tabs/github.svg"}},{"range":{"start":621641,"end":622167},"icon":"File","label":"ghostty-config/src/lib/images/tabs/gtk.svg","metadata":{"path":"ghostty-config/src/lib/images/tabs/gtk.svg"}},{"range":{"start":622168,"end":629846},"icon":"Folder","label":"stores","metadata":null},{"range":{"start":622175,"end":628462},"icon":"File","label":"ghostty-config/src/lib/stores/config.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/config.svelte.ts"}},{"range":{"start":628463,"end":629672},"icon":"File","label":"ghostty-config/src/lib/stores/history.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/history.svelte.ts"}},{"range":{"start":629673,"end":629846},"icon":"File","label":"ghostty-config/src/lib/stores/state.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/state.svelte.ts"}},{"range":{"start":629847,"end":636505},"icon":"Folder","label":"utils","metadata":null},{"range":{"start":629853,"end":632775},"icon":"File","label":"ghostty-config/src/lib/utils/colors.ts","metadata":{"path":"ghostty-config/src/lib/utils/colors.ts"}},{"range":{"start":632776,"end":634305},"icon":"File","label":"ghostty-config/src/lib/utils/parse.ts","metadata":{"path":"ghostty-config/src/lib/utils/parse.ts"}},{"range":{"start":634306,"end":636505},"icon":"File","label":"ghostty-config/src/lib/utils/themeHandler.ts","metadata":{"path":"ghostty-config/src/lib/utils/themeHandler.ts"}},{"range":{"start":636154,"end":636504},"icon":"XCircle","label":"Closing curly brace appears on the same line as the subsequent block.","metadata":null},{"range":{"start":636506,"end":651363},"icon":"Folder","label":"views","metadata":null},{"range":{"start":636512,"end":637925},"icon":"File","label":"ghostty-config/src/lib/views/BaseColorPreview.svelte","metadata":{"path":"ghostty-config/src/lib/views/BaseColorPreview.svelte"}},{"range":{"start":637926,"end":640274},"icon":"File","label":"ghostty-config/src/lib/views/CursorPreview.svelte","metadata":{"path":"ghostty-config/src/lib/views/CursorPreview.svelte"}},{"range":{"start":640275,"end":643792},"icon":"File","label":"ghostty-config/src/lib/views/FontPreview.svelte","metadata":{"path":"ghostty-config/src/lib/views/FontPreview.svelte"}},{"range":{"start":643793,"end":646066},"icon":"File","label":"ghostty-config/src/lib/views/Page.svelte","metadata":{"path":"ghostty-config/src/lib/views/Page.svelte"}},{"range":{"start":646067,"end":651363},"icon":"File","label":"ghostty-config/src/lib/views/PalettePreview.svelte","metadata":{"path":"ghostty-config/src/lib/views/PalettePreview.svelte"}},{"range":{"start":651364,"end":675473},"icon":"Folder","label":"routes","metadata":null},{"range":{"start":651371,"end":659738},"icon":"File","label":"ghostty-config/src/routes/+layout.svelte","metadata":{"path":"ghostty-config/src/routes/+layout.svelte"}},{"range":{"start":659739,"end":659812},"icon":"File","label":"ghostty-config/src/routes/+layout.ts","metadata":{"path":"ghostty-config/src/routes/+layout.ts"}},{"range":{"start":659813,"end":664055},"icon":"File","label":"ghostty-config/src/routes/+page.svelte","metadata":{"path":"ghostty-config/src/routes/+page.svelte"}},{"range":{"start":664056,"end":664249},"icon":"File","label":"ghostty-config/src/routes/+page.ts","metadata":{"path":"ghostty-config/src/routes/+page.ts"}},{"range":{"start":664250,"end":670683},"icon":"Folder","label":"app/import-export","metadata":null},{"range":{"start":664268,"end":670683},"icon":"File","label":"ghostty-config/src/routes/app/import-export/+page.svelte","metadata":{"path":"ghostty-config/src/routes/app/import-export/+page.svelte"}},{"range":{"start":670684,"end":675473},"icon":"Folder","label":"settings","metadata":null},{"range":{"start":670693,"end":675117},"icon":"Folder","label":"[category]","metadata":null},{"range":{"start":670704,"end":675117},"icon":"File","label":"ghostty-config/src/routes/settings/[category]/+page.svelte","metadata":{"path":"ghostty-config/src/routes/settings/[category]/+page.svelte"}},{"range":{"start":675118,"end":675473},"icon":"Folder","label":"keybinds","metadata":null},{"range":{"start":675127,"end":675473},"icon":"File","label":"ghostty-config/src/routes/settings/keybinds/+page.svelte","metadata":{"path":"ghostty-config/src/routes/settings/keybinds/+page.svelte"}},{"range":{"start":675474,"end":675592},"icon":"Folder","label":"static","metadata":null},{"range":{"start":675481,"end":675592},"icon":"File","label":"ghostty-config/static/robots.txt","metadata":{"path":"ghostty-config/static/robots.txt"}},{"range":{"start":675593,"end":676802},"icon":"File","label":"ghostty-config/svelte.config.js","metadata":{"path":"ghostty-config/svelte.config.js"}},{"range":{"start":676803,"end":677634},"icon":"File","label":"ghostty-config/tsconfig.json","metadata":{"path":"ghostty-config/tsconfig.json"}},{"range":{"start":677635,"end":677896},"icon":"File","label":"ghostty-config/vite.config.ts","metadata":{"path":"ghostty-config/vite.config.ts"}},{"range":{"start":677901,"end":805350},"icon":"Folder","label":"ghostty-config/src","metadata":null},{"range":{"start":677920,"end":680810},"icon":"File","label":"ghostty-config/src/app.css","metadata":{"path":"ghostty-config/src/app.css"}},{"range":{"start":680811,"end":681154},"icon":"File","label":"ghostty-config/src/app.d.ts","metadata":{"path":"ghostty-config/src/app.d.ts"}},{"range":{"start":681155,"end":683048},"icon":"File","label":"ghostty-config/src/app.html","metadata":{"path":"ghostty-config/src/app.html"}},{"range":{"start":683049,"end":781239},"icon":"Folder","label":"lib","metadata":null},{"range":{"start":683053,"end":716003},"icon":"Folder","label":"components","metadata":null},{"range":{"start":683064,"end":684549},"icon":"File","label":"ghostty-config/src/lib/components/Admonition.svelte","metadata":{"path":"ghostty-config/src/lib/components/Admonition.svelte"}},{"range":{"start":684550,"end":692121},"icon":"File","label":"ghostty-config/src/lib/components/ColorPicker.svelte","metadata":{"path":"ghostty-config/src/lib/components/ColorPicker.svelte"}},{"range":{"start":692122,"end":692395},"icon":"File","label":"ghostty-config/src/lib/components/Gap.svelte","metadata":{"path":"ghostty-config/src/lib/components/Gap.svelte"}},{"range":{"start":692396,"end":694045},"icon":"File","label":"ghostty-config/src/lib/components/History.svelte","metadata":{"path":"ghostty-config/src/lib/components/History.svelte"}},{"range":{"start":694046,"end":696029},"icon":"File","label":"ghostty-config/src/lib/components/Tab.svelte","metadata":{"path":"ghostty-config/src/lib/components/Tab.svelte"}},{"range":{"start":696030,"end":697814},"icon":"File","label":"ghostty-config/src/lib/components/User.svelte","metadata":{"path":"ghostty-config/src/lib/components/User.svelte"}},{"range":{"start":697815,"end":716003},"icon":"Folder","label":"settings","metadata":null},{"range":{"start":697824,"end":701127},"icon":"File","label":"ghostty-config/src/lib/components/settings/Color.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Color.svelte"}},{"range":{"start":701128,"end":702042},"icon":"File","label":"ghostty-config/src/lib/components/settings/Dropdown.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Dropdown.svelte"}},{"range":{"start":702043,"end":703369},"icon":"File","label":"ghostty-config/src/lib/components/settings/Group.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Group.svelte"}},{"range":{"start":703370,"end":704270},"icon":"File","label":"ghostty-config/src/lib/components/settings/Item.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Item.svelte"}},{"range":{"start":704271,"end":708261},"icon":"File","label":"ghostty-config/src/lib/components/settings/Keybinds.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Keybinds.svelte"}},{"range":{"start":708262,"end":709776},"icon":"File","label":"ghostty-config/src/lib/components/settings/LinkItem.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/LinkItem.svelte"}},{"range":{"start":709777,"end":711467},"icon":"File","label":"ghostty-config/src/lib/components/settings/Number.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Number.svelte"}},{"range":{"start":711468,"end":712475},"icon":"File","label":"ghostty-config/src/lib/components/settings/Palette.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Palette.svelte"}},{"range":{"start":712476,"end":712723},"icon":"File","label":"ghostty-config/src/lib/components/settings/Separator.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Separator.svelte"}},{"range":{"start":712724,"end":714905},"icon":"File","label":"ghostty-config/src/lib/components/settings/Switch.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Switch.svelte"}},{"range":{"start":714906,"end":716003},"icon":"File","label":"ghostty-config/src/lib/components/settings/Text.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Text.svelte"}},{"range":{"start":716004,"end":746683},"icon":"Folder","label":"data","metadata":null},{"range":{"start":716009,"end":746683},"icon":"File","label":"ghostty-config/src/lib/data/settings.ts","metadata":{"path":"ghostty-config/src/lib/data/settings.ts"}},{"range":{"start":746483,"end":746682},"icon":"XCircle","label":"'config' is defined but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":746684,"end":752043},"icon":"Folder","label":"images","metadata":null},{"range":{"start":746691,"end":749699},"icon":"File","label":"ghostty-config/src/lib/images/ghost.svg","metadata":{"path":"ghostty-config/src/lib/images/ghost.svg"}},{"range":{"start":749700,"end":752043},"icon":"Folder","label":"tabs","metadata":null},{"range":{"start":749705,"end":751516},"icon":"File","label":"ghostty-config/src/lib/images/tabs/github.svg","metadata":{"path":"ghostty-config/src/lib/images/tabs/github.svg"}},{"range":{"start":751517,"end":752043},"icon":"File","label":"ghostty-config/src/lib/images/tabs/gtk.svg","metadata":{"path":"ghostty-config/src/lib/images/tabs/gtk.svg"}},{"range":{"start":752044,"end":759722},"icon":"Folder","label":"stores","metadata":null},{"range":{"start":752051,"end":758338},"icon":"File","label":"ghostty-config/src/lib/stores/config.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/config.svelte.ts"}},{"range":{"start":758339,"end":759548},"icon":"File","label":"ghostty-config/src/lib/stores/history.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/history.svelte.ts"}},{"range":{"start":759549,"end":759722},"icon":"File","label":"ghostty-config/src/lib/stores/state.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/state.svelte.ts"}},{"range":{"start":759723,"end":766381},"icon":"Folder","label":"utils","metadata":null},{"range":{"start":759729,"end":762651},"icon":"File","label":"ghostty-config/src/lib/utils/colors.ts","metadata":{"path":"ghostty-config/src/lib/utils/colors.ts"}},{"range":{"start":762652,"end":764181},"icon":"File","label":"ghostty-config/src/lib/utils/parse.ts","metadata":{"path":"ghostty-config/src/lib/utils/parse.ts"}},{"range":{"start":764182,"end":766381},"icon":"File","label":"ghostty-config/src/lib/utils/themeHandler.ts","metadata":{"path":"ghostty-config/src/lib/utils/themeHandler.ts"}},{"range":{"start":766030,"end":766380},"icon":"XCircle","label":"Closing curly brace appears on the same line as the subsequent block.","metadata":null},{"range":{"start":766382,"end":781239},"icon":"Folder","label":"views","metadata":null},{"range":{"start":766388,"end":767801},"icon":"File","label":"ghostty-config/src/lib/views/BaseColorPreview.svelte","metadata":{"path":"ghostty-config/src/lib/views/BaseColorPreview.svelte"}},{"range":{"start":767802,"end":770150},"icon":"File","label":"ghostty-config/src/lib/views/CursorPreview.svelte","metadata":{"path":"ghostty-config/src/lib/views/CursorPreview.svelte"}},{"range":{"start":770151,"end":773668},"icon":"File","label":"ghostty-config/src/lib/views/FontPreview.svelte","metadata":{"path":"ghostty-config/src/lib/views/FontPreview.svelte"}},{"range":{"start":773669,"end":775942},"icon":"File","label":"ghostty-config/src/lib/views/Page.svelte","metadata":{"path":"ghostty-config/src/lib/views/Page.svelte"}},{"range":{"start":775943,"end":781239},"icon":"File","label":"ghostty-config/src/lib/views/PalettePreview.svelte","metadata":{"path":"ghostty-config/src/lib/views/PalettePreview.svelte"}},{"range":{"start":781240,"end":805350},"icon":"Folder","label":"routes","metadata":null},{"range":{"start":781247,"end":789614},"icon":"File","label":"ghostty-config/src/routes/+layout.svelte","metadata":{"path":"ghostty-config/src/routes/+layout.svelte"}},{"range":{"start":789615,"end":789688},"icon":"File","label":"ghostty-config/src/routes/+layout.ts","metadata":{"path":"ghostty-config/src/routes/+layout.ts"}},{"range":{"start":789689,"end":793931},"icon":"File","label":"ghostty-config/src/routes/+page.svelte","metadata":{"path":"ghostty-config/src/routes/+page.svelte"}},{"range":{"start":793932,"end":794125},"icon":"File","label":"ghostty-config/src/routes/+page.ts","metadata":{"path":"ghostty-config/src/routes/+page.ts"}},{"range":{"start":794126,"end":800559},"icon":"Folder","label":"app/import-export","metadata":null},{"range":{"start":794144,"end":800559},"icon":"File","label":"ghostty-config/src/routes/app/import-export/+page.svelte","metadata":{"path":"ghostty-config/src/routes/app/import-export/+page.svelte"}},{"range":{"start":800560,"end":805350},"icon":"Folder","label":"settings","metadata":null},{"range":{"start":800569,"end":804993},"icon":"Folder","label":"[category]","metadata":null},{"range":{"start":800580,"end":804993},"icon":"File","label":"ghostty-config/src/routes/settings/[category]/+page.svelte","metadata":{"path":"ghostty-config/src/routes/settings/[category]/+page.svelte"}},{"range":{"start":804994,"end":805350},"icon":"Folder","label":"keybinds","metadata":null},{"range":{"start":805003,"end":805349},"icon":"File","label":"ghostty-config/src/routes/settings/keybinds/+page.svelte","metadata":{"path":"ghostty-config/src/routes/settings/keybinds/+page.svelte"}},{"range":{"start":805354,"end":808657},"icon":"File","label":"ghostty-config/src/lib/components/settings/Color.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Color.svelte"}},{"range":{"start":808659,"end":809573},"icon":"File","label":"ghostty-config/src/lib/components/settings/Dropdown.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Dropdown.svelte"}},{"range":{"start":809575,"end":810582},"icon":"File","label":"ghostty-config/src/lib/components/settings/Palette.svelte","metadata":{"path":"ghostty-config/src/lib/components/settings/Palette.svelte"}},{"range":{"start":810584,"end":818155},"icon":"File","label":"ghostty-config/src/lib/components/ColorPicker.svelte","metadata":{"path":"ghostty-config/src/lib/components/ColorPicker.svelte"}},{"range":{"start":818157,"end":848831},"icon":"File","label":"ghostty-config/src/lib/data/settings.ts","metadata":{"path":"ghostty-config/src/lib/data/settings.ts"}},{"range":{"start":848631,"end":848830},"icon":"XCircle","label":"'config' is defined but never used. Allowed unused vars must match /^_/u.","metadata":null},{"range":{"start":848833,"end":855120},"icon":"File","label":"ghostty-config/src/lib/stores/config.svelte.ts","metadata":{"path":"ghostty-config/src/lib/stores/config.svelte.ts"}},{"range":{"start":855122,"end":858044},"icon":"File","label":"ghostty-config/src/lib/utils/colors.ts","metadata":{"path":"ghostty-config/src/lib/utils/colors.ts"}},{"range":{"start":858046,"end":859575},"icon":"File","label":"ghostty-config/src/lib/utils/parse.ts","metadata":{"path":"ghostty-config/src/lib/utils/parse.ts"}},{"range":{"start":859577,"end":861776},"icon":"File","label":"ghostty-config/src/lib/utils/themeHandler.ts","metadata":{"path":"ghostty-config/src/lib/utils/themeHandler.ts"}},{"range":{"start":861425,"end":861775},"icon":"XCircle","label":"Closing curly brace appears on the same line as the subsequent block.","metadata":null},{"range":{"start":861778,"end":868193},"icon":"File","label":"ghostty-config/src/routes/app/import-export/+page.svelte","metadata":{"path":"ghostty-config/src/routes/app/import-export/+page.svelte"}},{"range":{"start":868195,"end":872608},"icon":"File","label":"ghostty-config/src/routes/settings/[category]/+page.svelte","metadata":{"path":"ghostty-config/src/routes/settings/[category]/+page.svelte"}},{"range":{"start":872610,"end":880977},"icon":"File","label":"ghostty-config/src/routes/+layout.svelte","metadata":{"path":"ghostty-config/src/routes/+layout.svelte"}}]}